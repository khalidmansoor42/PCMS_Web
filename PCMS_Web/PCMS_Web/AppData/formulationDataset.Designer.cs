//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PCMS_Web.AppData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("formulationDataset")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class formulationDataset : global::System.Data.DataSet {
        
        private illnessHistoryDataTable tableillnessHistory;
        
        private drugHistoryDataTable tabledrugHistory;
        
        private personalDetailsDataTable tablepersonalDetails;
        
        private familyHistoryDataTable tablefamilyHistory;
        
        private ComplaintDataTable tableComplaint;
        
        private mentalStateExaminationDataTable tablementalStateExamination;
        
        private generalPhysicalExaminationDataTable tablegeneralPhysicalExamination;
        
        private systematicExaminationDataTable tablesystematicExamination;
        
        private investigationDataTable tableinvestigation;
        
        private sysMedicationDataTable tablesysMedication;
        
        private counsellingDataTable tablecounselling;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public formulationDataset() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected formulationDataset(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["illnessHistory"] != null)) {
                    base.Tables.Add(new illnessHistoryDataTable(ds.Tables["illnessHistory"]));
                }
                if ((ds.Tables["drugHistory"] != null)) {
                    base.Tables.Add(new drugHistoryDataTable(ds.Tables["drugHistory"]));
                }
                if ((ds.Tables["personalDetails"] != null)) {
                    base.Tables.Add(new personalDetailsDataTable(ds.Tables["personalDetails"]));
                }
                if ((ds.Tables["familyHistory"] != null)) {
                    base.Tables.Add(new familyHistoryDataTable(ds.Tables["familyHistory"]));
                }
                if ((ds.Tables["Complaint"] != null)) {
                    base.Tables.Add(new ComplaintDataTable(ds.Tables["Complaint"]));
                }
                if ((ds.Tables["mentalStateExamination"] != null)) {
                    base.Tables.Add(new mentalStateExaminationDataTable(ds.Tables["mentalStateExamination"]));
                }
                if ((ds.Tables["generalPhysicalExamination"] != null)) {
                    base.Tables.Add(new generalPhysicalExaminationDataTable(ds.Tables["generalPhysicalExamination"]));
                }
                if ((ds.Tables["systematicExamination"] != null)) {
                    base.Tables.Add(new systematicExaminationDataTable(ds.Tables["systematicExamination"]));
                }
                if ((ds.Tables["investigation"] != null)) {
                    base.Tables.Add(new investigationDataTable(ds.Tables["investigation"]));
                }
                if ((ds.Tables["sysMedication"] != null)) {
                    base.Tables.Add(new sysMedicationDataTable(ds.Tables["sysMedication"]));
                }
                if ((ds.Tables["counselling"] != null)) {
                    base.Tables.Add(new counsellingDataTable(ds.Tables["counselling"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public illnessHistoryDataTable illnessHistory {
            get {
                return this.tableillnessHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public drugHistoryDataTable drugHistory {
            get {
                return this.tabledrugHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public personalDetailsDataTable personalDetails {
            get {
                return this.tablepersonalDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public familyHistoryDataTable familyHistory {
            get {
                return this.tablefamilyHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ComplaintDataTable Complaint {
            get {
                return this.tableComplaint;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mentalStateExaminationDataTable mentalStateExamination {
            get {
                return this.tablementalStateExamination;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public generalPhysicalExaminationDataTable generalPhysicalExamination {
            get {
                return this.tablegeneralPhysicalExamination;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public systematicExaminationDataTable systematicExamination {
            get {
                return this.tablesystematicExamination;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public investigationDataTable investigation {
            get {
                return this.tableinvestigation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sysMedicationDataTable sysMedication {
            get {
                return this.tablesysMedication;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public counsellingDataTable counselling {
            get {
                return this.tablecounselling;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            formulationDataset cln = ((formulationDataset)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["illnessHistory"] != null)) {
                    base.Tables.Add(new illnessHistoryDataTable(ds.Tables["illnessHistory"]));
                }
                if ((ds.Tables["drugHistory"] != null)) {
                    base.Tables.Add(new drugHistoryDataTable(ds.Tables["drugHistory"]));
                }
                if ((ds.Tables["personalDetails"] != null)) {
                    base.Tables.Add(new personalDetailsDataTable(ds.Tables["personalDetails"]));
                }
                if ((ds.Tables["familyHistory"] != null)) {
                    base.Tables.Add(new familyHistoryDataTable(ds.Tables["familyHistory"]));
                }
                if ((ds.Tables["Complaint"] != null)) {
                    base.Tables.Add(new ComplaintDataTable(ds.Tables["Complaint"]));
                }
                if ((ds.Tables["mentalStateExamination"] != null)) {
                    base.Tables.Add(new mentalStateExaminationDataTable(ds.Tables["mentalStateExamination"]));
                }
                if ((ds.Tables["generalPhysicalExamination"] != null)) {
                    base.Tables.Add(new generalPhysicalExaminationDataTable(ds.Tables["generalPhysicalExamination"]));
                }
                if ((ds.Tables["systematicExamination"] != null)) {
                    base.Tables.Add(new systematicExaminationDataTable(ds.Tables["systematicExamination"]));
                }
                if ((ds.Tables["investigation"] != null)) {
                    base.Tables.Add(new investigationDataTable(ds.Tables["investigation"]));
                }
                if ((ds.Tables["sysMedication"] != null)) {
                    base.Tables.Add(new sysMedicationDataTable(ds.Tables["sysMedication"]));
                }
                if ((ds.Tables["counselling"] != null)) {
                    base.Tables.Add(new counsellingDataTable(ds.Tables["counselling"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableillnessHistory = ((illnessHistoryDataTable)(base.Tables["illnessHistory"]));
            if ((initTable == true)) {
                if ((this.tableillnessHistory != null)) {
                    this.tableillnessHistory.InitVars();
                }
            }
            this.tabledrugHistory = ((drugHistoryDataTable)(base.Tables["drugHistory"]));
            if ((initTable == true)) {
                if ((this.tabledrugHistory != null)) {
                    this.tabledrugHistory.InitVars();
                }
            }
            this.tablepersonalDetails = ((personalDetailsDataTable)(base.Tables["personalDetails"]));
            if ((initTable == true)) {
                if ((this.tablepersonalDetails != null)) {
                    this.tablepersonalDetails.InitVars();
                }
            }
            this.tablefamilyHistory = ((familyHistoryDataTable)(base.Tables["familyHistory"]));
            if ((initTable == true)) {
                if ((this.tablefamilyHistory != null)) {
                    this.tablefamilyHistory.InitVars();
                }
            }
            this.tableComplaint = ((ComplaintDataTable)(base.Tables["Complaint"]));
            if ((initTable == true)) {
                if ((this.tableComplaint != null)) {
                    this.tableComplaint.InitVars();
                }
            }
            this.tablementalStateExamination = ((mentalStateExaminationDataTable)(base.Tables["mentalStateExamination"]));
            if ((initTable == true)) {
                if ((this.tablementalStateExamination != null)) {
                    this.tablementalStateExamination.InitVars();
                }
            }
            this.tablegeneralPhysicalExamination = ((generalPhysicalExaminationDataTable)(base.Tables["generalPhysicalExamination"]));
            if ((initTable == true)) {
                if ((this.tablegeneralPhysicalExamination != null)) {
                    this.tablegeneralPhysicalExamination.InitVars();
                }
            }
            this.tablesystematicExamination = ((systematicExaminationDataTable)(base.Tables["systematicExamination"]));
            if ((initTable == true)) {
                if ((this.tablesystematicExamination != null)) {
                    this.tablesystematicExamination.InitVars();
                }
            }
            this.tableinvestigation = ((investigationDataTable)(base.Tables["investigation"]));
            if ((initTable == true)) {
                if ((this.tableinvestigation != null)) {
                    this.tableinvestigation.InitVars();
                }
            }
            this.tablesysMedication = ((sysMedicationDataTable)(base.Tables["sysMedication"]));
            if ((initTable == true)) {
                if ((this.tablesysMedication != null)) {
                    this.tablesysMedication.InitVars();
                }
            }
            this.tablecounselling = ((counsellingDataTable)(base.Tables["counselling"]));
            if ((initTable == true)) {
                if ((this.tablecounselling != null)) {
                    this.tablecounselling.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "formulationDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/formulationDataset.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableillnessHistory = new illnessHistoryDataTable();
            base.Tables.Add(this.tableillnessHistory);
            this.tabledrugHistory = new drugHistoryDataTable();
            base.Tables.Add(this.tabledrugHistory);
            this.tablepersonalDetails = new personalDetailsDataTable();
            base.Tables.Add(this.tablepersonalDetails);
            this.tablefamilyHistory = new familyHistoryDataTable();
            base.Tables.Add(this.tablefamilyHistory);
            this.tableComplaint = new ComplaintDataTable();
            base.Tables.Add(this.tableComplaint);
            this.tablementalStateExamination = new mentalStateExaminationDataTable();
            base.Tables.Add(this.tablementalStateExamination);
            this.tablegeneralPhysicalExamination = new generalPhysicalExaminationDataTable();
            base.Tables.Add(this.tablegeneralPhysicalExamination);
            this.tablesystematicExamination = new systematicExaminationDataTable();
            base.Tables.Add(this.tablesystematicExamination);
            this.tableinvestigation = new investigationDataTable();
            base.Tables.Add(this.tableinvestigation);
            this.tablesysMedication = new sysMedicationDataTable();
            base.Tables.Add(this.tablesysMedication);
            this.tablecounselling = new counsellingDataTable();
            base.Tables.Add(this.tablecounselling);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeillnessHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedrugHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializepersonalDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefamilyHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeComplaint() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializementalStateExamination() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializegeneralPhysicalExamination() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializesystematicExamination() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinvestigation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializesysMedication() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecounselling() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            formulationDataset ds = new formulationDataset();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void illnessHistoryRowChangeEventHandler(object sender, illnessHistoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void drugHistoryRowChangeEventHandler(object sender, drugHistoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void personalDetailsRowChangeEventHandler(object sender, personalDetailsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void familyHistoryRowChangeEventHandler(object sender, familyHistoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ComplaintRowChangeEventHandler(object sender, ComplaintRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void mentalStateExaminationRowChangeEventHandler(object sender, mentalStateExaminationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void generalPhysicalExaminationRowChangeEventHandler(object sender, generalPhysicalExaminationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void systematicExaminationRowChangeEventHandler(object sender, systematicExaminationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void investigationRowChangeEventHandler(object sender, investigationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void sysMedicationRowChangeEventHandler(object sender, sysMedicationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void counsellingRowChangeEventHandler(object sender, counsellingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class illnessHistoryDataTable : global::System.Data.TypedTableBase<illnessHistoryRow> {
            
            private global::System.Data.DataColumn columnpatient_reg;
            
            private global::System.Data.DataColumn columnillHistoryText;
            
            private global::System.Data.DataColumn columncurrentTreatmentText;
            
            private global::System.Data.DataColumn columnpastMedHistoryText;
            
            private global::System.Data.DataColumn columnpastPsychHistoryText;
            
            private global::System.Data.DataColumn columncureRb;
            
            private global::System.Data.DataColumn columncureText;
            
            private global::System.Data.DataColumn columnpreviousText;
            
            private global::System.Data.DataColumn columnpreviousAdmissions;
            
            private global::System.Data.DataColumn columntreatmentHistoryDd;
            
            private global::System.Data.DataColumn columnpastMedicalHistoryDd;
            
            private global::System.Data.DataColumn columnpastPsychiatricHistoryDd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public illnessHistoryDataTable() {
                this.TableName = "illnessHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal illnessHistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected illnessHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patient_regColumn {
                get {
                    return this.columnpatient_reg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn illHistoryTextColumn {
                get {
                    return this.columnillHistoryText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn currentTreatmentTextColumn {
                get {
                    return this.columncurrentTreatmentText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pastMedHistoryTextColumn {
                get {
                    return this.columnpastMedHistoryText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pastPsychHistoryTextColumn {
                get {
                    return this.columnpastPsychHistoryText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cureRbColumn {
                get {
                    return this.columncureRb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cureTextColumn {
                get {
                    return this.columncureText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn previousTextColumn {
                get {
                    return this.columnpreviousText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn previousAdmissionsColumn {
                get {
                    return this.columnpreviousAdmissions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treatmentHistoryDdColumn {
                get {
                    return this.columntreatmentHistoryDd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pastMedicalHistoryDdColumn {
                get {
                    return this.columnpastMedicalHistoryDd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pastPsychiatricHistoryDdColumn {
                get {
                    return this.columnpastPsychiatricHistoryDd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public illnessHistoryRow this[int index] {
                get {
                    return ((illnessHistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event illnessHistoryRowChangeEventHandler illnessHistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event illnessHistoryRowChangeEventHandler illnessHistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event illnessHistoryRowChangeEventHandler illnessHistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event illnessHistoryRowChangeEventHandler illnessHistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddillnessHistoryRow(illnessHistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public illnessHistoryRow AddillnessHistoryRow(int patient_reg, string illHistoryText, string currentTreatmentText, string pastMedHistoryText, string pastPsychHistoryText, int cureRb, string cureText, string previousText, int previousAdmissions, string treatmentHistoryDd, string pastMedicalHistoryDd, string pastPsychiatricHistoryDd) {
                illnessHistoryRow rowillnessHistoryRow = ((illnessHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        patient_reg,
                        illHistoryText,
                        currentTreatmentText,
                        pastMedHistoryText,
                        pastPsychHistoryText,
                        cureRb,
                        cureText,
                        previousText,
                        previousAdmissions,
                        treatmentHistoryDd,
                        pastMedicalHistoryDd,
                        pastPsychiatricHistoryDd};
                rowillnessHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowillnessHistoryRow);
                return rowillnessHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                illnessHistoryDataTable cln = ((illnessHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new illnessHistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnpatient_reg = base.Columns["patient_reg"];
                this.columnillHistoryText = base.Columns["illHistoryText"];
                this.columncurrentTreatmentText = base.Columns["currentTreatmentText"];
                this.columnpastMedHistoryText = base.Columns["pastMedHistoryText"];
                this.columnpastPsychHistoryText = base.Columns["pastPsychHistoryText"];
                this.columncureRb = base.Columns["cureRb"];
                this.columncureText = base.Columns["cureText"];
                this.columnpreviousText = base.Columns["previousText"];
                this.columnpreviousAdmissions = base.Columns["previousAdmissions"];
                this.columntreatmentHistoryDd = base.Columns["treatmentHistoryDd"];
                this.columnpastMedicalHistoryDd = base.Columns["pastMedicalHistoryDd"];
                this.columnpastPsychiatricHistoryDd = base.Columns["pastPsychiatricHistoryDd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnpatient_reg = new global::System.Data.DataColumn("patient_reg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatient_reg);
                this.columnillHistoryText = new global::System.Data.DataColumn("illHistoryText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnillHistoryText);
                this.columncurrentTreatmentText = new global::System.Data.DataColumn("currentTreatmentText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurrentTreatmentText);
                this.columnpastMedHistoryText = new global::System.Data.DataColumn("pastMedHistoryText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpastMedHistoryText);
                this.columnpastPsychHistoryText = new global::System.Data.DataColumn("pastPsychHistoryText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpastPsychHistoryText);
                this.columncureRb = new global::System.Data.DataColumn("cureRb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncureRb);
                this.columncureText = new global::System.Data.DataColumn("cureText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncureText);
                this.columnpreviousText = new global::System.Data.DataColumn("previousText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpreviousText);
                this.columnpreviousAdmissions = new global::System.Data.DataColumn("previousAdmissions", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpreviousAdmissions);
                this.columntreatmentHistoryDd = new global::System.Data.DataColumn("treatmentHistoryDd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreatmentHistoryDd);
                this.columnpastMedicalHistoryDd = new global::System.Data.DataColumn("pastMedicalHistoryDd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpastMedicalHistoryDd);
                this.columnpastPsychiatricHistoryDd = new global::System.Data.DataColumn("pastPsychiatricHistoryDd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpastPsychiatricHistoryDd);
                this.columnpatient_reg.AllowDBNull = false;
                this.columnillHistoryText.MaxLength = 2147483647;
                this.columncurrentTreatmentText.MaxLength = 2147483647;
                this.columnpastMedHistoryText.MaxLength = 2147483647;
                this.columnpastPsychHistoryText.MaxLength = 2147483647;
                this.columncureRb.AllowDBNull = false;
                this.columncureText.MaxLength = 2147483647;
                this.columnpreviousText.MaxLength = 2147483647;
                this.columntreatmentHistoryDd.MaxLength = 50;
                this.columnpastMedicalHistoryDd.MaxLength = 50;
                this.columnpastPsychiatricHistoryDd.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public illnessHistoryRow NewillnessHistoryRow() {
                return ((illnessHistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new illnessHistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(illnessHistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.illnessHistoryRowChanged != null)) {
                    this.illnessHistoryRowChanged(this, new illnessHistoryRowChangeEvent(((illnessHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.illnessHistoryRowChanging != null)) {
                    this.illnessHistoryRowChanging(this, new illnessHistoryRowChangeEvent(((illnessHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.illnessHistoryRowDeleted != null)) {
                    this.illnessHistoryRowDeleted(this, new illnessHistoryRowChangeEvent(((illnessHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.illnessHistoryRowDeleting != null)) {
                    this.illnessHistoryRowDeleting(this, new illnessHistoryRowChangeEvent(((illnessHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveillnessHistoryRow(illnessHistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                formulationDataset ds = new formulationDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "illnessHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class drugHistoryDataTable : global::System.Data.TypedTableBase<drugHistoryRow> {
            
            private global::System.Data.DataColumn columnpatient_reg;
            
            private global::System.Data.DataColumn columndrugsText;
            
            private global::System.Data.DataColumn columndosageText;
            
            private global::System.Data.DataColumn columndurationText;
            
            private global::System.Data.DataColumn columnreponseText;
            
            private global::System.Data.DataColumn columnreactionText;
            
            private global::System.Data.DataColumn columnfaithTreatmentText;
            
            private global::System.Data.DataColumn columnforensicHistoryText;
            
            private global::System.Data.DataColumn columnfaithTreatmentRadio;
            
            private global::System.Data.DataColumn columnforensicHistoryRadio;
            
            private global::System.Data.DataColumn columnpoliceCaseRadio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public drugHistoryDataTable() {
                this.TableName = "drugHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal drugHistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected drugHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patient_regColumn {
                get {
                    return this.columnpatient_reg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn drugsTextColumn {
                get {
                    return this.columndrugsText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dosageTextColumn {
                get {
                    return this.columndosageText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn durationTextColumn {
                get {
                    return this.columndurationText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reponseTextColumn {
                get {
                    return this.columnreponseText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reactionTextColumn {
                get {
                    return this.columnreactionText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn faithTreatmentTextColumn {
                get {
                    return this.columnfaithTreatmentText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn forensicHistoryTextColumn {
                get {
                    return this.columnforensicHistoryText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn faithTreatmentRadioColumn {
                get {
                    return this.columnfaithTreatmentRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn forensicHistoryRadioColumn {
                get {
                    return this.columnforensicHistoryRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn policeCaseRadioColumn {
                get {
                    return this.columnpoliceCaseRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public drugHistoryRow this[int index] {
                get {
                    return ((drugHistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event drugHistoryRowChangeEventHandler drugHistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event drugHistoryRowChangeEventHandler drugHistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event drugHistoryRowChangeEventHandler drugHistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event drugHistoryRowChangeEventHandler drugHistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddrugHistoryRow(drugHistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public drugHistoryRow AdddrugHistoryRow(int patient_reg, string drugsText, string dosageText, string durationText, string reponseText, string reactionText, string faithTreatmentText, string forensicHistoryText, int faithTreatmentRadio, int forensicHistoryRadio, int policeCaseRadio) {
                drugHistoryRow rowdrugHistoryRow = ((drugHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        patient_reg,
                        drugsText,
                        dosageText,
                        durationText,
                        reponseText,
                        reactionText,
                        faithTreatmentText,
                        forensicHistoryText,
                        faithTreatmentRadio,
                        forensicHistoryRadio,
                        policeCaseRadio};
                rowdrugHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdrugHistoryRow);
                return rowdrugHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                drugHistoryDataTable cln = ((drugHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new drugHistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnpatient_reg = base.Columns["patient_reg"];
                this.columndrugsText = base.Columns["drugsText"];
                this.columndosageText = base.Columns["dosageText"];
                this.columndurationText = base.Columns["durationText"];
                this.columnreponseText = base.Columns["reponseText"];
                this.columnreactionText = base.Columns["reactionText"];
                this.columnfaithTreatmentText = base.Columns["faithTreatmentText"];
                this.columnforensicHistoryText = base.Columns["forensicHistoryText"];
                this.columnfaithTreatmentRadio = base.Columns["faithTreatmentRadio"];
                this.columnforensicHistoryRadio = base.Columns["forensicHistoryRadio"];
                this.columnpoliceCaseRadio = base.Columns["policeCaseRadio"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnpatient_reg = new global::System.Data.DataColumn("patient_reg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatient_reg);
                this.columndrugsText = new global::System.Data.DataColumn("drugsText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndrugsText);
                this.columndosageText = new global::System.Data.DataColumn("dosageText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndosageText);
                this.columndurationText = new global::System.Data.DataColumn("durationText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndurationText);
                this.columnreponseText = new global::System.Data.DataColumn("reponseText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreponseText);
                this.columnreactionText = new global::System.Data.DataColumn("reactionText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreactionText);
                this.columnfaithTreatmentText = new global::System.Data.DataColumn("faithTreatmentText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfaithTreatmentText);
                this.columnforensicHistoryText = new global::System.Data.DataColumn("forensicHistoryText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnforensicHistoryText);
                this.columnfaithTreatmentRadio = new global::System.Data.DataColumn("faithTreatmentRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfaithTreatmentRadio);
                this.columnforensicHistoryRadio = new global::System.Data.DataColumn("forensicHistoryRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnforensicHistoryRadio);
                this.columnpoliceCaseRadio = new global::System.Data.DataColumn("policeCaseRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpoliceCaseRadio);
                this.columnpatient_reg.AllowDBNull = false;
                this.columndrugsText.MaxLength = 2147483647;
                this.columndosageText.MaxLength = 2147483647;
                this.columndurationText.MaxLength = 2147483647;
                this.columnreponseText.MaxLength = 2147483647;
                this.columnreactionText.MaxLength = 2147483647;
                this.columnfaithTreatmentText.MaxLength = 2147483647;
                this.columnforensicHistoryText.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public drugHistoryRow NewdrugHistoryRow() {
                return ((drugHistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new drugHistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(drugHistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.drugHistoryRowChanged != null)) {
                    this.drugHistoryRowChanged(this, new drugHistoryRowChangeEvent(((drugHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.drugHistoryRowChanging != null)) {
                    this.drugHistoryRowChanging(this, new drugHistoryRowChangeEvent(((drugHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.drugHistoryRowDeleted != null)) {
                    this.drugHistoryRowDeleted(this, new drugHistoryRowChangeEvent(((drugHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.drugHistoryRowDeleting != null)) {
                    this.drugHistoryRowDeleting(this, new drugHistoryRowChangeEvent(((drugHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedrugHistoryRow(drugHistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                formulationDataset ds = new formulationDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "drugHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class personalDetailsDataTable : global::System.Data.TypedTableBase<personalDetailsRow> {
            
            private global::System.Data.DataColumn columnprenatalText;
            
            private global::System.Data.DataColumn columnperinatalText;
            
            private global::System.Data.DataColumn columnpostnatalText;
            
            private global::System.Data.DataColumn columnmilestoneRb;
            
            private global::System.Data.DataColumn columnchildhoodText;
            
            private global::System.Data.DataColumn columnschoolingText;
            
            private global::System.Data.DataColumn columneducationRb;
            
            private global::System.Data.DataColumn columnoccupationText;
            
            private global::System.Data.DataColumn columnincomeText;
            
            private global::System.Data.DataColumn columnpsychoSexualhistoryText;
            
            private global::System.Data.DataColumn columnmenstrualHistoryText;
            
            private global::System.Data.DataColumn columnmaritalStatusDD;
            
            private global::System.Data.DataColumn columngenderDD;
            
            private global::System.Data.DataColumn columnchildrenText;
            
            private global::System.Data.DataColumn columnspouseRelationshipText;
            
            private global::System.Data.DataColumn columnhobbiesText;
            
            private global::System.Data.DataColumn columncharacteristicText;
            
            private global::System.Data.DataColumn columnbehaviorText;
            
            private global::System.Data.DataColumn columnattitudeText;
            
            private global::System.Data.DataColumn columnrelationText;
            
            private global::System.Data.DataColumn columnachievementsText;
            
            private global::System.Data.DataColumn columnreligiousText;
            
            private global::System.Data.DataColumn columnaptitudesText;
            
            private global::System.Data.DataColumn columnotherText;
            
            private global::System.Data.DataColumn columnpatient_reg;
            
            private global::System.Data.DataColumn columnstartOfSchooling;
            
            private global::System.Data.DataColumn columnoccupation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public personalDetailsDataTable() {
                this.TableName = "personalDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal personalDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected personalDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prenatalTextColumn {
                get {
                    return this.columnprenatalText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn perinatalTextColumn {
                get {
                    return this.columnperinatalText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn postnatalTextColumn {
                get {
                    return this.columnpostnatalText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn milestoneRbColumn {
                get {
                    return this.columnmilestoneRb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn childhoodTextColumn {
                get {
                    return this.columnchildhoodText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn schoolingTextColumn {
                get {
                    return this.columnschoolingText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn educationRbColumn {
                get {
                    return this.columneducationRb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn occupationTextColumn {
                get {
                    return this.columnoccupationText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn incomeTextColumn {
                get {
                    return this.columnincomeText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn psychoSexualhistoryTextColumn {
                get {
                    return this.columnpsychoSexualhistoryText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn menstrualHistoryTextColumn {
                get {
                    return this.columnmenstrualHistoryText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn maritalStatusDDColumn {
                get {
                    return this.columnmaritalStatusDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn genderDDColumn {
                get {
                    return this.columngenderDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn childrenTextColumn {
                get {
                    return this.columnchildrenText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn spouseRelationshipTextColumn {
                get {
                    return this.columnspouseRelationshipText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hobbiesTextColumn {
                get {
                    return this.columnhobbiesText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn characteristicTextColumn {
                get {
                    return this.columncharacteristicText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn behaviorTextColumn {
                get {
                    return this.columnbehaviorText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attitudeTextColumn {
                get {
                    return this.columnattitudeText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn relationTextColumn {
                get {
                    return this.columnrelationText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn achievementsTextColumn {
                get {
                    return this.columnachievementsText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn religiousTextColumn {
                get {
                    return this.columnreligiousText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn aptitudesTextColumn {
                get {
                    return this.columnaptitudesText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn otherTextColumn {
                get {
                    return this.columnotherText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patient_regColumn {
                get {
                    return this.columnpatient_reg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn startOfSchoolingColumn {
                get {
                    return this.columnstartOfSchooling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn occupationColumn {
                get {
                    return this.columnoccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public personalDetailsRow this[int index] {
                get {
                    return ((personalDetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event personalDetailsRowChangeEventHandler personalDetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event personalDetailsRowChangeEventHandler personalDetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event personalDetailsRowChangeEventHandler personalDetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event personalDetailsRowChangeEventHandler personalDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddpersonalDetailsRow(personalDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public personalDetailsRow AddpersonalDetailsRow(
                        string prenatalText, 
                        string perinatalText, 
                        string postnatalText, 
                        int milestoneRb, 
                        string childhoodText, 
                        string schoolingText, 
                        int educationRb, 
                        string occupationText, 
                        string incomeText, 
                        string psychoSexualhistoryText, 
                        string menstrualHistoryText, 
                        string maritalStatusDD, 
                        string genderDD, 
                        int childrenText, 
                        string spouseRelationshipText, 
                        string hobbiesText, 
                        string characteristicText, 
                        string behaviorText, 
                        string attitudeText, 
                        string relationText, 
                        string achievementsText, 
                        string religiousText, 
                        string aptitudesText, 
                        string otherText, 
                        int patient_reg, 
                        string startOfSchooling, 
                        string occupation) {
                personalDetailsRow rowpersonalDetailsRow = ((personalDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        prenatalText,
                        perinatalText,
                        postnatalText,
                        milestoneRb,
                        childhoodText,
                        schoolingText,
                        educationRb,
                        occupationText,
                        incomeText,
                        psychoSexualhistoryText,
                        menstrualHistoryText,
                        maritalStatusDD,
                        genderDD,
                        childrenText,
                        spouseRelationshipText,
                        hobbiesText,
                        characteristicText,
                        behaviorText,
                        attitudeText,
                        relationText,
                        achievementsText,
                        religiousText,
                        aptitudesText,
                        otherText,
                        patient_reg,
                        startOfSchooling,
                        occupation};
                rowpersonalDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpersonalDetailsRow);
                return rowpersonalDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                personalDetailsDataTable cln = ((personalDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new personalDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnprenatalText = base.Columns["prenatalText"];
                this.columnperinatalText = base.Columns["perinatalText"];
                this.columnpostnatalText = base.Columns["postnatalText"];
                this.columnmilestoneRb = base.Columns["milestoneRb"];
                this.columnchildhoodText = base.Columns["childhoodText"];
                this.columnschoolingText = base.Columns["schoolingText"];
                this.columneducationRb = base.Columns["educationRb"];
                this.columnoccupationText = base.Columns["occupationText"];
                this.columnincomeText = base.Columns["incomeText"];
                this.columnpsychoSexualhistoryText = base.Columns["psychoSexualhistoryText"];
                this.columnmenstrualHistoryText = base.Columns["menstrualHistoryText"];
                this.columnmaritalStatusDD = base.Columns["maritalStatusDD"];
                this.columngenderDD = base.Columns["genderDD"];
                this.columnchildrenText = base.Columns["childrenText"];
                this.columnspouseRelationshipText = base.Columns["spouseRelationshipText"];
                this.columnhobbiesText = base.Columns["hobbiesText"];
                this.columncharacteristicText = base.Columns["characteristicText"];
                this.columnbehaviorText = base.Columns["behaviorText"];
                this.columnattitudeText = base.Columns["attitudeText"];
                this.columnrelationText = base.Columns["relationText"];
                this.columnachievementsText = base.Columns["achievementsText"];
                this.columnreligiousText = base.Columns["religiousText"];
                this.columnaptitudesText = base.Columns["aptitudesText"];
                this.columnotherText = base.Columns["otherText"];
                this.columnpatient_reg = base.Columns["patient_reg"];
                this.columnstartOfSchooling = base.Columns["startOfSchooling"];
                this.columnoccupation = base.Columns["occupation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnprenatalText = new global::System.Data.DataColumn("prenatalText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprenatalText);
                this.columnperinatalText = new global::System.Data.DataColumn("perinatalText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperinatalText);
                this.columnpostnatalText = new global::System.Data.DataColumn("postnatalText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostnatalText);
                this.columnmilestoneRb = new global::System.Data.DataColumn("milestoneRb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmilestoneRb);
                this.columnchildhoodText = new global::System.Data.DataColumn("childhoodText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchildhoodText);
                this.columnschoolingText = new global::System.Data.DataColumn("schoolingText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnschoolingText);
                this.columneducationRb = new global::System.Data.DataColumn("educationRb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneducationRb);
                this.columnoccupationText = new global::System.Data.DataColumn("occupationText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupationText);
                this.columnincomeText = new global::System.Data.DataColumn("incomeText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnincomeText);
                this.columnpsychoSexualhistoryText = new global::System.Data.DataColumn("psychoSexualhistoryText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpsychoSexualhistoryText);
                this.columnmenstrualHistoryText = new global::System.Data.DataColumn("menstrualHistoryText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenstrualHistoryText);
                this.columnmaritalStatusDD = new global::System.Data.DataColumn("maritalStatusDD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaritalStatusDD);
                this.columngenderDD = new global::System.Data.DataColumn("genderDD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngenderDD);
                this.columnchildrenText = new global::System.Data.DataColumn("childrenText", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchildrenText);
                this.columnspouseRelationshipText = new global::System.Data.DataColumn("spouseRelationshipText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspouseRelationshipText);
                this.columnhobbiesText = new global::System.Data.DataColumn("hobbiesText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhobbiesText);
                this.columncharacteristicText = new global::System.Data.DataColumn("characteristicText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncharacteristicText);
                this.columnbehaviorText = new global::System.Data.DataColumn("behaviorText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbehaviorText);
                this.columnattitudeText = new global::System.Data.DataColumn("attitudeText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattitudeText);
                this.columnrelationText = new global::System.Data.DataColumn("relationText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrelationText);
                this.columnachievementsText = new global::System.Data.DataColumn("achievementsText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnachievementsText);
                this.columnreligiousText = new global::System.Data.DataColumn("religiousText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreligiousText);
                this.columnaptitudesText = new global::System.Data.DataColumn("aptitudesText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaptitudesText);
                this.columnotherText = new global::System.Data.DataColumn("otherText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherText);
                this.columnpatient_reg = new global::System.Data.DataColumn("patient_reg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatient_reg);
                this.columnstartOfSchooling = new global::System.Data.DataColumn("startOfSchooling", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartOfSchooling);
                this.columnoccupation = new global::System.Data.DataColumn("occupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation);
                this.columnprenatalText.MaxLength = 50;
                this.columnperinatalText.MaxLength = 50;
                this.columnpostnatalText.MaxLength = 50;
                this.columnchildhoodText.MaxLength = 50;
                this.columnschoolingText.MaxLength = 50;
                this.columnoccupationText.MaxLength = 50;
                this.columnincomeText.MaxLength = 50;
                this.columnpsychoSexualhistoryText.MaxLength = 50;
                this.columnmenstrualHistoryText.MaxLength = 50;
                this.columnmaritalStatusDD.MaxLength = 50;
                this.columngenderDD.MaxLength = 10;
                this.columnspouseRelationshipText.MaxLength = 50;
                this.columnhobbiesText.MaxLength = 50;
                this.columncharacteristicText.MaxLength = 50;
                this.columnbehaviorText.MaxLength = 50;
                this.columnattitudeText.MaxLength = 50;
                this.columnrelationText.MaxLength = 50;
                this.columnachievementsText.MaxLength = 50;
                this.columnreligiousText.MaxLength = 50;
                this.columnaptitudesText.MaxLength = 50;
                this.columnotherText.MaxLength = 50;
                this.columnpatient_reg.AllowDBNull = false;
                this.columnstartOfSchooling.MaxLength = 50;
                this.columnoccupation.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public personalDetailsRow NewpersonalDetailsRow() {
                return ((personalDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new personalDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(personalDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.personalDetailsRowChanged != null)) {
                    this.personalDetailsRowChanged(this, new personalDetailsRowChangeEvent(((personalDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.personalDetailsRowChanging != null)) {
                    this.personalDetailsRowChanging(this, new personalDetailsRowChangeEvent(((personalDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.personalDetailsRowDeleted != null)) {
                    this.personalDetailsRowDeleted(this, new personalDetailsRowChangeEvent(((personalDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.personalDetailsRowDeleting != null)) {
                    this.personalDetailsRowDeleting(this, new personalDetailsRowChangeEvent(((personalDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovepersonalDetailsRow(personalDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                formulationDataset ds = new formulationDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "personalDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class familyHistoryDataTable : global::System.Data.TypedTableBase<familyHistoryRow> {
            
            private global::System.Data.DataColumn columntemperamentDD;
            
            private global::System.Data.DataColumn columnfamilyPsychIllDD;
            
            private global::System.Data.DataColumn columnfatherText;
            
            private global::System.Data.DataColumn columnmotherText;
            
            private global::System.Data.DataColumn columnsiblingsText;
            
            private global::System.Data.DataColumn columnillnessTypeDD;
            
            private global::System.Data.DataColumn columnabuseHistoryDD;
            
            private global::System.Data.DataColumn columntypeText;
            
            private global::System.Data.DataColumn columndurationText;
            
            private global::System.Data.DataColumn columnamountText;
            
            private global::System.Data.DataColumn columnabuseModeText;
            
            private global::System.Data.DataColumn columndetoxificationText;
            
            private global::System.Data.DataColumn columnpatient_reg;
            
            private global::System.Data.DataColumn columnadmissionToxificationRadio;
            
            private global::System.Data.DataColumn columnnoOfDetoxAdmissionsDd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familyHistoryDataTable() {
                this.TableName = "familyHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal familyHistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected familyHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn temperamentDDColumn {
                get {
                    return this.columntemperamentDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn familyPsychIllDDColumn {
                get {
                    return this.columnfamilyPsychIllDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fatherTextColumn {
                get {
                    return this.columnfatherText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn motherTextColumn {
                get {
                    return this.columnmotherText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn siblingsTextColumn {
                get {
                    return this.columnsiblingsText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn illnessTypeDDColumn {
                get {
                    return this.columnillnessTypeDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn abuseHistoryDDColumn {
                get {
                    return this.columnabuseHistoryDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn typeTextColumn {
                get {
                    return this.columntypeText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn durationTextColumn {
                get {
                    return this.columndurationText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountTextColumn {
                get {
                    return this.columnamountText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn abuseModeTextColumn {
                get {
                    return this.columnabuseModeText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn detoxificationTextColumn {
                get {
                    return this.columndetoxificationText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patient_regColumn {
                get {
                    return this.columnpatient_reg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn admissionToxificationRadioColumn {
                get {
                    return this.columnadmissionToxificationRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn noOfDetoxAdmissionsDdColumn {
                get {
                    return this.columnnoOfDetoxAdmissionsDd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familyHistoryRow this[int index] {
                get {
                    return ((familyHistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event familyHistoryRowChangeEventHandler familyHistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event familyHistoryRowChangeEventHandler familyHistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event familyHistoryRowChangeEventHandler familyHistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event familyHistoryRowChangeEventHandler familyHistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddfamilyHistoryRow(familyHistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familyHistoryRow AddfamilyHistoryRow(string temperamentDD, string familyPsychIllDD, string fatherText, string motherText, string siblingsText, string illnessTypeDD, string abuseHistoryDD, string typeText, string durationText, string amountText, string abuseModeText, string detoxificationText, int patient_reg, int admissionToxificationRadio, int noOfDetoxAdmissionsDd) {
                familyHistoryRow rowfamilyHistoryRow = ((familyHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        temperamentDD,
                        familyPsychIllDD,
                        fatherText,
                        motherText,
                        siblingsText,
                        illnessTypeDD,
                        abuseHistoryDD,
                        typeText,
                        durationText,
                        amountText,
                        abuseModeText,
                        detoxificationText,
                        patient_reg,
                        admissionToxificationRadio,
                        noOfDetoxAdmissionsDd};
                rowfamilyHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfamilyHistoryRow);
                return rowfamilyHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                familyHistoryDataTable cln = ((familyHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new familyHistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columntemperamentDD = base.Columns["temperamentDD"];
                this.columnfamilyPsychIllDD = base.Columns["familyPsychIllDD"];
                this.columnfatherText = base.Columns["fatherText"];
                this.columnmotherText = base.Columns["motherText"];
                this.columnsiblingsText = base.Columns["siblingsText"];
                this.columnillnessTypeDD = base.Columns["illnessTypeDD"];
                this.columnabuseHistoryDD = base.Columns["abuseHistoryDD"];
                this.columntypeText = base.Columns["typeText"];
                this.columndurationText = base.Columns["durationText"];
                this.columnamountText = base.Columns["amountText"];
                this.columnabuseModeText = base.Columns["abuseModeText"];
                this.columndetoxificationText = base.Columns["detoxificationText"];
                this.columnpatient_reg = base.Columns["patient_reg"];
                this.columnadmissionToxificationRadio = base.Columns["admissionToxificationRadio"];
                this.columnnoOfDetoxAdmissionsDd = base.Columns["noOfDetoxAdmissionsDd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columntemperamentDD = new global::System.Data.DataColumn("temperamentDD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntemperamentDD);
                this.columnfamilyPsychIllDD = new global::System.Data.DataColumn("familyPsychIllDD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfamilyPsychIllDD);
                this.columnfatherText = new global::System.Data.DataColumn("fatherText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfatherText);
                this.columnmotherText = new global::System.Data.DataColumn("motherText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmotherText);
                this.columnsiblingsText = new global::System.Data.DataColumn("siblingsText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsiblingsText);
                this.columnillnessTypeDD = new global::System.Data.DataColumn("illnessTypeDD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnillnessTypeDD);
                this.columnabuseHistoryDD = new global::System.Data.DataColumn("abuseHistoryDD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnabuseHistoryDD);
                this.columntypeText = new global::System.Data.DataColumn("typeText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntypeText);
                this.columndurationText = new global::System.Data.DataColumn("durationText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndurationText);
                this.columnamountText = new global::System.Data.DataColumn("amountText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamountText);
                this.columnabuseModeText = new global::System.Data.DataColumn("abuseModeText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnabuseModeText);
                this.columndetoxificationText = new global::System.Data.DataColumn("detoxificationText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndetoxificationText);
                this.columnpatient_reg = new global::System.Data.DataColumn("patient_reg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatient_reg);
                this.columnadmissionToxificationRadio = new global::System.Data.DataColumn("admissionToxificationRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadmissionToxificationRadio);
                this.columnnoOfDetoxAdmissionsDd = new global::System.Data.DataColumn("noOfDetoxAdmissionsDd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoOfDetoxAdmissionsDd);
                this.columntemperamentDD.MaxLength = 50;
                this.columnfamilyPsychIllDD.MaxLength = 50;
                this.columnfatherText.MaxLength = 50;
                this.columnmotherText.MaxLength = 50;
                this.columnsiblingsText.MaxLength = 50;
                this.columnillnessTypeDD.MaxLength = 50;
                this.columnabuseHistoryDD.MaxLength = 50;
                this.columntypeText.MaxLength = 50;
                this.columndurationText.MaxLength = 50;
                this.columnamountText.MaxLength = 50;
                this.columnabuseModeText.MaxLength = 50;
                this.columndetoxificationText.MaxLength = 50;
                this.columnpatient_reg.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familyHistoryRow NewfamilyHistoryRow() {
                return ((familyHistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new familyHistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(familyHistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.familyHistoryRowChanged != null)) {
                    this.familyHistoryRowChanged(this, new familyHistoryRowChangeEvent(((familyHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.familyHistoryRowChanging != null)) {
                    this.familyHistoryRowChanging(this, new familyHistoryRowChangeEvent(((familyHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.familyHistoryRowDeleted != null)) {
                    this.familyHistoryRowDeleted(this, new familyHistoryRowChangeEvent(((familyHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.familyHistoryRowDeleting != null)) {
                    this.familyHistoryRowDeleting(this, new familyHistoryRowChangeEvent(((familyHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovefamilyHistoryRow(familyHistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                formulationDataset ds = new formulationDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "familyHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ComplaintDataTable : global::System.Data.TypedTableBase<ComplaintRow> {
            
            private global::System.Data.DataColumn columndiagnose_date;
            
            private global::System.Data.DataColumn columndisease_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ComplaintDataTable() {
                this.TableName = "Complaint";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ComplaintDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ComplaintDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn diagnose_dateColumn {
                get {
                    return this.columndiagnose_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn disease_nameColumn {
                get {
                    return this.columndisease_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ComplaintRow this[int index] {
                get {
                    return ((ComplaintRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ComplaintRowChangeEventHandler ComplaintRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ComplaintRowChangeEventHandler ComplaintRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ComplaintRowChangeEventHandler ComplaintRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ComplaintRowChangeEventHandler ComplaintRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddComplaintRow(ComplaintRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ComplaintRow AddComplaintRow(System.DateTime diagnose_date, string disease_name) {
                ComplaintRow rowComplaintRow = ((ComplaintRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        diagnose_date,
                        disease_name};
                rowComplaintRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowComplaintRow);
                return rowComplaintRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ComplaintDataTable cln = ((ComplaintDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ComplaintDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columndiagnose_date = base.Columns["diagnose_date"];
                this.columndisease_name = base.Columns["disease_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columndiagnose_date = new global::System.Data.DataColumn("diagnose_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiagnose_date);
                this.columndisease_name = new global::System.Data.DataColumn("disease_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisease_name);
                this.columndisease_name.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ComplaintRow NewComplaintRow() {
                return ((ComplaintRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ComplaintRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ComplaintRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ComplaintRowChanged != null)) {
                    this.ComplaintRowChanged(this, new ComplaintRowChangeEvent(((ComplaintRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ComplaintRowChanging != null)) {
                    this.ComplaintRowChanging(this, new ComplaintRowChangeEvent(((ComplaintRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ComplaintRowDeleted != null)) {
                    this.ComplaintRowDeleted(this, new ComplaintRowChangeEvent(((ComplaintRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ComplaintRowDeleting != null)) {
                    this.ComplaintRowDeleting(this, new ComplaintRowChangeEvent(((ComplaintRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveComplaintRow(ComplaintRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                formulationDataset ds = new formulationDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ComplaintDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mentalStateExaminationDataTable : global::System.Data.TypedTableBase<mentalStateExaminationRow> {
            
            private global::System.Data.DataColumn columnPhysical_Appearance;
            
            private global::System.Data.DataColumn columnDress;
            
            private global::System.Data.DataColumn columnPosture;
            
            private global::System.Data.DataColumn columnRapport;
            
            private global::System.Data.DataColumn columnEye_Contact;
            
            private global::System.Data.DataColumn columnCooperative;
            
            private global::System.Data.DataColumn columnCommunicative;
            
            private global::System.Data.DataColumn columnPsychomotor_activity;
            
            private global::System.Data.DataColumn columnMovements;
            
            private global::System.Data.DataColumn columnInvoluntary;
            
            private global::System.Data.DataColumn columnVoluntary;
            
            private global::System.Data.DataColumn columnSpeech;
            
            private global::System.Data.DataColumn columnTone;
            
            private global::System.Data.DataColumn columnRelevance;
            
            private global::System.Data.DataColumn columnCoherence;
            
            private global::System.Data.DataColumn columnVolume;
            
            private global::System.Data.DataColumn columnvolume2;
            
            private global::System.Data.DataColumn columnSample_of_talk;
            
            private global::System.Data.DataColumn columnmood_Subjective;
            
            private global::System.Data.DataColumn columnmood_Objective;
            
            private global::System.Data.DataColumn columnStream_of_thoughts_Poverty;
            
            private global::System.Data.DataColumn columnStream_of_thoughts_Pressure;
            
            private global::System.Data.DataColumn columnStream_of_thoughts_Thought;
            
            private global::System.Data.DataColumn columnFlight_of_Ideas;
            
            private global::System.Data.DataColumn columnClang_association;
            
            private global::System.Data.DataColumn columnLoosening_of_association;
            
            private global::System.Data.DataColumn columnKnights_move;
            
            private global::System.Data.DataColumn columnDerailment;
            
            private global::System.Data.DataColumn columnWord_salad;
            
            private global::System.Data.DataColumn columnTaking_past_the_point;
            
            private global::System.Data.DataColumn columnTangentiality;
            
            private global::System.Data.DataColumn columnCircumstanciality;
            
            private global::System.Data.DataColumn columnPreservation;
            
            private global::System.Data.DataColumn columnNeologism;
            
            private global::System.Data.DataColumn columnSuicidal_Ideatio;
            
            private global::System.Data.DataColumn columnHomicidal_Ideation;
            
            private global::System.Data.DataColumn columnHopelessness;
            
            private global::System.Data.DataColumn columnHelplessness;
            
            private global::System.Data.DataColumn columnWorthlessness;
            
            private global::System.Data.DataColumn columnDelusionsType;
            
            private global::System.Data.DataColumn columnDelusionsContent;
            
            private global::System.Data.DataColumn columnDelusions_of_reference;
            
            private global::System.Data.DataColumn columnGrandiose_guilt;
            
            private global::System.Data.DataColumn columnNihilistic;
            
            private global::System.Data.DataColumn columnHypochondriacal;
            
            private global::System.Data.DataColumn columnReligious;
            
            private global::System.Data.DataColumn columnSexual;
            
            private global::System.Data.DataColumn columnDelusion_of_control;
            
            private global::System.Data.DataColumn columnThought_insertion;
            
            private global::System.Data.DataColumn columnWithdrawal;
            
            private global::System.Data.DataColumn columnThought_broadcasting;
            
            private global::System.Data.DataColumn columnObsessive_Compulsive_Phenomena;
            
            private global::System.Data.DataColumn columnPHOBIAS;
            
            private global::System.Data.DataColumn columnDisorders_Of_Perception;
            
            private global::System.Data.DataColumn columnDepersonalization;
            
            private global::System.Data.DataColumn columnhallucinations;
            
            private global::System.Data.DataColumn columnAuditory_redio;
            
            private global::System.Data.DataColumn columnIllusions;
            
            private global::System.Data.DataColumn columnIllusionsText;
            
            private global::System.Data.DataColumn columnConsciousness;
            
            private global::System.Data.DataColumn columnOrientation;
            
            private global::System.Data.DataColumn columnSerial_Seven;
            
            private global::System.Data.DataColumn columnSerial_Three;
            
            private global::System.Data.DataColumn columnSerial_Seven_Text;
            
            private global::System.Data.DataColumn columnSerial_Three_Text;
            
            private global::System.Data.DataColumn columnIntelligence;
            
            private global::System.Data.DataColumn columnIQ;
            
            private global::System.Data.DataColumn columnMemory;
            
            private global::System.Data.DataColumn columnJudgement;
            
            private global::System.Data.DataColumn columnGeneral_Knowledge;
            
            private global::System.Data.DataColumn columnConcrete_thinking;
            
            private global::System.Data.DataColumn columnConcrete_thinking_Text;
            
            private global::System.Data.DataColumn columnAbstrac_thinking;
            
            private global::System.Data.DataColumn columnInsight;
            
            private global::System.Data.DataColumn columnpatient_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mentalStateExaminationDataTable() {
                this.TableName = "mentalStateExamination";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal mentalStateExaminationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected mentalStateExaminationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Physical_AppearanceColumn {
                get {
                    return this.columnPhysical_Appearance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DressColumn {
                get {
                    return this.columnDress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostureColumn {
                get {
                    return this.columnPosture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RapportColumn {
                get {
                    return this.columnRapport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Eye_ContactColumn {
                get {
                    return this.columnEye_Contact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CooperativeColumn {
                get {
                    return this.columnCooperative;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommunicativeColumn {
                get {
                    return this.columnCommunicative;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Psychomotor_activityColumn {
                get {
                    return this.columnPsychomotor_activity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MovementsColumn {
                get {
                    return this.columnMovements;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoluntaryColumn {
                get {
                    return this.columnInvoluntary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoluntaryColumn {
                get {
                    return this.columnVoluntary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpeechColumn {
                get {
                    return this.columnSpeech;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToneColumn {
                get {
                    return this.columnTone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelevanceColumn {
                get {
                    return this.columnRelevance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoherenceColumn {
                get {
                    return this.columnCoherence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeColumn {
                get {
                    return this.columnVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn volume2Column {
                get {
                    return this.columnvolume2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sample_of_talkColumn {
                get {
                    return this.columnSample_of_talk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mood_SubjectiveColumn {
                get {
                    return this.columnmood_Subjective;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mood_ObjectiveColumn {
                get {
                    return this.columnmood_Objective;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Stream_of_thoughts_PovertyColumn {
                get {
                    return this.columnStream_of_thoughts_Poverty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Stream_of_thoughts_PressureColumn {
                get {
                    return this.columnStream_of_thoughts_Pressure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Stream_of_thoughts_ThoughtColumn {
                get {
                    return this.columnStream_of_thoughts_Thought;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Flight_of_IdeasColumn {
                get {
                    return this.columnFlight_of_Ideas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Clang_associationColumn {
                get {
                    return this.columnClang_association;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Loosening_of_associationColumn {
                get {
                    return this.columnLoosening_of_association;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Knights_moveColumn {
                get {
                    return this.columnKnights_move;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DerailmentColumn {
                get {
                    return this.columnDerailment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Word_saladColumn {
                get {
                    return this.columnWord_salad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Taking_past_the_pointColumn {
                get {
                    return this.columnTaking_past_the_point;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TangentialityColumn {
                get {
                    return this.columnTangentiality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CircumstancialityColumn {
                get {
                    return this.columnCircumstanciality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreservationColumn {
                get {
                    return this.columnPreservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NeologismColumn {
                get {
                    return this.columnNeologism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Suicidal_IdeatioColumn {
                get {
                    return this.columnSuicidal_Ideatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Homicidal_IdeationColumn {
                get {
                    return this.columnHomicidal_Ideation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HopelessnessColumn {
                get {
                    return this.columnHopelessness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HelplessnessColumn {
                get {
                    return this.columnHelplessness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorthlessnessColumn {
                get {
                    return this.columnWorthlessness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelusionsTypeColumn {
                get {
                    return this.columnDelusionsType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelusionsContentColumn {
                get {
                    return this.columnDelusionsContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Delusions_of_referenceColumn {
                get {
                    return this.columnDelusions_of_reference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Grandiose_guiltColumn {
                get {
                    return this.columnGrandiose_guilt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NihilisticColumn {
                get {
                    return this.columnNihilistic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HypochondriacalColumn {
                get {
                    return this.columnHypochondriacal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReligiousColumn {
                get {
                    return this.columnReligious;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SexualColumn {
                get {
                    return this.columnSexual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Delusion_of_controlColumn {
                get {
                    return this.columnDelusion_of_control;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Thought_insertionColumn {
                get {
                    return this.columnThought_insertion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WithdrawalColumn {
                get {
                    return this.columnWithdrawal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Thought_broadcastingColumn {
                get {
                    return this.columnThought_broadcasting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Obsessive_Compulsive_PhenomenaColumn {
                get {
                    return this.columnObsessive_Compulsive_Phenomena;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PHOBIASColumn {
                get {
                    return this.columnPHOBIAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Disorders_Of_PerceptionColumn {
                get {
                    return this.columnDisorders_Of_Perception;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepersonalizationColumn {
                get {
                    return this.columnDepersonalization;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hallucinationsColumn {
                get {
                    return this.columnhallucinations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Auditory_redioColumn {
                get {
                    return this.columnAuditory_redio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IllusionsColumn {
                get {
                    return this.columnIllusions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IllusionsTextColumn {
                get {
                    return this.columnIllusionsText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsciousnessColumn {
                get {
                    return this.columnConsciousness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrientationColumn {
                get {
                    return this.columnOrientation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Serial_SevenColumn {
                get {
                    return this.columnSerial_Seven;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Serial_ThreeColumn {
                get {
                    return this.columnSerial_Three;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Serial_Seven_TextColumn {
                get {
                    return this.columnSerial_Seven_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Serial_Three_TextColumn {
                get {
                    return this.columnSerial_Three_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IntelligenceColumn {
                get {
                    return this.columnIntelligence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IQColumn {
                get {
                    return this.columnIQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemoryColumn {
                get {
                    return this.columnMemory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JudgementColumn {
                get {
                    return this.columnJudgement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn General_KnowledgeColumn {
                get {
                    return this.columnGeneral_Knowledge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Concrete_thinkingColumn {
                get {
                    return this.columnConcrete_thinking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Concrete_thinking_TextColumn {
                get {
                    return this.columnConcrete_thinking_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Abstrac_thinkingColumn {
                get {
                    return this.columnAbstrac_thinking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsightColumn {
                get {
                    return this.columnInsight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patient_idColumn {
                get {
                    return this.columnpatient_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mentalStateExaminationRow this[int index] {
                get {
                    return ((mentalStateExaminationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mentalStateExaminationRowChangeEventHandler mentalStateExaminationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mentalStateExaminationRowChangeEventHandler mentalStateExaminationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mentalStateExaminationRowChangeEventHandler mentalStateExaminationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mentalStateExaminationRowChangeEventHandler mentalStateExaminationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmentalStateExaminationRow(mentalStateExaminationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mentalStateExaminationRow AddmentalStateExaminationRow(
                        string Physical_Appearance, 
                        string Dress, 
                        string Posture, 
                        string Rapport, 
                        string Eye_Contact, 
                        byte Cooperative, 
                        string Communicative, 
                        string Psychomotor_activity, 
                        string Movements, 
                        string Involuntary, 
                        string Voluntary, 
                        string Speech, 
                        string Tone, 
                        string Relevance, 
                        string Coherence, 
                        string Volume, 
                        string volume2, 
                        string Sample_of_talk, 
                        string mood_Subjective, 
                        string mood_Objective, 
                        byte Stream_of_thoughts_Poverty, 
                        byte Stream_of_thoughts_Pressure, 
                        byte Stream_of_thoughts_Thought, 
                        byte Flight_of_Ideas, 
                        byte Clang_association, 
                        byte Loosening_of_association, 
                        byte Knights_move, 
                        byte Derailment, 
                        byte Word_salad, 
                        byte Taking_past_the_point, 
                        byte Tangentiality, 
                        byte Circumstanciality, 
                        byte Preservation, 
                        byte Neologism, 
                        byte Suicidal_Ideatio, 
                        byte Homicidal_Ideation, 
                        byte Hopelessness, 
                        byte Helplessness, 
                        byte Worthlessness, 
                        string DelusionsType, 
                        string DelusionsContent, 
                        byte Delusions_of_reference, 
                        byte Grandiose_guilt, 
                        byte Nihilistic, 
                        byte Hypochondriacal, 
                        byte Religious, 
                        byte Sexual, 
                        byte Delusion_of_control, 
                        byte Thought_insertion, 
                        byte Withdrawal, 
                        byte Thought_broadcasting, 
                        string Obsessive_Compulsive_Phenomena, 
                        string PHOBIAS, 
                        string Disorders_Of_Perception, 
                        byte Depersonalization, 
                        string hallucinations, 
                        string Auditory_redio, 
                        byte Illusions, 
                        string IllusionsText, 
                        string Consciousness, 
                        string Orientation, 
                        byte Serial_Seven, 
                        byte Serial_Three, 
                        string Serial_Seven_Text, 
                        string Serial_Three_Text, 
                        string Intelligence, 
                        string IQ, 
                        string Memory, 
                        string Judgement, 
                        string General_Knowledge, 
                        byte Concrete_thinking, 
                        string Concrete_thinking_Text, 
                        string Abstrac_thinking, 
                        string Insight, 
                        int patient_id) {
                mentalStateExaminationRow rowmentalStateExaminationRow = ((mentalStateExaminationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Physical_Appearance,
                        Dress,
                        Posture,
                        Rapport,
                        Eye_Contact,
                        Cooperative,
                        Communicative,
                        Psychomotor_activity,
                        Movements,
                        Involuntary,
                        Voluntary,
                        Speech,
                        Tone,
                        Relevance,
                        Coherence,
                        Volume,
                        volume2,
                        Sample_of_talk,
                        mood_Subjective,
                        mood_Objective,
                        Stream_of_thoughts_Poverty,
                        Stream_of_thoughts_Pressure,
                        Stream_of_thoughts_Thought,
                        Flight_of_Ideas,
                        Clang_association,
                        Loosening_of_association,
                        Knights_move,
                        Derailment,
                        Word_salad,
                        Taking_past_the_point,
                        Tangentiality,
                        Circumstanciality,
                        Preservation,
                        Neologism,
                        Suicidal_Ideatio,
                        Homicidal_Ideation,
                        Hopelessness,
                        Helplessness,
                        Worthlessness,
                        DelusionsType,
                        DelusionsContent,
                        Delusions_of_reference,
                        Grandiose_guilt,
                        Nihilistic,
                        Hypochondriacal,
                        Religious,
                        Sexual,
                        Delusion_of_control,
                        Thought_insertion,
                        Withdrawal,
                        Thought_broadcasting,
                        Obsessive_Compulsive_Phenomena,
                        PHOBIAS,
                        Disorders_Of_Perception,
                        Depersonalization,
                        hallucinations,
                        Auditory_redio,
                        Illusions,
                        IllusionsText,
                        Consciousness,
                        Orientation,
                        Serial_Seven,
                        Serial_Three,
                        Serial_Seven_Text,
                        Serial_Three_Text,
                        Intelligence,
                        IQ,
                        Memory,
                        Judgement,
                        General_Knowledge,
                        Concrete_thinking,
                        Concrete_thinking_Text,
                        Abstrac_thinking,
                        Insight,
                        patient_id};
                rowmentalStateExaminationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmentalStateExaminationRow);
                return rowmentalStateExaminationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                mentalStateExaminationDataTable cln = ((mentalStateExaminationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mentalStateExaminationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPhysical_Appearance = base.Columns["Physical_Appearance"];
                this.columnDress = base.Columns["Dress"];
                this.columnPosture = base.Columns["Posture"];
                this.columnRapport = base.Columns["Rapport"];
                this.columnEye_Contact = base.Columns["Eye_Contact"];
                this.columnCooperative = base.Columns["Cooperative"];
                this.columnCommunicative = base.Columns["Communicative"];
                this.columnPsychomotor_activity = base.Columns["Psychomotor_activity"];
                this.columnMovements = base.Columns["Movements"];
                this.columnInvoluntary = base.Columns["Involuntary"];
                this.columnVoluntary = base.Columns["Voluntary"];
                this.columnSpeech = base.Columns["Speech"];
                this.columnTone = base.Columns["Tone"];
                this.columnRelevance = base.Columns["Relevance"];
                this.columnCoherence = base.Columns["Coherence"];
                this.columnVolume = base.Columns["Volume"];
                this.columnvolume2 = base.Columns["volume2"];
                this.columnSample_of_talk = base.Columns["Sample_of_talk"];
                this.columnmood_Subjective = base.Columns["mood_Subjective"];
                this.columnmood_Objective = base.Columns["mood_Objective"];
                this.columnStream_of_thoughts_Poverty = base.Columns["Stream_of_thoughts_Poverty"];
                this.columnStream_of_thoughts_Pressure = base.Columns["Stream_of_thoughts_Pressure"];
                this.columnStream_of_thoughts_Thought = base.Columns["Stream_of_thoughts_Thought"];
                this.columnFlight_of_Ideas = base.Columns["Flight_of_Ideas"];
                this.columnClang_association = base.Columns["Clang_association"];
                this.columnLoosening_of_association = base.Columns["Loosening_of_association"];
                this.columnKnights_move = base.Columns["Knights_move"];
                this.columnDerailment = base.Columns["Derailment"];
                this.columnWord_salad = base.Columns["Word_salad"];
                this.columnTaking_past_the_point = base.Columns["Taking_past_the_point"];
                this.columnTangentiality = base.Columns["Tangentiality"];
                this.columnCircumstanciality = base.Columns["Circumstanciality"];
                this.columnPreservation = base.Columns["Preservation"];
                this.columnNeologism = base.Columns["Neologism"];
                this.columnSuicidal_Ideatio = base.Columns["Suicidal_Ideatio"];
                this.columnHomicidal_Ideation = base.Columns["Homicidal_Ideation"];
                this.columnHopelessness = base.Columns["Hopelessness"];
                this.columnHelplessness = base.Columns["Helplessness"];
                this.columnWorthlessness = base.Columns["Worthlessness"];
                this.columnDelusionsType = base.Columns["DelusionsType"];
                this.columnDelusionsContent = base.Columns["DelusionsContent"];
                this.columnDelusions_of_reference = base.Columns["Delusions_of_reference"];
                this.columnGrandiose_guilt = base.Columns["Grandiose_guilt"];
                this.columnNihilistic = base.Columns["Nihilistic"];
                this.columnHypochondriacal = base.Columns["Hypochondriacal"];
                this.columnReligious = base.Columns["Religious"];
                this.columnSexual = base.Columns["Sexual"];
                this.columnDelusion_of_control = base.Columns["Delusion_of_control"];
                this.columnThought_insertion = base.Columns["Thought_insertion"];
                this.columnWithdrawal = base.Columns["Withdrawal"];
                this.columnThought_broadcasting = base.Columns["Thought_broadcasting"];
                this.columnObsessive_Compulsive_Phenomena = base.Columns["Obsessive_Compulsive_Phenomena"];
                this.columnPHOBIAS = base.Columns["PHOBIAS"];
                this.columnDisorders_Of_Perception = base.Columns["Disorders_Of_Perception"];
                this.columnDepersonalization = base.Columns["Depersonalization"];
                this.columnhallucinations = base.Columns["hallucinations"];
                this.columnAuditory_redio = base.Columns["Auditory_redio"];
                this.columnIllusions = base.Columns["Illusions"];
                this.columnIllusionsText = base.Columns["IllusionsText"];
                this.columnConsciousness = base.Columns["Consciousness"];
                this.columnOrientation = base.Columns["Orientation"];
                this.columnSerial_Seven = base.Columns["Serial_Seven"];
                this.columnSerial_Three = base.Columns["Serial_Three"];
                this.columnSerial_Seven_Text = base.Columns["Serial_Seven_Text"];
                this.columnSerial_Three_Text = base.Columns["Serial_Three_Text"];
                this.columnIntelligence = base.Columns["Intelligence"];
                this.columnIQ = base.Columns["IQ"];
                this.columnMemory = base.Columns["Memory"];
                this.columnJudgement = base.Columns["Judgement"];
                this.columnGeneral_Knowledge = base.Columns["General_Knowledge"];
                this.columnConcrete_thinking = base.Columns["Concrete_thinking"];
                this.columnConcrete_thinking_Text = base.Columns["Concrete_thinking_Text"];
                this.columnAbstrac_thinking = base.Columns["Abstrac_thinking"];
                this.columnInsight = base.Columns["Insight"];
                this.columnpatient_id = base.Columns["patient_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPhysical_Appearance = new global::System.Data.DataColumn("Physical_Appearance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysical_Appearance);
                this.columnDress = new global::System.Data.DataColumn("Dress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDress);
                this.columnPosture = new global::System.Data.DataColumn("Posture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosture);
                this.columnRapport = new global::System.Data.DataColumn("Rapport", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRapport);
                this.columnEye_Contact = new global::System.Data.DataColumn("Eye_Contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEye_Contact);
                this.columnCooperative = new global::System.Data.DataColumn("Cooperative", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCooperative);
                this.columnCommunicative = new global::System.Data.DataColumn("Communicative", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommunicative);
                this.columnPsychomotor_activity = new global::System.Data.DataColumn("Psychomotor_activity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPsychomotor_activity);
                this.columnMovements = new global::System.Data.DataColumn("Movements", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovements);
                this.columnInvoluntary = new global::System.Data.DataColumn("Involuntary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoluntary);
                this.columnVoluntary = new global::System.Data.DataColumn("Voluntary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoluntary);
                this.columnSpeech = new global::System.Data.DataColumn("Speech", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeech);
                this.columnTone = new global::System.Data.DataColumn("Tone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTone);
                this.columnRelevance = new global::System.Data.DataColumn("Relevance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelevance);
                this.columnCoherence = new global::System.Data.DataColumn("Coherence", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoherence);
                this.columnVolume = new global::System.Data.DataColumn("Volume", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolume);
                this.columnvolume2 = new global::System.Data.DataColumn("volume2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvolume2);
                this.columnSample_of_talk = new global::System.Data.DataColumn("Sample_of_talk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSample_of_talk);
                this.columnmood_Subjective = new global::System.Data.DataColumn("mood_Subjective", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmood_Subjective);
                this.columnmood_Objective = new global::System.Data.DataColumn("mood_Objective", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmood_Objective);
                this.columnStream_of_thoughts_Poverty = new global::System.Data.DataColumn("Stream_of_thoughts_Poverty", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStream_of_thoughts_Poverty);
                this.columnStream_of_thoughts_Pressure = new global::System.Data.DataColumn("Stream_of_thoughts_Pressure", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStream_of_thoughts_Pressure);
                this.columnStream_of_thoughts_Thought = new global::System.Data.DataColumn("Stream_of_thoughts_Thought", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStream_of_thoughts_Thought);
                this.columnFlight_of_Ideas = new global::System.Data.DataColumn("Flight_of_Ideas", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlight_of_Ideas);
                this.columnClang_association = new global::System.Data.DataColumn("Clang_association", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClang_association);
                this.columnLoosening_of_association = new global::System.Data.DataColumn("Loosening_of_association", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoosening_of_association);
                this.columnKnights_move = new global::System.Data.DataColumn("Knights_move", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKnights_move);
                this.columnDerailment = new global::System.Data.DataColumn("Derailment", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDerailment);
                this.columnWord_salad = new global::System.Data.DataColumn("Word_salad", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWord_salad);
                this.columnTaking_past_the_point = new global::System.Data.DataColumn("Taking_past_the_point", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaking_past_the_point);
                this.columnTangentiality = new global::System.Data.DataColumn("Tangentiality", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTangentiality);
                this.columnCircumstanciality = new global::System.Data.DataColumn("Circumstanciality", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCircumstanciality);
                this.columnPreservation = new global::System.Data.DataColumn("Preservation", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreservation);
                this.columnNeologism = new global::System.Data.DataColumn("Neologism", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeologism);
                this.columnSuicidal_Ideatio = new global::System.Data.DataColumn("Suicidal_Ideatio", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuicidal_Ideatio);
                this.columnHomicidal_Ideation = new global::System.Data.DataColumn("Homicidal_Ideation", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomicidal_Ideation);
                this.columnHopelessness = new global::System.Data.DataColumn("Hopelessness", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHopelessness);
                this.columnHelplessness = new global::System.Data.DataColumn("Helplessness", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHelplessness);
                this.columnWorthlessness = new global::System.Data.DataColumn("Worthlessness", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorthlessness);
                this.columnDelusionsType = new global::System.Data.DataColumn("DelusionsType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelusionsType);
                this.columnDelusionsContent = new global::System.Data.DataColumn("DelusionsContent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelusionsContent);
                this.columnDelusions_of_reference = new global::System.Data.DataColumn("Delusions_of_reference", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelusions_of_reference);
                this.columnGrandiose_guilt = new global::System.Data.DataColumn("Grandiose_guilt", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandiose_guilt);
                this.columnNihilistic = new global::System.Data.DataColumn("Nihilistic", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNihilistic);
                this.columnHypochondriacal = new global::System.Data.DataColumn("Hypochondriacal", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHypochondriacal);
                this.columnReligious = new global::System.Data.DataColumn("Religious", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReligious);
                this.columnSexual = new global::System.Data.DataColumn("Sexual", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSexual);
                this.columnDelusion_of_control = new global::System.Data.DataColumn("Delusion_of_control", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelusion_of_control);
                this.columnThought_insertion = new global::System.Data.DataColumn("Thought_insertion", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThought_insertion);
                this.columnWithdrawal = new global::System.Data.DataColumn("Withdrawal", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithdrawal);
                this.columnThought_broadcasting = new global::System.Data.DataColumn("Thought_broadcasting", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThought_broadcasting);
                this.columnObsessive_Compulsive_Phenomena = new global::System.Data.DataColumn("Obsessive_Compulsive_Phenomena", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObsessive_Compulsive_Phenomena);
                this.columnPHOBIAS = new global::System.Data.DataColumn("PHOBIAS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHOBIAS);
                this.columnDisorders_Of_Perception = new global::System.Data.DataColumn("Disorders_Of_Perception", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisorders_Of_Perception);
                this.columnDepersonalization = new global::System.Data.DataColumn("Depersonalization", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepersonalization);
                this.columnhallucinations = new global::System.Data.DataColumn("hallucinations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhallucinations);
                this.columnAuditory_redio = new global::System.Data.DataColumn("Auditory_redio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuditory_redio);
                this.columnIllusions = new global::System.Data.DataColumn("Illusions", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIllusions);
                this.columnIllusionsText = new global::System.Data.DataColumn("IllusionsText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIllusionsText);
                this.columnConsciousness = new global::System.Data.DataColumn("Consciousness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsciousness);
                this.columnOrientation = new global::System.Data.DataColumn("Orientation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrientation);
                this.columnSerial_Seven = new global::System.Data.DataColumn("Serial_Seven", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerial_Seven);
                this.columnSerial_Three = new global::System.Data.DataColumn("Serial_Three", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerial_Three);
                this.columnSerial_Seven_Text = new global::System.Data.DataColumn("Serial_Seven_Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerial_Seven_Text);
                this.columnSerial_Three_Text = new global::System.Data.DataColumn("Serial_Three_Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerial_Three_Text);
                this.columnIntelligence = new global::System.Data.DataColumn("Intelligence", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntelligence);
                this.columnIQ = new global::System.Data.DataColumn("IQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIQ);
                this.columnMemory = new global::System.Data.DataColumn("Memory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemory);
                this.columnJudgement = new global::System.Data.DataColumn("Judgement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJudgement);
                this.columnGeneral_Knowledge = new global::System.Data.DataColumn("General_Knowledge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneral_Knowledge);
                this.columnConcrete_thinking = new global::System.Data.DataColumn("Concrete_thinking", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConcrete_thinking);
                this.columnConcrete_thinking_Text = new global::System.Data.DataColumn("Concrete_thinking_Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConcrete_thinking_Text);
                this.columnAbstrac_thinking = new global::System.Data.DataColumn("Abstrac_thinking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbstrac_thinking);
                this.columnInsight = new global::System.Data.DataColumn("Insight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsight);
                this.columnpatient_id = new global::System.Data.DataColumn("patient_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatient_id);
                this.columnPhysical_Appearance.MaxLength = 100;
                this.columnDress.MaxLength = 100;
                this.columnPosture.MaxLength = 100;
                this.columnRapport.MaxLength = 100;
                this.columnEye_Contact.MaxLength = 100;
                this.columnCommunicative.MaxLength = 100;
                this.columnPsychomotor_activity.MaxLength = 100;
                this.columnMovements.MaxLength = 100;
                this.columnInvoluntary.MaxLength = 50;
                this.columnVoluntary.MaxLength = 50;
                this.columnSpeech.MaxLength = 100;
                this.columnTone.MaxLength = 100;
                this.columnRelevance.MaxLength = 100;
                this.columnCoherence.MaxLength = 100;
                this.columnVolume.MaxLength = 100;
                this.columnvolume2.MaxLength = 50;
                this.columnSample_of_talk.MaxLength = 100;
                this.columnmood_Subjective.MaxLength = 100;
                this.columnmood_Objective.MaxLength = 100;
                this.columnDelusionsType.MaxLength = 50;
                this.columnDelusionsContent.MaxLength = 50;
                this.columnObsessive_Compulsive_Phenomena.MaxLength = 100;
                this.columnPHOBIAS.MaxLength = 100;
                this.columnDisorders_Of_Perception.MaxLength = 100;
                this.columnhallucinations.MaxLength = 100;
                this.columnAuditory_redio.MaxLength = 50;
                this.columnIllusionsText.MaxLength = 100;
                this.columnConsciousness.MaxLength = 100;
                this.columnOrientation.MaxLength = 100;
                this.columnSerial_Seven_Text.MaxLength = 100;
                this.columnSerial_Three_Text.MaxLength = 100;
                this.columnIntelligence.MaxLength = 100;
                this.columnIQ.MaxLength = 100;
                this.columnMemory.MaxLength = 100;
                this.columnJudgement.MaxLength = 100;
                this.columnGeneral_Knowledge.MaxLength = 100;
                this.columnConcrete_thinking_Text.MaxLength = 100;
                this.columnAbstrac_thinking.MaxLength = 100;
                this.columnInsight.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mentalStateExaminationRow NewmentalStateExaminationRow() {
                return ((mentalStateExaminationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mentalStateExaminationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(mentalStateExaminationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mentalStateExaminationRowChanged != null)) {
                    this.mentalStateExaminationRowChanged(this, new mentalStateExaminationRowChangeEvent(((mentalStateExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mentalStateExaminationRowChanging != null)) {
                    this.mentalStateExaminationRowChanging(this, new mentalStateExaminationRowChangeEvent(((mentalStateExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mentalStateExaminationRowDeleted != null)) {
                    this.mentalStateExaminationRowDeleted(this, new mentalStateExaminationRowChangeEvent(((mentalStateExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mentalStateExaminationRowDeleting != null)) {
                    this.mentalStateExaminationRowDeleting(this, new mentalStateExaminationRowChangeEvent(((mentalStateExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovementalStateExaminationRow(mentalStateExaminationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                formulationDataset ds = new formulationDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mentalStateExaminationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class generalPhysicalExaminationDataTable : global::System.Data.TypedTableBase<generalPhysicalExaminationRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnheight;
            
            private global::System.Data.DataColumn columnweight;
            
            private global::System.Data.DataColumn columnpulse;
            
            private global::System.Data.DataColumn columnskinEruption;
            
            private global::System.Data.DataColumn columnlyingSystolic;
            
            private global::System.Data.DataColumn columnsittingSystolic;
            
            private global::System.Data.DataColumn columnstandingSystolic;
            
            private global::System.Data.DataColumn columntemperature;
            
            private global::System.Data.DataColumn columndehydration;
            
            private global::System.Data.DataColumn columnpallorRb;
            
            private global::System.Data.DataColumn columnpallorTxt;
            
            private global::System.Data.DataColumn columnjaundiceRb;
            
            private global::System.Data.DataColumn columnjaundiceTxt;
            
            private global::System.Data.DataColumn columnoedemaRb;
            
            private global::System.Data.DataColumn columnoedemaTxt;
            
            private global::System.Data.DataColumn columnkylonychiaRb;
            
            private global::System.Data.DataColumn columnkylonychiaTxt;
            
            private global::System.Data.DataColumn columnthyroidGlandRb;
            
            private global::System.Data.DataColumn columnthyroidGlandTxt;
            
            private global::System.Data.DataColumn columnclubbingRb;
            
            private global::System.Data.DataColumn columnclubbingTxt;
            
            private global::System.Data.DataColumn columnrespirationRateRb;
            
            private global::System.Data.DataColumn columnrespirationRateTxt;
            
            private global::System.Data.DataColumn columnlymphNodeRb;
            
            private global::System.Data.DataColumn columnlymphNodeTxt;
            
            private global::System.Data.DataColumn columnjvpTxt;
            
            private global::System.Data.DataColumn columnjvpDD;
            
            private global::System.Data.DataColumn columnvisit_no;
            
            private global::System.Data.DataColumn columnlyingDiastolic;
            
            private global::System.Data.DataColumn columnstandingDiastolic;
            
            private global::System.Data.DataColumn columnsittingDiastolic;
            
            private global::System.Data.DataColumn columnskinErruptionDd;
            
            private global::System.Data.DataColumn columndehydrationRadio;
            
            private global::System.Data.DataColumn columnswellingRadio;
            
            private global::System.Data.DataColumn columnpigmentationRadio;
            
            private global::System.Data.DataColumn columnrepigmentationRadio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public generalPhysicalExaminationDataTable() {
                this.TableName = "generalPhysicalExamination";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal generalPhysicalExaminationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected generalPhysicalExaminationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn heightColumn {
                get {
                    return this.columnheight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pulseColumn {
                get {
                    return this.columnpulse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn skinEruptionColumn {
                get {
                    return this.columnskinEruption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lyingSystolicColumn {
                get {
                    return this.columnlyingSystolic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sittingSystolicColumn {
                get {
                    return this.columnsittingSystolic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn standingSystolicColumn {
                get {
                    return this.columnstandingSystolic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn temperatureColumn {
                get {
                    return this.columntemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dehydrationColumn {
                get {
                    return this.columndehydration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pallorRbColumn {
                get {
                    return this.columnpallorRb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pallorTxtColumn {
                get {
                    return this.columnpallorTxt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn jaundiceRbColumn {
                get {
                    return this.columnjaundiceRb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn jaundiceTxtColumn {
                get {
                    return this.columnjaundiceTxt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn oedemaRbColumn {
                get {
                    return this.columnoedemaRb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn oedemaTxtColumn {
                get {
                    return this.columnoedemaTxt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kylonychiaRbColumn {
                get {
                    return this.columnkylonychiaRb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kylonychiaTxtColumn {
                get {
                    return this.columnkylonychiaTxt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn thyroidGlandRbColumn {
                get {
                    return this.columnthyroidGlandRb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn thyroidGlandTxtColumn {
                get {
                    return this.columnthyroidGlandTxt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn clubbingRbColumn {
                get {
                    return this.columnclubbingRb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn clubbingTxtColumn {
                get {
                    return this.columnclubbingTxt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn respirationRateRbColumn {
                get {
                    return this.columnrespirationRateRb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn respirationRateTxtColumn {
                get {
                    return this.columnrespirationRateTxt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lymphNodeRbColumn {
                get {
                    return this.columnlymphNodeRb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lymphNodeTxtColumn {
                get {
                    return this.columnlymphNodeTxt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn jvpTxtColumn {
                get {
                    return this.columnjvpTxt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn jvpDDColumn {
                get {
                    return this.columnjvpDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn visit_noColumn {
                get {
                    return this.columnvisit_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lyingDiastolicColumn {
                get {
                    return this.columnlyingDiastolic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn standingDiastolicColumn {
                get {
                    return this.columnstandingDiastolic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sittingDiastolicColumn {
                get {
                    return this.columnsittingDiastolic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn skinErruptionDdColumn {
                get {
                    return this.columnskinErruptionDd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dehydrationRadioColumn {
                get {
                    return this.columndehydrationRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn swellingRadioColumn {
                get {
                    return this.columnswellingRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pigmentationRadioColumn {
                get {
                    return this.columnpigmentationRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn repigmentationRadioColumn {
                get {
                    return this.columnrepigmentationRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public generalPhysicalExaminationRow this[int index] {
                get {
                    return ((generalPhysicalExaminationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event generalPhysicalExaminationRowChangeEventHandler generalPhysicalExaminationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event generalPhysicalExaminationRowChangeEventHandler generalPhysicalExaminationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event generalPhysicalExaminationRowChangeEventHandler generalPhysicalExaminationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event generalPhysicalExaminationRowChangeEventHandler generalPhysicalExaminationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddgeneralPhysicalExaminationRow(generalPhysicalExaminationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public generalPhysicalExaminationRow AddgeneralPhysicalExaminationRow(
                        int id, 
                        string height, 
                        string weight, 
                        string pulse, 
                        string skinEruption, 
                        string lyingSystolic, 
                        string sittingSystolic, 
                        string standingSystolic, 
                        string temperature, 
                        string dehydration, 
                        int pallorRb, 
                        string pallorTxt, 
                        int jaundiceRb, 
                        string jaundiceTxt, 
                        int oedemaRb, 
                        string oedemaTxt, 
                        int kylonychiaRb, 
                        string kylonychiaTxt, 
                        int thyroidGlandRb, 
                        string thyroidGlandTxt, 
                        int clubbingRb, 
                        string clubbingTxt, 
                        int respirationRateRb, 
                        string respirationRateTxt, 
                        int lymphNodeRb, 
                        string lymphNodeTxt, 
                        string jvpTxt, 
                        string jvpDD, 
                        int visit_no, 
                        string lyingDiastolic, 
                        string standingDiastolic, 
                        string sittingDiastolic, 
                        string skinErruptionDd, 
                        int dehydrationRadio, 
                        int swellingRadio, 
                        int pigmentationRadio, 
                        int repigmentationRadio) {
                generalPhysicalExaminationRow rowgeneralPhysicalExaminationRow = ((generalPhysicalExaminationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        height,
                        weight,
                        pulse,
                        skinEruption,
                        lyingSystolic,
                        sittingSystolic,
                        standingSystolic,
                        temperature,
                        dehydration,
                        pallorRb,
                        pallorTxt,
                        jaundiceRb,
                        jaundiceTxt,
                        oedemaRb,
                        oedemaTxt,
                        kylonychiaRb,
                        kylonychiaTxt,
                        thyroidGlandRb,
                        thyroidGlandTxt,
                        clubbingRb,
                        clubbingTxt,
                        respirationRateRb,
                        respirationRateTxt,
                        lymphNodeRb,
                        lymphNodeTxt,
                        jvpTxt,
                        jvpDD,
                        visit_no,
                        lyingDiastolic,
                        standingDiastolic,
                        sittingDiastolic,
                        skinErruptionDd,
                        dehydrationRadio,
                        swellingRadio,
                        pigmentationRadio,
                        repigmentationRadio};
                rowgeneralPhysicalExaminationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowgeneralPhysicalExaminationRow);
                return rowgeneralPhysicalExaminationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                generalPhysicalExaminationDataTable cln = ((generalPhysicalExaminationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new generalPhysicalExaminationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnheight = base.Columns["height"];
                this.columnweight = base.Columns["weight"];
                this.columnpulse = base.Columns["pulse"];
                this.columnskinEruption = base.Columns["skinEruption"];
                this.columnlyingSystolic = base.Columns["lyingSystolic"];
                this.columnsittingSystolic = base.Columns["sittingSystolic"];
                this.columnstandingSystolic = base.Columns["standingSystolic"];
                this.columntemperature = base.Columns["temperature"];
                this.columndehydration = base.Columns["dehydration"];
                this.columnpallorRb = base.Columns["pallorRb"];
                this.columnpallorTxt = base.Columns["pallorTxt"];
                this.columnjaundiceRb = base.Columns["jaundiceRb"];
                this.columnjaundiceTxt = base.Columns["jaundiceTxt"];
                this.columnoedemaRb = base.Columns["oedemaRb"];
                this.columnoedemaTxt = base.Columns["oedemaTxt"];
                this.columnkylonychiaRb = base.Columns["kylonychiaRb"];
                this.columnkylonychiaTxt = base.Columns["kylonychiaTxt"];
                this.columnthyroidGlandRb = base.Columns["thyroidGlandRb"];
                this.columnthyroidGlandTxt = base.Columns["thyroidGlandTxt"];
                this.columnclubbingRb = base.Columns["clubbingRb"];
                this.columnclubbingTxt = base.Columns["clubbingTxt"];
                this.columnrespirationRateRb = base.Columns["respirationRateRb"];
                this.columnrespirationRateTxt = base.Columns["respirationRateTxt"];
                this.columnlymphNodeRb = base.Columns["lymphNodeRb"];
                this.columnlymphNodeTxt = base.Columns["lymphNodeTxt"];
                this.columnjvpTxt = base.Columns["jvpTxt"];
                this.columnjvpDD = base.Columns["jvpDD"];
                this.columnvisit_no = base.Columns["visit_no"];
                this.columnlyingDiastolic = base.Columns["lyingDiastolic"];
                this.columnstandingDiastolic = base.Columns["standingDiastolic"];
                this.columnsittingDiastolic = base.Columns["sittingDiastolic"];
                this.columnskinErruptionDd = base.Columns["skinErruptionDd"];
                this.columndehydrationRadio = base.Columns["dehydrationRadio"];
                this.columnswellingRadio = base.Columns["swellingRadio"];
                this.columnpigmentationRadio = base.Columns["pigmentationRadio"];
                this.columnrepigmentationRadio = base.Columns["repigmentationRadio"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnheight = new global::System.Data.DataColumn("height", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnheight);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.columnpulse = new global::System.Data.DataColumn("pulse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpulse);
                this.columnskinEruption = new global::System.Data.DataColumn("skinEruption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnskinEruption);
                this.columnlyingSystolic = new global::System.Data.DataColumn("lyingSystolic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlyingSystolic);
                this.columnsittingSystolic = new global::System.Data.DataColumn("sittingSystolic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsittingSystolic);
                this.columnstandingSystolic = new global::System.Data.DataColumn("standingSystolic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstandingSystolic);
                this.columntemperature = new global::System.Data.DataColumn("temperature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntemperature);
                this.columndehydration = new global::System.Data.DataColumn("dehydration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndehydration);
                this.columnpallorRb = new global::System.Data.DataColumn("pallorRb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpallorRb);
                this.columnpallorTxt = new global::System.Data.DataColumn("pallorTxt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpallorTxt);
                this.columnjaundiceRb = new global::System.Data.DataColumn("jaundiceRb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjaundiceRb);
                this.columnjaundiceTxt = new global::System.Data.DataColumn("jaundiceTxt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjaundiceTxt);
                this.columnoedemaRb = new global::System.Data.DataColumn("oedemaRb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoedemaRb);
                this.columnoedemaTxt = new global::System.Data.DataColumn("oedemaTxt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoedemaTxt);
                this.columnkylonychiaRb = new global::System.Data.DataColumn("kylonychiaRb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkylonychiaRb);
                this.columnkylonychiaTxt = new global::System.Data.DataColumn("kylonychiaTxt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkylonychiaTxt);
                this.columnthyroidGlandRb = new global::System.Data.DataColumn("thyroidGlandRb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthyroidGlandRb);
                this.columnthyroidGlandTxt = new global::System.Data.DataColumn("thyroidGlandTxt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthyroidGlandTxt);
                this.columnclubbingRb = new global::System.Data.DataColumn("clubbingRb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclubbingRb);
                this.columnclubbingTxt = new global::System.Data.DataColumn("clubbingTxt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclubbingTxt);
                this.columnrespirationRateRb = new global::System.Data.DataColumn("respirationRateRb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrespirationRateRb);
                this.columnrespirationRateTxt = new global::System.Data.DataColumn("respirationRateTxt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrespirationRateTxt);
                this.columnlymphNodeRb = new global::System.Data.DataColumn("lymphNodeRb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlymphNodeRb);
                this.columnlymphNodeTxt = new global::System.Data.DataColumn("lymphNodeTxt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlymphNodeTxt);
                this.columnjvpTxt = new global::System.Data.DataColumn("jvpTxt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjvpTxt);
                this.columnjvpDD = new global::System.Data.DataColumn("jvpDD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjvpDD);
                this.columnvisit_no = new global::System.Data.DataColumn("visit_no", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvisit_no);
                this.columnlyingDiastolic = new global::System.Data.DataColumn("lyingDiastolic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlyingDiastolic);
                this.columnstandingDiastolic = new global::System.Data.DataColumn("standingDiastolic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstandingDiastolic);
                this.columnsittingDiastolic = new global::System.Data.DataColumn("sittingDiastolic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsittingDiastolic);
                this.columnskinErruptionDd = new global::System.Data.DataColumn("skinErruptionDd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnskinErruptionDd);
                this.columndehydrationRadio = new global::System.Data.DataColumn("dehydrationRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndehydrationRadio);
                this.columnswellingRadio = new global::System.Data.DataColumn("swellingRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnswellingRadio);
                this.columnpigmentationRadio = new global::System.Data.DataColumn("pigmentationRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpigmentationRadio);
                this.columnrepigmentationRadio = new global::System.Data.DataColumn("repigmentationRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepigmentationRadio);
                this.columnid.AllowDBNull = false;
                this.columnheight.MaxLength = 2147483647;
                this.columnweight.MaxLength = 2147483647;
                this.columnpulse.MaxLength = 2147483647;
                this.columnskinEruption.MaxLength = 2147483647;
                this.columnlyingSystolic.MaxLength = 2147483647;
                this.columnsittingSystolic.MaxLength = 2147483647;
                this.columnstandingSystolic.MaxLength = 2147483647;
                this.columntemperature.MaxLength = 2147483647;
                this.columndehydration.MaxLength = 2147483647;
                this.columnpallorTxt.MaxLength = 2147483647;
                this.columnjaundiceTxt.MaxLength = 2147483647;
                this.columnoedemaTxt.MaxLength = 2147483647;
                this.columnkylonychiaTxt.MaxLength = 2147483647;
                this.columnthyroidGlandTxt.MaxLength = 2147483647;
                this.columnclubbingTxt.MaxLength = 2147483647;
                this.columnrespirationRateTxt.MaxLength = 2147483647;
                this.columnlymphNodeTxt.MaxLength = 2147483647;
                this.columnjvpTxt.MaxLength = 2147483647;
                this.columnjvpDD.MaxLength = 50;
                this.columnlyingDiastolic.MaxLength = 50;
                this.columnstandingDiastolic.MaxLength = 50;
                this.columnsittingDiastolic.MaxLength = 50;
                this.columnskinErruptionDd.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public generalPhysicalExaminationRow NewgeneralPhysicalExaminationRow() {
                return ((generalPhysicalExaminationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new generalPhysicalExaminationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(generalPhysicalExaminationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.generalPhysicalExaminationRowChanged != null)) {
                    this.generalPhysicalExaminationRowChanged(this, new generalPhysicalExaminationRowChangeEvent(((generalPhysicalExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.generalPhysicalExaminationRowChanging != null)) {
                    this.generalPhysicalExaminationRowChanging(this, new generalPhysicalExaminationRowChangeEvent(((generalPhysicalExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.generalPhysicalExaminationRowDeleted != null)) {
                    this.generalPhysicalExaminationRowDeleted(this, new generalPhysicalExaminationRowChangeEvent(((generalPhysicalExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.generalPhysicalExaminationRowDeleting != null)) {
                    this.generalPhysicalExaminationRowDeleting(this, new generalPhysicalExaminationRowChangeEvent(((generalPhysicalExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovegeneralPhysicalExaminationRow(generalPhysicalExaminationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                formulationDataset ds = new formulationDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "generalPhysicalExaminationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class systematicExaminationDataTable : global::System.Data.TypedTableBase<systematicExaminationRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnmeningialIrritation;
            
            private global::System.Data.DataColumn columncarnivalNervers;
            
            private global::System.Data.DataColumn columnsensorySystem;
            
            private global::System.Data.DataColumn columnmotorSystem;
            
            private global::System.Data.DataColumn columnsuperficialReflexes;
            
            private global::System.Data.DataColumn columndeepReflexes;
            
            private global::System.Data.DataColumn columncerebellarFunctions;
            
            private global::System.Data.DataColumn columnfundoscopy;
            
            private global::System.Data.DataColumn columncardioVascularSystem;
            
            private global::System.Data.DataColumn columnrespiratorySystem;
            
            private global::System.Data.DataColumn columngastroIntestinalSystem;
            
            private global::System.Data.DataColumn columnnervousSystem;
            
            private global::System.Data.DataColumn columnurogenitalSystem;
            
            private global::System.Data.DataColumn columnvisit_no;
            
            private global::System.Data.DataColumn columncranialNervesRadio;
            
            private global::System.Data.DataColumn columnsensorySystemRadio;
            
            private global::System.Data.DataColumn columnmotorSystemRadio;
            
            private global::System.Data.DataColumn columnsuperficialRadio;
            
            private global::System.Data.DataColumn columndeepReflexRadio;
            
            private global::System.Data.DataColumn columncerebellarRadio;
            
            private global::System.Data.DataColumn columnfundoscopyRadio;
            
            private global::System.Data.DataColumn columncardiovascularRadio;
            
            private global::System.Data.DataColumn columnrespiratoryRadio;
            
            private global::System.Data.DataColumn columngastrointestinalRadio;
            
            private global::System.Data.DataColumn columnurogenitalRadio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systematicExaminationDataTable() {
                this.TableName = "systematicExamination";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal systematicExaminationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected systematicExaminationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn meningialIrritationColumn {
                get {
                    return this.columnmeningialIrritation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn carnivalNerversColumn {
                get {
                    return this.columncarnivalNervers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sensorySystemColumn {
                get {
                    return this.columnsensorySystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn motorSystemColumn {
                get {
                    return this.columnmotorSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn superficialReflexesColumn {
                get {
                    return this.columnsuperficialReflexes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn deepReflexesColumn {
                get {
                    return this.columndeepReflexes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cerebellarFunctionsColumn {
                get {
                    return this.columncerebellarFunctions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fundoscopyColumn {
                get {
                    return this.columnfundoscopy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cardioVascularSystemColumn {
                get {
                    return this.columncardioVascularSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn respiratorySystemColumn {
                get {
                    return this.columnrespiratorySystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gastroIntestinalSystemColumn {
                get {
                    return this.columngastroIntestinalSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nervousSystemColumn {
                get {
                    return this.columnnervousSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn urogenitalSystemColumn {
                get {
                    return this.columnurogenitalSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn visit_noColumn {
                get {
                    return this.columnvisit_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cranialNervesRadioColumn {
                get {
                    return this.columncranialNervesRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sensorySystemRadioColumn {
                get {
                    return this.columnsensorySystemRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn motorSystemRadioColumn {
                get {
                    return this.columnmotorSystemRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn superficialRadioColumn {
                get {
                    return this.columnsuperficialRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn deepReflexRadioColumn {
                get {
                    return this.columndeepReflexRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cerebellarRadioColumn {
                get {
                    return this.columncerebellarRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fundoscopyRadioColumn {
                get {
                    return this.columnfundoscopyRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cardiovascularRadioColumn {
                get {
                    return this.columncardiovascularRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn respiratoryRadioColumn {
                get {
                    return this.columnrespiratoryRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gastrointestinalRadioColumn {
                get {
                    return this.columngastrointestinalRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn urogenitalRadioColumn {
                get {
                    return this.columnurogenitalRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systematicExaminationRow this[int index] {
                get {
                    return ((systematicExaminationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event systematicExaminationRowChangeEventHandler systematicExaminationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event systematicExaminationRowChangeEventHandler systematicExaminationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event systematicExaminationRowChangeEventHandler systematicExaminationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event systematicExaminationRowChangeEventHandler systematicExaminationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddsystematicExaminationRow(systematicExaminationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systematicExaminationRow AddsystematicExaminationRow(
                        int id, 
                        string meningialIrritation, 
                        string carnivalNervers, 
                        string sensorySystem, 
                        string motorSystem, 
                        string superficialReflexes, 
                        string deepReflexes, 
                        string cerebellarFunctions, 
                        string fundoscopy, 
                        string cardioVascularSystem, 
                        string respiratorySystem, 
                        string gastroIntestinalSystem, 
                        string nervousSystem, 
                        string urogenitalSystem, 
                        int visit_no, 
                        int cranialNervesRadio, 
                        int sensorySystemRadio, 
                        int motorSystemRadio, 
                        int superficialRadio, 
                        int deepReflexRadio, 
                        int cerebellarRadio, 
                        int fundoscopyRadio, 
                        int cardiovascularRadio, 
                        int respiratoryRadio, 
                        int gastrointestinalRadio, 
                        int urogenitalRadio) {
                systematicExaminationRow rowsystematicExaminationRow = ((systematicExaminationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        meningialIrritation,
                        carnivalNervers,
                        sensorySystem,
                        motorSystem,
                        superficialReflexes,
                        deepReflexes,
                        cerebellarFunctions,
                        fundoscopy,
                        cardioVascularSystem,
                        respiratorySystem,
                        gastroIntestinalSystem,
                        nervousSystem,
                        urogenitalSystem,
                        visit_no,
                        cranialNervesRadio,
                        sensorySystemRadio,
                        motorSystemRadio,
                        superficialRadio,
                        deepReflexRadio,
                        cerebellarRadio,
                        fundoscopyRadio,
                        cardiovascularRadio,
                        respiratoryRadio,
                        gastrointestinalRadio,
                        urogenitalRadio};
                rowsystematicExaminationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsystematicExaminationRow);
                return rowsystematicExaminationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                systematicExaminationDataTable cln = ((systematicExaminationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new systematicExaminationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnmeningialIrritation = base.Columns["meningialIrritation"];
                this.columncarnivalNervers = base.Columns["carnivalNervers"];
                this.columnsensorySystem = base.Columns["sensorySystem"];
                this.columnmotorSystem = base.Columns["motorSystem"];
                this.columnsuperficialReflexes = base.Columns["superficialReflexes"];
                this.columndeepReflexes = base.Columns["deepReflexes"];
                this.columncerebellarFunctions = base.Columns["cerebellarFunctions"];
                this.columnfundoscopy = base.Columns["fundoscopy"];
                this.columncardioVascularSystem = base.Columns["cardioVascularSystem"];
                this.columnrespiratorySystem = base.Columns["respiratorySystem"];
                this.columngastroIntestinalSystem = base.Columns["gastroIntestinalSystem"];
                this.columnnervousSystem = base.Columns["nervousSystem"];
                this.columnurogenitalSystem = base.Columns["urogenitalSystem"];
                this.columnvisit_no = base.Columns["visit_no"];
                this.columncranialNervesRadio = base.Columns["cranialNervesRadio"];
                this.columnsensorySystemRadio = base.Columns["sensorySystemRadio"];
                this.columnmotorSystemRadio = base.Columns["motorSystemRadio"];
                this.columnsuperficialRadio = base.Columns["superficialRadio"];
                this.columndeepReflexRadio = base.Columns["deepReflexRadio"];
                this.columncerebellarRadio = base.Columns["cerebellarRadio"];
                this.columnfundoscopyRadio = base.Columns["fundoscopyRadio"];
                this.columncardiovascularRadio = base.Columns["cardiovascularRadio"];
                this.columnrespiratoryRadio = base.Columns["respiratoryRadio"];
                this.columngastrointestinalRadio = base.Columns["gastrointestinalRadio"];
                this.columnurogenitalRadio = base.Columns["urogenitalRadio"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnmeningialIrritation = new global::System.Data.DataColumn("meningialIrritation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeningialIrritation);
                this.columncarnivalNervers = new global::System.Data.DataColumn("carnivalNervers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncarnivalNervers);
                this.columnsensorySystem = new global::System.Data.DataColumn("sensorySystem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsensorySystem);
                this.columnmotorSystem = new global::System.Data.DataColumn("motorSystem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmotorSystem);
                this.columnsuperficialReflexes = new global::System.Data.DataColumn("superficialReflexes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuperficialReflexes);
                this.columndeepReflexes = new global::System.Data.DataColumn("deepReflexes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeepReflexes);
                this.columncerebellarFunctions = new global::System.Data.DataColumn("cerebellarFunctions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncerebellarFunctions);
                this.columnfundoscopy = new global::System.Data.DataColumn("fundoscopy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfundoscopy);
                this.columncardioVascularSystem = new global::System.Data.DataColumn("cardioVascularSystem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncardioVascularSystem);
                this.columnrespiratorySystem = new global::System.Data.DataColumn("respiratorySystem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrespiratorySystem);
                this.columngastroIntestinalSystem = new global::System.Data.DataColumn("gastroIntestinalSystem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngastroIntestinalSystem);
                this.columnnervousSystem = new global::System.Data.DataColumn("nervousSystem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnervousSystem);
                this.columnurogenitalSystem = new global::System.Data.DataColumn("urogenitalSystem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurogenitalSystem);
                this.columnvisit_no = new global::System.Data.DataColumn("visit_no", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvisit_no);
                this.columncranialNervesRadio = new global::System.Data.DataColumn("cranialNervesRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncranialNervesRadio);
                this.columnsensorySystemRadio = new global::System.Data.DataColumn("sensorySystemRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsensorySystemRadio);
                this.columnmotorSystemRadio = new global::System.Data.DataColumn("motorSystemRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmotorSystemRadio);
                this.columnsuperficialRadio = new global::System.Data.DataColumn("superficialRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuperficialRadio);
                this.columndeepReflexRadio = new global::System.Data.DataColumn("deepReflexRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeepReflexRadio);
                this.columncerebellarRadio = new global::System.Data.DataColumn("cerebellarRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncerebellarRadio);
                this.columnfundoscopyRadio = new global::System.Data.DataColumn("fundoscopyRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfundoscopyRadio);
                this.columncardiovascularRadio = new global::System.Data.DataColumn("cardiovascularRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncardiovascularRadio);
                this.columnrespiratoryRadio = new global::System.Data.DataColumn("respiratoryRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrespiratoryRadio);
                this.columngastrointestinalRadio = new global::System.Data.DataColumn("gastrointestinalRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngastrointestinalRadio);
                this.columnurogenitalRadio = new global::System.Data.DataColumn("urogenitalRadio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurogenitalRadio);
                this.columnid.AllowDBNull = false;
                this.columnmeningialIrritation.MaxLength = 2147483647;
                this.columncarnivalNervers.MaxLength = 2147483647;
                this.columnsensorySystem.MaxLength = 2147483647;
                this.columnmotorSystem.MaxLength = 2147483647;
                this.columnsuperficialReflexes.MaxLength = 2147483647;
                this.columndeepReflexes.MaxLength = 2147483647;
                this.columncerebellarFunctions.MaxLength = 2147483647;
                this.columnfundoscopy.MaxLength = 2147483647;
                this.columncardioVascularSystem.MaxLength = 2147483647;
                this.columnrespiratorySystem.MaxLength = 2147483647;
                this.columngastroIntestinalSystem.MaxLength = 2147483647;
                this.columnnervousSystem.MaxLength = 2147483647;
                this.columnurogenitalSystem.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systematicExaminationRow NewsystematicExaminationRow() {
                return ((systematicExaminationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new systematicExaminationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(systematicExaminationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.systematicExaminationRowChanged != null)) {
                    this.systematicExaminationRowChanged(this, new systematicExaminationRowChangeEvent(((systematicExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.systematicExaminationRowChanging != null)) {
                    this.systematicExaminationRowChanging(this, new systematicExaminationRowChangeEvent(((systematicExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.systematicExaminationRowDeleted != null)) {
                    this.systematicExaminationRowDeleted(this, new systematicExaminationRowChangeEvent(((systematicExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.systematicExaminationRowDeleting != null)) {
                    this.systematicExaminationRowDeleting(this, new systematicExaminationRowChangeEvent(((systematicExaminationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovesystematicExaminationRow(systematicExaminationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                formulationDataset ds = new formulationDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "systematicExaminationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class investigationDataTable : global::System.Data.TypedTableBase<investigationRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnvisit_no;
            
            private global::System.Data.DataColumn columncompleteBloodExamination;
            
            private global::System.Data.DataColumn columncompleteUrineExamination;
            
            private global::System.Data.DataColumn columnliverFunctionTest;
            
            private global::System.Data.DataColumn columnecg;
            
            private global::System.Data.DataColumn columnbloodSugarRb;
            
            private global::System.Data.DataColumn columnbloodSugarArea;
            
            private global::System.Data.DataColumn columnthyroidFuctionTest;
            
            private global::System.Data.DataColumn columnradiography;
            
            private global::System.Data.DataColumn columnulgranSonography;
            
            private global::System.Data.DataColumn columnctScan;
            
            private global::System.Data.DataColumn columnotherComments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public investigationDataTable() {
                this.TableName = "investigation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal investigationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected investigationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn visit_noColumn {
                get {
                    return this.columnvisit_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn completeBloodExaminationColumn {
                get {
                    return this.columncompleteBloodExamination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn completeUrineExaminationColumn {
                get {
                    return this.columncompleteUrineExamination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn liverFunctionTestColumn {
                get {
                    return this.columnliverFunctionTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ecgColumn {
                get {
                    return this.columnecg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bloodSugarRbColumn {
                get {
                    return this.columnbloodSugarRb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bloodSugarAreaColumn {
                get {
                    return this.columnbloodSugarArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn thyroidFuctionTestColumn {
                get {
                    return this.columnthyroidFuctionTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn radiographyColumn {
                get {
                    return this.columnradiography;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ulgranSonographyColumn {
                get {
                    return this.columnulgranSonography;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ctScanColumn {
                get {
                    return this.columnctScan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn otherCommentsColumn {
                get {
                    return this.columnotherComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public investigationRow this[int index] {
                get {
                    return ((investigationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event investigationRowChangeEventHandler investigationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event investigationRowChangeEventHandler investigationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event investigationRowChangeEventHandler investigationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event investigationRowChangeEventHandler investigationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddinvestigationRow(investigationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public investigationRow AddinvestigationRow(int id, int visit_no, string completeBloodExamination, string completeUrineExamination, string liverFunctionTest, string ecg, int bloodSugarRb, string bloodSugarArea, string thyroidFuctionTest, string radiography, string ulgranSonography, string ctScan, string otherComments) {
                investigationRow rowinvestigationRow = ((investigationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        visit_no,
                        completeBloodExamination,
                        completeUrineExamination,
                        liverFunctionTest,
                        ecg,
                        bloodSugarRb,
                        bloodSugarArea,
                        thyroidFuctionTest,
                        radiography,
                        ulgranSonography,
                        ctScan,
                        otherComments};
                rowinvestigationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinvestigationRow);
                return rowinvestigationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                investigationDataTable cln = ((investigationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new investigationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnvisit_no = base.Columns["visit_no"];
                this.columncompleteBloodExamination = base.Columns["completeBloodExamination"];
                this.columncompleteUrineExamination = base.Columns["completeUrineExamination"];
                this.columnliverFunctionTest = base.Columns["liverFunctionTest"];
                this.columnecg = base.Columns["ecg"];
                this.columnbloodSugarRb = base.Columns["bloodSugarRb"];
                this.columnbloodSugarArea = base.Columns["bloodSugarArea"];
                this.columnthyroidFuctionTest = base.Columns["thyroidFuctionTest"];
                this.columnradiography = base.Columns["radiography"];
                this.columnulgranSonography = base.Columns["ulgranSonography"];
                this.columnctScan = base.Columns["ctScan"];
                this.columnotherComments = base.Columns["otherComments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnvisit_no = new global::System.Data.DataColumn("visit_no", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvisit_no);
                this.columncompleteBloodExamination = new global::System.Data.DataColumn("completeBloodExamination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompleteBloodExamination);
                this.columncompleteUrineExamination = new global::System.Data.DataColumn("completeUrineExamination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompleteUrineExamination);
                this.columnliverFunctionTest = new global::System.Data.DataColumn("liverFunctionTest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnliverFunctionTest);
                this.columnecg = new global::System.Data.DataColumn("ecg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnecg);
                this.columnbloodSugarRb = new global::System.Data.DataColumn("bloodSugarRb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbloodSugarRb);
                this.columnbloodSugarArea = new global::System.Data.DataColumn("bloodSugarArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbloodSugarArea);
                this.columnthyroidFuctionTest = new global::System.Data.DataColumn("thyroidFuctionTest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthyroidFuctionTest);
                this.columnradiography = new global::System.Data.DataColumn("radiography", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnradiography);
                this.columnulgranSonography = new global::System.Data.DataColumn("ulgranSonography", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnulgranSonography);
                this.columnctScan = new global::System.Data.DataColumn("ctScan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnctScan);
                this.columnotherComments = new global::System.Data.DataColumn("otherComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherComments);
                this.columnid.AllowDBNull = false;
                this.columnvisit_no.AllowDBNull = false;
                this.columncompleteBloodExamination.MaxLength = 2147483647;
                this.columncompleteUrineExamination.MaxLength = 2147483647;
                this.columnliverFunctionTest.MaxLength = 2147483647;
                this.columnecg.MaxLength = 2147483647;
                this.columnbloodSugarRb.AllowDBNull = false;
                this.columnbloodSugarArea.MaxLength = 2147483647;
                this.columnthyroidFuctionTest.MaxLength = 2147483647;
                this.columnradiography.MaxLength = 2147483647;
                this.columnulgranSonography.MaxLength = 2147483647;
                this.columnctScan.MaxLength = 50;
                this.columnotherComments.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public investigationRow NewinvestigationRow() {
                return ((investigationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new investigationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(investigationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.investigationRowChanged != null)) {
                    this.investigationRowChanged(this, new investigationRowChangeEvent(((investigationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.investigationRowChanging != null)) {
                    this.investigationRowChanging(this, new investigationRowChangeEvent(((investigationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.investigationRowDeleted != null)) {
                    this.investigationRowDeleted(this, new investigationRowChangeEvent(((investigationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.investigationRowDeleting != null)) {
                    this.investigationRowDeleting(this, new investigationRowChangeEvent(((investigationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveinvestigationRow(investigationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                formulationDataset ds = new formulationDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "investigationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sysMedicationDataTable : global::System.Data.TypedTableBase<sysMedicationRow> {
            
            private global::System.Data.DataColumn columnmed_name;
            
            private global::System.Data.DataColumn columnpatient_reg;
            
            private global::System.Data.DataColumn columnvisit_no;
            
            private global::System.Data.DataColumn columnquantity;
            
            private global::System.Data.DataColumn columnmorning;
            
            private global::System.Data.DataColumn columnafternoon;
            
            private global::System.Data.DataColumn columnnight;
            
            private global::System.Data.DataColumn columndirections;
            
            private global::System.Data.DataColumn columndurations;
            
            private global::System.Data.DataColumn columndirection_summary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sysMedicationDataTable() {
                this.TableName = "sysMedication";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal sysMedicationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected sysMedicationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn med_nameColumn {
                get {
                    return this.columnmed_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patient_regColumn {
                get {
                    return this.columnpatient_reg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn visit_noColumn {
                get {
                    return this.columnvisit_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn morningColumn {
                get {
                    return this.columnmorning;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn afternoonColumn {
                get {
                    return this.columnafternoon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nightColumn {
                get {
                    return this.columnnight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn directionsColumn {
                get {
                    return this.columndirections;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn durationsColumn {
                get {
                    return this.columndurations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn direction_summaryColumn {
                get {
                    return this.columndirection_summary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sysMedicationRow this[int index] {
                get {
                    return ((sysMedicationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sysMedicationRowChangeEventHandler sysMedicationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sysMedicationRowChangeEventHandler sysMedicationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sysMedicationRowChangeEventHandler sysMedicationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sysMedicationRowChangeEventHandler sysMedicationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddsysMedicationRow(sysMedicationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sysMedicationRow AddsysMedicationRow(string med_name, int patient_reg, int visit_no, int quantity, byte morning, byte afternoon, byte night, string directions, string durations, string direction_summary) {
                sysMedicationRow rowsysMedicationRow = ((sysMedicationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        med_name,
                        patient_reg,
                        visit_no,
                        quantity,
                        morning,
                        afternoon,
                        night,
                        directions,
                        durations,
                        direction_summary};
                rowsysMedicationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsysMedicationRow);
                return rowsysMedicationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                sysMedicationDataTable cln = ((sysMedicationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sysMedicationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnmed_name = base.Columns["med_name"];
                this.columnpatient_reg = base.Columns["patient_reg"];
                this.columnvisit_no = base.Columns["visit_no"];
                this.columnquantity = base.Columns["quantity"];
                this.columnmorning = base.Columns["morning"];
                this.columnafternoon = base.Columns["afternoon"];
                this.columnnight = base.Columns["night"];
                this.columndirections = base.Columns["directions"];
                this.columndurations = base.Columns["durations"];
                this.columndirection_summary = base.Columns["direction_summary"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnmed_name = new global::System.Data.DataColumn("med_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmed_name);
                this.columnpatient_reg = new global::System.Data.DataColumn("patient_reg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatient_reg);
                this.columnvisit_no = new global::System.Data.DataColumn("visit_no", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvisit_no);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columnmorning = new global::System.Data.DataColumn("morning", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmorning);
                this.columnafternoon = new global::System.Data.DataColumn("afternoon", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnafternoon);
                this.columnnight = new global::System.Data.DataColumn("night", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnight);
                this.columndirections = new global::System.Data.DataColumn("directions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndirections);
                this.columndurations = new global::System.Data.DataColumn("durations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndurations);
                this.columndirection_summary = new global::System.Data.DataColumn("direction_summary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndirection_summary);
                this.columnmed_name.MaxLength = 255;
                this.columndirections.MaxLength = 50;
                this.columndurations.MaxLength = 50;
                this.columndirection_summary.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sysMedicationRow NewsysMedicationRow() {
                return ((sysMedicationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sysMedicationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(sysMedicationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sysMedicationRowChanged != null)) {
                    this.sysMedicationRowChanged(this, new sysMedicationRowChangeEvent(((sysMedicationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sysMedicationRowChanging != null)) {
                    this.sysMedicationRowChanging(this, new sysMedicationRowChangeEvent(((sysMedicationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sysMedicationRowDeleted != null)) {
                    this.sysMedicationRowDeleted(this, new sysMedicationRowChangeEvent(((sysMedicationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sysMedicationRowDeleting != null)) {
                    this.sysMedicationRowDeleting(this, new sysMedicationRowChangeEvent(((sysMedicationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovesysMedicationRow(sysMedicationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                formulationDataset ds = new formulationDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sysMedicationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class counsellingDataTable : global::System.Data.TypedTableBase<counsellingRow> {
            
            private global::System.Data.DataColumn columnsuggestion;
            
            private global::System.Data.DataColumn columntherapy_advise;
            
            private global::System.Data.DataColumn columnoutcome;
            
            private global::System.Data.DataColumn columnpatient_reg;
            
            private global::System.Data.DataColumn columnvisit_no;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public counsellingDataTable() {
                this.TableName = "counselling";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal counsellingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected counsellingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn suggestionColumn {
                get {
                    return this.columnsuggestion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn therapy_adviseColumn {
                get {
                    return this.columntherapy_advise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn outcomeColumn {
                get {
                    return this.columnoutcome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patient_regColumn {
                get {
                    return this.columnpatient_reg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn visit_noColumn {
                get {
                    return this.columnvisit_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public counsellingRow this[int index] {
                get {
                    return ((counsellingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event counsellingRowChangeEventHandler counsellingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event counsellingRowChangeEventHandler counsellingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event counsellingRowChangeEventHandler counsellingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event counsellingRowChangeEventHandler counsellingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcounsellingRow(counsellingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public counsellingRow AddcounsellingRow(string suggestion, string therapy_advise, string outcome, int patient_reg, int visit_no) {
                counsellingRow rowcounsellingRow = ((counsellingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        suggestion,
                        therapy_advise,
                        outcome,
                        patient_reg,
                        visit_no};
                rowcounsellingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcounsellingRow);
                return rowcounsellingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                counsellingDataTable cln = ((counsellingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new counsellingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnsuggestion = base.Columns["suggestion"];
                this.columntherapy_advise = base.Columns["therapy_advise"];
                this.columnoutcome = base.Columns["outcome"];
                this.columnpatient_reg = base.Columns["patient_reg"];
                this.columnvisit_no = base.Columns["visit_no"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnsuggestion = new global::System.Data.DataColumn("suggestion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuggestion);
                this.columntherapy_advise = new global::System.Data.DataColumn("therapy_advise", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntherapy_advise);
                this.columnoutcome = new global::System.Data.DataColumn("outcome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoutcome);
                this.columnpatient_reg = new global::System.Data.DataColumn("patient_reg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatient_reg);
                this.columnvisit_no = new global::System.Data.DataColumn("visit_no", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvisit_no);
                this.columnsuggestion.MaxLength = 150;
                this.columntherapy_advise.MaxLength = 150;
                this.columnoutcome.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public counsellingRow NewcounsellingRow() {
                return ((counsellingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new counsellingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(counsellingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.counsellingRowChanged != null)) {
                    this.counsellingRowChanged(this, new counsellingRowChangeEvent(((counsellingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.counsellingRowChanging != null)) {
                    this.counsellingRowChanging(this, new counsellingRowChangeEvent(((counsellingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.counsellingRowDeleted != null)) {
                    this.counsellingRowDeleted(this, new counsellingRowChangeEvent(((counsellingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.counsellingRowDeleting != null)) {
                    this.counsellingRowDeleting(this, new counsellingRowChangeEvent(((counsellingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecounsellingRow(counsellingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                formulationDataset ds = new formulationDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "counsellingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class illnessHistoryRow : global::System.Data.DataRow {
            
            private illnessHistoryDataTable tableillnessHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal illnessHistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableillnessHistory = ((illnessHistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int patient_reg {
                get {
                    return ((int)(this[this.tableillnessHistory.patient_regColumn]));
                }
                set {
                    this[this.tableillnessHistory.patient_regColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string illHistoryText {
                get {
                    try {
                        return ((string)(this[this.tableillnessHistory.illHistoryTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'illHistoryText\' in table \'illnessHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableillnessHistory.illHistoryTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string currentTreatmentText {
                get {
                    try {
                        return ((string)(this[this.tableillnessHistory.currentTreatmentTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'currentTreatmentText\' in table \'illnessHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableillnessHistory.currentTreatmentTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pastMedHistoryText {
                get {
                    try {
                        return ((string)(this[this.tableillnessHistory.pastMedHistoryTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pastMedHistoryText\' in table \'illnessHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableillnessHistory.pastMedHistoryTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pastPsychHistoryText {
                get {
                    try {
                        return ((string)(this[this.tableillnessHistory.pastPsychHistoryTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pastPsychHistoryText\' in table \'illnessHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableillnessHistory.pastPsychHistoryTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cureRb {
                get {
                    return ((int)(this[this.tableillnessHistory.cureRbColumn]));
                }
                set {
                    this[this.tableillnessHistory.cureRbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cureText {
                get {
                    try {
                        return ((string)(this[this.tableillnessHistory.cureTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cureText\' in table \'illnessHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableillnessHistory.cureTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string previousText {
                get {
                    try {
                        return ((string)(this[this.tableillnessHistory.previousTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'previousText\' in table \'illnessHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableillnessHistory.previousTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int previousAdmissions {
                get {
                    try {
                        return ((int)(this[this.tableillnessHistory.previousAdmissionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'previousAdmissions\' in table \'illnessHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableillnessHistory.previousAdmissionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string treatmentHistoryDd {
                get {
                    try {
                        return ((string)(this[this.tableillnessHistory.treatmentHistoryDdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'treatmentHistoryDd\' in table \'illnessHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableillnessHistory.treatmentHistoryDdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pastMedicalHistoryDd {
                get {
                    try {
                        return ((string)(this[this.tableillnessHistory.pastMedicalHistoryDdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pastMedicalHistoryDd\' in table \'illnessHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableillnessHistory.pastMedicalHistoryDdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pastPsychiatricHistoryDd {
                get {
                    try {
                        return ((string)(this[this.tableillnessHistory.pastPsychiatricHistoryDdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pastPsychiatricHistoryDd\' in table \'illnessHistory\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableillnessHistory.pastPsychiatricHistoryDdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsillHistoryTextNull() {
                return this.IsNull(this.tableillnessHistory.illHistoryTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetillHistoryTextNull() {
                this[this.tableillnessHistory.illHistoryTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscurrentTreatmentTextNull() {
                return this.IsNull(this.tableillnessHistory.currentTreatmentTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcurrentTreatmentTextNull() {
                this[this.tableillnessHistory.currentTreatmentTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspastMedHistoryTextNull() {
                return this.IsNull(this.tableillnessHistory.pastMedHistoryTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpastMedHistoryTextNull() {
                this[this.tableillnessHistory.pastMedHistoryTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspastPsychHistoryTextNull() {
                return this.IsNull(this.tableillnessHistory.pastPsychHistoryTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpastPsychHistoryTextNull() {
                this[this.tableillnessHistory.pastPsychHistoryTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscureTextNull() {
                return this.IsNull(this.tableillnessHistory.cureTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcureTextNull() {
                this[this.tableillnessHistory.cureTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspreviousTextNull() {
                return this.IsNull(this.tableillnessHistory.previousTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpreviousTextNull() {
                this[this.tableillnessHistory.previousTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspreviousAdmissionsNull() {
                return this.IsNull(this.tableillnessHistory.previousAdmissionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpreviousAdmissionsNull() {
                this[this.tableillnessHistory.previousAdmissionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstreatmentHistoryDdNull() {
                return this.IsNull(this.tableillnessHistory.treatmentHistoryDdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettreatmentHistoryDdNull() {
                this[this.tableillnessHistory.treatmentHistoryDdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspastMedicalHistoryDdNull() {
                return this.IsNull(this.tableillnessHistory.pastMedicalHistoryDdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpastMedicalHistoryDdNull() {
                this[this.tableillnessHistory.pastMedicalHistoryDdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspastPsychiatricHistoryDdNull() {
                return this.IsNull(this.tableillnessHistory.pastPsychiatricHistoryDdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpastPsychiatricHistoryDdNull() {
                this[this.tableillnessHistory.pastPsychiatricHistoryDdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class drugHistoryRow : global::System.Data.DataRow {
            
            private drugHistoryDataTable tabledrugHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal drugHistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledrugHistory = ((drugHistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int patient_reg {
                get {
                    return ((int)(this[this.tabledrugHistory.patient_regColumn]));
                }
                set {
                    this[this.tabledrugHistory.patient_regColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string drugsText {
                get {
                    try {
                        return ((string)(this[this.tabledrugHistory.drugsTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'drugsText\' in table \'drugHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledrugHistory.drugsTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dosageText {
                get {
                    try {
                        return ((string)(this[this.tabledrugHistory.dosageTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dosageText\' in table \'drugHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledrugHistory.dosageTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string durationText {
                get {
                    try {
                        return ((string)(this[this.tabledrugHistory.durationTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'durationText\' in table \'drugHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledrugHistory.durationTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reponseText {
                get {
                    try {
                        return ((string)(this[this.tabledrugHistory.reponseTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reponseText\' in table \'drugHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledrugHistory.reponseTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reactionText {
                get {
                    try {
                        return ((string)(this[this.tabledrugHistory.reactionTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reactionText\' in table \'drugHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledrugHistory.reactionTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string faithTreatmentText {
                get {
                    try {
                        return ((string)(this[this.tabledrugHistory.faithTreatmentTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'faithTreatmentText\' in table \'drugHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledrugHistory.faithTreatmentTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string forensicHistoryText {
                get {
                    try {
                        return ((string)(this[this.tabledrugHistory.forensicHistoryTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'forensicHistoryText\' in table \'drugHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledrugHistory.forensicHistoryTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int faithTreatmentRadio {
                get {
                    try {
                        return ((int)(this[this.tabledrugHistory.faithTreatmentRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'faithTreatmentRadio\' in table \'drugHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledrugHistory.faithTreatmentRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int forensicHistoryRadio {
                get {
                    try {
                        return ((int)(this[this.tabledrugHistory.forensicHistoryRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'forensicHistoryRadio\' in table \'drugHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledrugHistory.forensicHistoryRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int policeCaseRadio {
                get {
                    try {
                        return ((int)(this[this.tabledrugHistory.policeCaseRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'policeCaseRadio\' in table \'drugHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledrugHistory.policeCaseRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdrugsTextNull() {
                return this.IsNull(this.tabledrugHistory.drugsTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdrugsTextNull() {
                this[this.tabledrugHistory.drugsTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdosageTextNull() {
                return this.IsNull(this.tabledrugHistory.dosageTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdosageTextNull() {
                this[this.tabledrugHistory.dosageTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdurationTextNull() {
                return this.IsNull(this.tabledrugHistory.durationTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdurationTextNull() {
                this[this.tabledrugHistory.durationTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreponseTextNull() {
                return this.IsNull(this.tabledrugHistory.reponseTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreponseTextNull() {
                this[this.tabledrugHistory.reponseTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreactionTextNull() {
                return this.IsNull(this.tabledrugHistory.reactionTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreactionTextNull() {
                this[this.tabledrugHistory.reactionTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfaithTreatmentTextNull() {
                return this.IsNull(this.tabledrugHistory.faithTreatmentTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfaithTreatmentTextNull() {
                this[this.tabledrugHistory.faithTreatmentTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsforensicHistoryTextNull() {
                return this.IsNull(this.tabledrugHistory.forensicHistoryTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetforensicHistoryTextNull() {
                this[this.tabledrugHistory.forensicHistoryTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfaithTreatmentRadioNull() {
                return this.IsNull(this.tabledrugHistory.faithTreatmentRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfaithTreatmentRadioNull() {
                this[this.tabledrugHistory.faithTreatmentRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsforensicHistoryRadioNull() {
                return this.IsNull(this.tabledrugHistory.forensicHistoryRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetforensicHistoryRadioNull() {
                this[this.tabledrugHistory.forensicHistoryRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspoliceCaseRadioNull() {
                return this.IsNull(this.tabledrugHistory.policeCaseRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpoliceCaseRadioNull() {
                this[this.tabledrugHistory.policeCaseRadioColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class personalDetailsRow : global::System.Data.DataRow {
            
            private personalDetailsDataTable tablepersonalDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal personalDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepersonalDetails = ((personalDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prenatalText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.prenatalTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prenatalText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.prenatalTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string perinatalText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.perinatalTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'perinatalText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.perinatalTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string postnatalText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.postnatalTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'postnatalText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.postnatalTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int milestoneRb {
                get {
                    try {
                        return ((int)(this[this.tablepersonalDetails.milestoneRbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'milestoneRb\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.milestoneRbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string childhoodText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.childhoodTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'childhoodText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.childhoodTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string schoolingText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.schoolingTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'schoolingText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.schoolingTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int educationRb {
                get {
                    try {
                        return ((int)(this[this.tablepersonalDetails.educationRbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'educationRb\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.educationRbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string occupationText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.occupationTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'occupationText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.occupationTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string incomeText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.incomeTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'incomeText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.incomeTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string psychoSexualhistoryText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.psychoSexualhistoryTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'psychoSexualhistoryText\' in table \'personalDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.psychoSexualhistoryTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string menstrualHistoryText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.menstrualHistoryTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'menstrualHistoryText\' in table \'personalDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.menstrualHistoryTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string maritalStatusDD {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.maritalStatusDDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maritalStatusDD\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.maritalStatusDDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string genderDD {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.genderDDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'genderDD\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.genderDDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int childrenText {
                get {
                    try {
                        return ((int)(this[this.tablepersonalDetails.childrenTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'childrenText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.childrenTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string spouseRelationshipText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.spouseRelationshipTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'spouseRelationshipText\' in table \'personalDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.spouseRelationshipTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string hobbiesText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.hobbiesTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hobbiesText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.hobbiesTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string characteristicText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.characteristicTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'characteristicText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.characteristicTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string behaviorText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.behaviorTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'behaviorText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.behaviorTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string attitudeText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.attitudeTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attitudeText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.attitudeTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string relationText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.relationTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'relationText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.relationTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string achievementsText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.achievementsTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'achievementsText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.achievementsTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string religiousText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.religiousTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'religiousText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.religiousTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string aptitudesText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.aptitudesTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aptitudesText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.aptitudesTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string otherText {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.otherTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherText\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.otherTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int patient_reg {
                get {
                    return ((int)(this[this.tablepersonalDetails.patient_regColumn]));
                }
                set {
                    this[this.tablepersonalDetails.patient_regColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string startOfSchooling {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.startOfSchoolingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'startOfSchooling\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.startOfSchoolingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string occupation {
                get {
                    try {
                        return ((string)(this[this.tablepersonalDetails.occupationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'occupation\' in table \'personalDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepersonalDetails.occupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprenatalTextNull() {
                return this.IsNull(this.tablepersonalDetails.prenatalTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprenatalTextNull() {
                this[this.tablepersonalDetails.prenatalTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsperinatalTextNull() {
                return this.IsNull(this.tablepersonalDetails.perinatalTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetperinatalTextNull() {
                this[this.tablepersonalDetails.perinatalTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspostnatalTextNull() {
                return this.IsNull(this.tablepersonalDetails.postnatalTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpostnatalTextNull() {
                this[this.tablepersonalDetails.postnatalTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmilestoneRbNull() {
                return this.IsNull(this.tablepersonalDetails.milestoneRbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmilestoneRbNull() {
                this[this.tablepersonalDetails.milestoneRbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IschildhoodTextNull() {
                return this.IsNull(this.tablepersonalDetails.childhoodTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetchildhoodTextNull() {
                this[this.tablepersonalDetails.childhoodTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsschoolingTextNull() {
                return this.IsNull(this.tablepersonalDetails.schoolingTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetschoolingTextNull() {
                this[this.tablepersonalDetails.schoolingTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IseducationRbNull() {
                return this.IsNull(this.tablepersonalDetails.educationRbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SeteducationRbNull() {
                this[this.tablepersonalDetails.educationRbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoccupationTextNull() {
                return this.IsNull(this.tablepersonalDetails.occupationTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoccupationTextNull() {
                this[this.tablepersonalDetails.occupationTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsincomeTextNull() {
                return this.IsNull(this.tablepersonalDetails.incomeTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetincomeTextNull() {
                this[this.tablepersonalDetails.incomeTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspsychoSexualhistoryTextNull() {
                return this.IsNull(this.tablepersonalDetails.psychoSexualhistoryTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpsychoSexualhistoryTextNull() {
                this[this.tablepersonalDetails.psychoSexualhistoryTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmenstrualHistoryTextNull() {
                return this.IsNull(this.tablepersonalDetails.menstrualHistoryTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmenstrualHistoryTextNull() {
                this[this.tablepersonalDetails.menstrualHistoryTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmaritalStatusDDNull() {
                return this.IsNull(this.tablepersonalDetails.maritalStatusDDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmaritalStatusDDNull() {
                this[this.tablepersonalDetails.maritalStatusDDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsgenderDDNull() {
                return this.IsNull(this.tablepersonalDetails.genderDDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetgenderDDNull() {
                this[this.tablepersonalDetails.genderDDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IschildrenTextNull() {
                return this.IsNull(this.tablepersonalDetails.childrenTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetchildrenTextNull() {
                this[this.tablepersonalDetails.childrenTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsspouseRelationshipTextNull() {
                return this.IsNull(this.tablepersonalDetails.spouseRelationshipTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetspouseRelationshipTextNull() {
                this[this.tablepersonalDetails.spouseRelationshipTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IshobbiesTextNull() {
                return this.IsNull(this.tablepersonalDetails.hobbiesTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SethobbiesTextNull() {
                this[this.tablepersonalDetails.hobbiesTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscharacteristicTextNull() {
                return this.IsNull(this.tablepersonalDetails.characteristicTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcharacteristicTextNull() {
                this[this.tablepersonalDetails.characteristicTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbehaviorTextNull() {
                return this.IsNull(this.tablepersonalDetails.behaviorTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbehaviorTextNull() {
                this[this.tablepersonalDetails.behaviorTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattitudeTextNull() {
                return this.IsNull(this.tablepersonalDetails.attitudeTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattitudeTextNull() {
                this[this.tablepersonalDetails.attitudeTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrelationTextNull() {
                return this.IsNull(this.tablepersonalDetails.relationTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrelationTextNull() {
                this[this.tablepersonalDetails.relationTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsachievementsTextNull() {
                return this.IsNull(this.tablepersonalDetails.achievementsTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetachievementsTextNull() {
                this[this.tablepersonalDetails.achievementsTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreligiousTextNull() {
                return this.IsNull(this.tablepersonalDetails.religiousTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreligiousTextNull() {
                this[this.tablepersonalDetails.religiousTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsaptitudesTextNull() {
                return this.IsNull(this.tablepersonalDetails.aptitudesTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetaptitudesTextNull() {
                this[this.tablepersonalDetails.aptitudesTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsotherTextNull() {
                return this.IsNull(this.tablepersonalDetails.otherTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetotherTextNull() {
                this[this.tablepersonalDetails.otherTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstartOfSchoolingNull() {
                return this.IsNull(this.tablepersonalDetails.startOfSchoolingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstartOfSchoolingNull() {
                this[this.tablepersonalDetails.startOfSchoolingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoccupationNull() {
                return this.IsNull(this.tablepersonalDetails.occupationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoccupationNull() {
                this[this.tablepersonalDetails.occupationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class familyHistoryRow : global::System.Data.DataRow {
            
            private familyHistoryDataTable tablefamilyHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal familyHistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefamilyHistory = ((familyHistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string temperamentDD {
                get {
                    try {
                        return ((string)(this[this.tablefamilyHistory.temperamentDDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'temperamentDD\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.temperamentDDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string familyPsychIllDD {
                get {
                    try {
                        return ((string)(this[this.tablefamilyHistory.familyPsychIllDDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'familyPsychIllDD\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.familyPsychIllDDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fatherText {
                get {
                    try {
                        return ((string)(this[this.tablefamilyHistory.fatherTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fatherText\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.fatherTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string motherText {
                get {
                    try {
                        return ((string)(this[this.tablefamilyHistory.motherTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'motherText\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.motherTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string siblingsText {
                get {
                    try {
                        return ((string)(this[this.tablefamilyHistory.siblingsTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'siblingsText\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.siblingsTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string illnessTypeDD {
                get {
                    try {
                        return ((string)(this[this.tablefamilyHistory.illnessTypeDDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'illnessTypeDD\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.illnessTypeDDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string abuseHistoryDD {
                get {
                    try {
                        return ((string)(this[this.tablefamilyHistory.abuseHistoryDDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'abuseHistoryDD\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.abuseHistoryDDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string typeText {
                get {
                    try {
                        return ((string)(this[this.tablefamilyHistory.typeTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'typeText\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.typeTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string durationText {
                get {
                    try {
                        return ((string)(this[this.tablefamilyHistory.durationTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'durationText\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.durationTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string amountText {
                get {
                    try {
                        return ((string)(this[this.tablefamilyHistory.amountTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amountText\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.amountTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string abuseModeText {
                get {
                    try {
                        return ((string)(this[this.tablefamilyHistory.abuseModeTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'abuseModeText\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.abuseModeTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string detoxificationText {
                get {
                    try {
                        return ((string)(this[this.tablefamilyHistory.detoxificationTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'detoxificationText\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.detoxificationTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int patient_reg {
                get {
                    return ((int)(this[this.tablefamilyHistory.patient_regColumn]));
                }
                set {
                    this[this.tablefamilyHistory.patient_regColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int admissionToxificationRadio {
                get {
                    try {
                        return ((int)(this[this.tablefamilyHistory.admissionToxificationRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'admissionToxificationRadio\' in table \'familyHistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.admissionToxificationRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int noOfDetoxAdmissionsDd {
                get {
                    try {
                        return ((int)(this[this.tablefamilyHistory.noOfDetoxAdmissionsDdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'noOfDetoxAdmissionsDd\' in table \'familyHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefamilyHistory.noOfDetoxAdmissionsDdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstemperamentDDNull() {
                return this.IsNull(this.tablefamilyHistory.temperamentDDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettemperamentDDNull() {
                this[this.tablefamilyHistory.temperamentDDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfamilyPsychIllDDNull() {
                return this.IsNull(this.tablefamilyHistory.familyPsychIllDDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfamilyPsychIllDDNull() {
                this[this.tablefamilyHistory.familyPsychIllDDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfatherTextNull() {
                return this.IsNull(this.tablefamilyHistory.fatherTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfatherTextNull() {
                this[this.tablefamilyHistory.fatherTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmotherTextNull() {
                return this.IsNull(this.tablefamilyHistory.motherTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmotherTextNull() {
                this[this.tablefamilyHistory.motherTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssiblingsTextNull() {
                return this.IsNull(this.tablefamilyHistory.siblingsTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsiblingsTextNull() {
                this[this.tablefamilyHistory.siblingsTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsillnessTypeDDNull() {
                return this.IsNull(this.tablefamilyHistory.illnessTypeDDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetillnessTypeDDNull() {
                this[this.tablefamilyHistory.illnessTypeDDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsabuseHistoryDDNull() {
                return this.IsNull(this.tablefamilyHistory.abuseHistoryDDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetabuseHistoryDDNull() {
                this[this.tablefamilyHistory.abuseHistoryDDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstypeTextNull() {
                return this.IsNull(this.tablefamilyHistory.typeTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettypeTextNull() {
                this[this.tablefamilyHistory.typeTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdurationTextNull() {
                return this.IsNull(this.tablefamilyHistory.durationTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdurationTextNull() {
                this[this.tablefamilyHistory.durationTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsamountTextNull() {
                return this.IsNull(this.tablefamilyHistory.amountTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetamountTextNull() {
                this[this.tablefamilyHistory.amountTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsabuseModeTextNull() {
                return this.IsNull(this.tablefamilyHistory.abuseModeTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetabuseModeTextNull() {
                this[this.tablefamilyHistory.abuseModeTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdetoxificationTextNull() {
                return this.IsNull(this.tablefamilyHistory.detoxificationTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdetoxificationTextNull() {
                this[this.tablefamilyHistory.detoxificationTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsadmissionToxificationRadioNull() {
                return this.IsNull(this.tablefamilyHistory.admissionToxificationRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetadmissionToxificationRadioNull() {
                this[this.tablefamilyHistory.admissionToxificationRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnoOfDetoxAdmissionsDdNull() {
                return this.IsNull(this.tablefamilyHistory.noOfDetoxAdmissionsDdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnoOfDetoxAdmissionsDdNull() {
                this[this.tablefamilyHistory.noOfDetoxAdmissionsDdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ComplaintRow : global::System.Data.DataRow {
            
            private ComplaintDataTable tableComplaint;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ComplaintRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableComplaint = ((ComplaintDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime diagnose_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableComplaint.diagnose_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'diagnose_date\' in table \'Complaint\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableComplaint.diagnose_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string disease_name {
                get {
                    try {
                        return ((string)(this[this.tableComplaint.disease_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disease_name\' in table \'Complaint\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableComplaint.disease_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdiagnose_dateNull() {
                return this.IsNull(this.tableComplaint.diagnose_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdiagnose_dateNull() {
                this[this.tableComplaint.diagnose_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdisease_nameNull() {
                return this.IsNull(this.tableComplaint.disease_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdisease_nameNull() {
                this[this.tableComplaint.disease_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class mentalStateExaminationRow : global::System.Data.DataRow {
            
            private mentalStateExaminationDataTable tablementalStateExamination;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal mentalStateExaminationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablementalStateExamination = ((mentalStateExaminationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Physical_Appearance {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.Physical_AppearanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Physical_Appearance\' in table \'mentalStateExamination\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Physical_AppearanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Dress {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.DressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dress\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.DressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Posture {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.PostureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Posture\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.PostureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Rapport {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.RapportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rapport\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.RapportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Eye_Contact {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.Eye_ContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Eye_Contact\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Eye_ContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Cooperative {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.CooperativeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cooperative\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.CooperativeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Communicative {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.CommunicativeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Communicative\' in table \'mentalStateExamination\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.CommunicativeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Psychomotor_activity {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.Psychomotor_activityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Psychomotor_activity\' in table \'mentalStateExamination\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Psychomotor_activityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Movements {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.MovementsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Movements\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.MovementsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Involuntary {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.InvoluntaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Involuntary\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.InvoluntaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Voluntary {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.VoluntaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Voluntary\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.VoluntaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Speech {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.SpeechColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speech\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.SpeechColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tone {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.ToneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tone\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.ToneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Relevance {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.RelevanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Relevance\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.RelevanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Coherence {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.CoherenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Coherence\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.CoherenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Volume {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.VolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Volume\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.VolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string volume2 {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.volume2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'volume2\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.volume2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sample_of_talk {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.Sample_of_talkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sample_of_talk\' in table \'mentalStateExamination\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Sample_of_talkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string mood_Subjective {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.mood_SubjectiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mood_Subjective\' in table \'mentalStateExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.mood_SubjectiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string mood_Objective {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.mood_ObjectiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mood_Objective\' in table \'mentalStateExamination\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.mood_ObjectiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Stream_of_thoughts_Poverty {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Stream_of_thoughts_PovertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stream_of_thoughts_Poverty\' in table \'mentalStateExaminatio" +
                                "n\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Stream_of_thoughts_PovertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Stream_of_thoughts_Pressure {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Stream_of_thoughts_PressureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stream_of_thoughts_Pressure\' in table \'mentalStateExaminati" +
                                "on\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Stream_of_thoughts_PressureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Stream_of_thoughts_Thought {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Stream_of_thoughts_ThoughtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stream_of_thoughts_Thought\' in table \'mentalStateExaminatio" +
                                "n\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Stream_of_thoughts_ThoughtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Flight_of_Ideas {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Flight_of_IdeasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Flight_of_Ideas\' in table \'mentalStateExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Flight_of_IdeasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Clang_association {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Clang_associationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Clang_association\' in table \'mentalStateExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Clang_associationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Loosening_of_association {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Loosening_of_associationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Loosening_of_association\' in table \'mentalStateExamination\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Loosening_of_associationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Knights_move {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Knights_moveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Knights_move\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Knights_moveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Derailment {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.DerailmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Derailment\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.DerailmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Word_salad {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Word_saladColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Word_salad\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Word_saladColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Taking_past_the_point {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Taking_past_the_pointColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Taking_past_the_point\' in table \'mentalStateExamination\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Taking_past_the_pointColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Tangentiality {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.TangentialityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tangentiality\' in table \'mentalStateExamination\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.TangentialityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Circumstanciality {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.CircumstancialityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Circumstanciality\' in table \'mentalStateExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.CircumstancialityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Preservation {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.PreservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Preservation\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.PreservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Neologism {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.NeologismColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Neologism\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.NeologismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Suicidal_Ideatio {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Suicidal_IdeatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Suicidal_Ideatio\' in table \'mentalStateExamination\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Suicidal_IdeatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Homicidal_Ideation {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Homicidal_IdeationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Homicidal_Ideation\' in table \'mentalStateExamination\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Homicidal_IdeationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Hopelessness {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.HopelessnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hopelessness\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.HopelessnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Helplessness {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.HelplessnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Helplessness\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.HelplessnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Worthlessness {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.WorthlessnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Worthlessness\' in table \'mentalStateExamination\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.WorthlessnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DelusionsType {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.DelusionsTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DelusionsType\' in table \'mentalStateExamination\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.DelusionsTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DelusionsContent {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.DelusionsContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DelusionsContent\' in table \'mentalStateExamination\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.DelusionsContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Delusions_of_reference {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Delusions_of_referenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Delusions_of_reference\' in table \'mentalStateExamination\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Delusions_of_referenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Grandiose_guilt {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Grandiose_guiltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grandiose_guilt\' in table \'mentalStateExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Grandiose_guiltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Nihilistic {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.NihilisticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nihilistic\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.NihilisticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Hypochondriacal {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.HypochondriacalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hypochondriacal\' in table \'mentalStateExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.HypochondriacalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Religious {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.ReligiousColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Religious\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.ReligiousColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Sexual {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.SexualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sexual\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.SexualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Delusion_of_control {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Delusion_of_controlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Delusion_of_control\' in table \'mentalStateExamination\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Delusion_of_controlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Thought_insertion {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Thought_insertionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thought_insertion\' in table \'mentalStateExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Thought_insertionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Withdrawal {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.WithdrawalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Withdrawal\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.WithdrawalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Thought_broadcasting {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Thought_broadcastingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thought_broadcasting\' in table \'mentalStateExamination\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Thought_broadcastingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Obsessive_Compulsive_Phenomena {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.Obsessive_Compulsive_PhenomenaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Obsessive_Compulsive_Phenomena\' in table \'mentalStateExamin" +
                                "ation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Obsessive_Compulsive_PhenomenaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PHOBIAS {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.PHOBIASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHOBIAS\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.PHOBIASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Disorders_Of_Perception {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.Disorders_Of_PerceptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Disorders_Of_Perception\' in table \'mentalStateExamination\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Disorders_Of_PerceptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Depersonalization {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.DepersonalizationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depersonalization\' in table \'mentalStateExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.DepersonalizationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string hallucinations {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.hallucinationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hallucinations\' in table \'mentalStateExamination\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.hallucinationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Auditory_redio {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.Auditory_redioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Auditory_redio\' in table \'mentalStateExamination\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Auditory_redioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Illusions {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.IllusionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Illusions\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.IllusionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IllusionsText {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.IllusionsTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IllusionsText\' in table \'mentalStateExamination\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.IllusionsTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Consciousness {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.ConsciousnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Consciousness\' in table \'mentalStateExamination\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.ConsciousnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Orientation {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.OrientationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orientation\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.OrientationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Serial_Seven {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Serial_SevenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Serial_Seven\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Serial_SevenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Serial_Three {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Serial_ThreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Serial_Three\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Serial_ThreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Serial_Seven_Text {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.Serial_Seven_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Serial_Seven_Text\' in table \'mentalStateExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Serial_Seven_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Serial_Three_Text {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.Serial_Three_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Serial_Three_Text\' in table \'mentalStateExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Serial_Three_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Intelligence {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.IntelligenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Intelligence\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.IntelligenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IQ {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.IQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IQ\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.IQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Memory {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.MemoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Memory\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.MemoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Judgement {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.JudgementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Judgement\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.JudgementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string General_Knowledge {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.General_KnowledgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'General_Knowledge\' in table \'mentalStateExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.General_KnowledgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Concrete_thinking {
                get {
                    try {
                        return ((byte)(this[this.tablementalStateExamination.Concrete_thinkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Concrete_thinking\' in table \'mentalStateExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Concrete_thinkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Concrete_thinking_Text {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.Concrete_thinking_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Concrete_thinking_Text\' in table \'mentalStateExamination\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Concrete_thinking_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Abstrac_thinking {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.Abstrac_thinkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abstrac_thinking\' in table \'mentalStateExamination\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.Abstrac_thinkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Insight {
                get {
                    try {
                        return ((string)(this[this.tablementalStateExamination.InsightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Insight\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.InsightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int patient_id {
                get {
                    try {
                        return ((int)(this[this.tablementalStateExamination.patient_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patient_id\' in table \'mentalStateExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablementalStateExamination.patient_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysical_AppearanceNull() {
                return this.IsNull(this.tablementalStateExamination.Physical_AppearanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysical_AppearanceNull() {
                this[this.tablementalStateExamination.Physical_AppearanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDressNull() {
                return this.IsNull(this.tablementalStateExamination.DressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDressNull() {
                this[this.tablementalStateExamination.DressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostureNull() {
                return this.IsNull(this.tablementalStateExamination.PostureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostureNull() {
                this[this.tablementalStateExamination.PostureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRapportNull() {
                return this.IsNull(this.tablementalStateExamination.RapportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRapportNull() {
                this[this.tablementalStateExamination.RapportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEye_ContactNull() {
                return this.IsNull(this.tablementalStateExamination.Eye_ContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEye_ContactNull() {
                this[this.tablementalStateExamination.Eye_ContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCooperativeNull() {
                return this.IsNull(this.tablementalStateExamination.CooperativeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCooperativeNull() {
                this[this.tablementalStateExamination.CooperativeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommunicativeNull() {
                return this.IsNull(this.tablementalStateExamination.CommunicativeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommunicativeNull() {
                this[this.tablementalStateExamination.CommunicativeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPsychomotor_activityNull() {
                return this.IsNull(this.tablementalStateExamination.Psychomotor_activityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPsychomotor_activityNull() {
                this[this.tablementalStateExamination.Psychomotor_activityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMovementsNull() {
                return this.IsNull(this.tablementalStateExamination.MovementsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMovementsNull() {
                this[this.tablementalStateExamination.MovementsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoluntaryNull() {
                return this.IsNull(this.tablementalStateExamination.InvoluntaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoluntaryNull() {
                this[this.tablementalStateExamination.InvoluntaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoluntaryNull() {
                return this.IsNull(this.tablementalStateExamination.VoluntaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoluntaryNull() {
                this[this.tablementalStateExamination.VoluntaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeechNull() {
                return this.IsNull(this.tablementalStateExamination.SpeechColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeechNull() {
                this[this.tablementalStateExamination.SpeechColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToneNull() {
                return this.IsNull(this.tablementalStateExamination.ToneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToneNull() {
                this[this.tablementalStateExamination.ToneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRelevanceNull() {
                return this.IsNull(this.tablementalStateExamination.RelevanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRelevanceNull() {
                this[this.tablementalStateExamination.RelevanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoherenceNull() {
                return this.IsNull(this.tablementalStateExamination.CoherenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoherenceNull() {
                this[this.tablementalStateExamination.CoherenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolumeNull() {
                return this.IsNull(this.tablementalStateExamination.VolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolumeNull() {
                this[this.tablementalStateExamination.VolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isvolume2Null() {
                return this.IsNull(this.tablementalStateExamination.volume2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setvolume2Null() {
                this[this.tablementalStateExamination.volume2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSample_of_talkNull() {
                return this.IsNull(this.tablementalStateExamination.Sample_of_talkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSample_of_talkNull() {
                this[this.tablementalStateExamination.Sample_of_talkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismood_SubjectiveNull() {
                return this.IsNull(this.tablementalStateExamination.mood_SubjectiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmood_SubjectiveNull() {
                this[this.tablementalStateExamination.mood_SubjectiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismood_ObjectiveNull() {
                return this.IsNull(this.tablementalStateExamination.mood_ObjectiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmood_ObjectiveNull() {
                this[this.tablementalStateExamination.mood_ObjectiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStream_of_thoughts_PovertyNull() {
                return this.IsNull(this.tablementalStateExamination.Stream_of_thoughts_PovertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStream_of_thoughts_PovertyNull() {
                this[this.tablementalStateExamination.Stream_of_thoughts_PovertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStream_of_thoughts_PressureNull() {
                return this.IsNull(this.tablementalStateExamination.Stream_of_thoughts_PressureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStream_of_thoughts_PressureNull() {
                this[this.tablementalStateExamination.Stream_of_thoughts_PressureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStream_of_thoughts_ThoughtNull() {
                return this.IsNull(this.tablementalStateExamination.Stream_of_thoughts_ThoughtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStream_of_thoughts_ThoughtNull() {
                this[this.tablementalStateExamination.Stream_of_thoughts_ThoughtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlight_of_IdeasNull() {
                return this.IsNull(this.tablementalStateExamination.Flight_of_IdeasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlight_of_IdeasNull() {
                this[this.tablementalStateExamination.Flight_of_IdeasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClang_associationNull() {
                return this.IsNull(this.tablementalStateExamination.Clang_associationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClang_associationNull() {
                this[this.tablementalStateExamination.Clang_associationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLoosening_of_associationNull() {
                return this.IsNull(this.tablementalStateExamination.Loosening_of_associationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLoosening_of_associationNull() {
                this[this.tablementalStateExamination.Loosening_of_associationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKnights_moveNull() {
                return this.IsNull(this.tablementalStateExamination.Knights_moveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKnights_moveNull() {
                this[this.tablementalStateExamination.Knights_moveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDerailmentNull() {
                return this.IsNull(this.tablementalStateExamination.DerailmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDerailmentNull() {
                this[this.tablementalStateExamination.DerailmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWord_saladNull() {
                return this.IsNull(this.tablementalStateExamination.Word_saladColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWord_saladNull() {
                this[this.tablementalStateExamination.Word_saladColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaking_past_the_pointNull() {
                return this.IsNull(this.tablementalStateExamination.Taking_past_the_pointColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaking_past_the_pointNull() {
                this[this.tablementalStateExamination.Taking_past_the_pointColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTangentialityNull() {
                return this.IsNull(this.tablementalStateExamination.TangentialityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTangentialityNull() {
                this[this.tablementalStateExamination.TangentialityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCircumstancialityNull() {
                return this.IsNull(this.tablementalStateExamination.CircumstancialityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCircumstancialityNull() {
                this[this.tablementalStateExamination.CircumstancialityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPreservationNull() {
                return this.IsNull(this.tablementalStateExamination.PreservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPreservationNull() {
                this[this.tablementalStateExamination.PreservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeologismNull() {
                return this.IsNull(this.tablementalStateExamination.NeologismColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNeologismNull() {
                this[this.tablementalStateExamination.NeologismColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuicidal_IdeatioNull() {
                return this.IsNull(this.tablementalStateExamination.Suicidal_IdeatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuicidal_IdeatioNull() {
                this[this.tablementalStateExamination.Suicidal_IdeatioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHomicidal_IdeationNull() {
                return this.IsNull(this.tablementalStateExamination.Homicidal_IdeationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHomicidal_IdeationNull() {
                this[this.tablementalStateExamination.Homicidal_IdeationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHopelessnessNull() {
                return this.IsNull(this.tablementalStateExamination.HopelessnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHopelessnessNull() {
                this[this.tablementalStateExamination.HopelessnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHelplessnessNull() {
                return this.IsNull(this.tablementalStateExamination.HelplessnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHelplessnessNull() {
                this[this.tablementalStateExamination.HelplessnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorthlessnessNull() {
                return this.IsNull(this.tablementalStateExamination.WorthlessnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorthlessnessNull() {
                this[this.tablementalStateExamination.WorthlessnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDelusionsTypeNull() {
                return this.IsNull(this.tablementalStateExamination.DelusionsTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDelusionsTypeNull() {
                this[this.tablementalStateExamination.DelusionsTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDelusionsContentNull() {
                return this.IsNull(this.tablementalStateExamination.DelusionsContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDelusionsContentNull() {
                this[this.tablementalStateExamination.DelusionsContentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDelusions_of_referenceNull() {
                return this.IsNull(this.tablementalStateExamination.Delusions_of_referenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDelusions_of_referenceNull() {
                this[this.tablementalStateExamination.Delusions_of_referenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrandiose_guiltNull() {
                return this.IsNull(this.tablementalStateExamination.Grandiose_guiltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrandiose_guiltNull() {
                this[this.tablementalStateExamination.Grandiose_guiltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNihilisticNull() {
                return this.IsNull(this.tablementalStateExamination.NihilisticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNihilisticNull() {
                this[this.tablementalStateExamination.NihilisticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHypochondriacalNull() {
                return this.IsNull(this.tablementalStateExamination.HypochondriacalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHypochondriacalNull() {
                this[this.tablementalStateExamination.HypochondriacalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReligiousNull() {
                return this.IsNull(this.tablementalStateExamination.ReligiousColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReligiousNull() {
                this[this.tablementalStateExamination.ReligiousColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSexualNull() {
                return this.IsNull(this.tablementalStateExamination.SexualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSexualNull() {
                this[this.tablementalStateExamination.SexualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDelusion_of_controlNull() {
                return this.IsNull(this.tablementalStateExamination.Delusion_of_controlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDelusion_of_controlNull() {
                this[this.tablementalStateExamination.Delusion_of_controlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThought_insertionNull() {
                return this.IsNull(this.tablementalStateExamination.Thought_insertionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThought_insertionNull() {
                this[this.tablementalStateExamination.Thought_insertionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWithdrawalNull() {
                return this.IsNull(this.tablementalStateExamination.WithdrawalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWithdrawalNull() {
                this[this.tablementalStateExamination.WithdrawalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThought_broadcastingNull() {
                return this.IsNull(this.tablementalStateExamination.Thought_broadcastingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThought_broadcastingNull() {
                this[this.tablementalStateExamination.Thought_broadcastingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObsessive_Compulsive_PhenomenaNull() {
                return this.IsNull(this.tablementalStateExamination.Obsessive_Compulsive_PhenomenaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObsessive_Compulsive_PhenomenaNull() {
                this[this.tablementalStateExamination.Obsessive_Compulsive_PhenomenaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPHOBIASNull() {
                return this.IsNull(this.tablementalStateExamination.PHOBIASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPHOBIASNull() {
                this[this.tablementalStateExamination.PHOBIASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDisorders_Of_PerceptionNull() {
                return this.IsNull(this.tablementalStateExamination.Disorders_Of_PerceptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDisorders_Of_PerceptionNull() {
                this[this.tablementalStateExamination.Disorders_Of_PerceptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepersonalizationNull() {
                return this.IsNull(this.tablementalStateExamination.DepersonalizationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepersonalizationNull() {
                this[this.tablementalStateExamination.DepersonalizationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IshallucinationsNull() {
                return this.IsNull(this.tablementalStateExamination.hallucinationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SethallucinationsNull() {
                this[this.tablementalStateExamination.hallucinationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAuditory_redioNull() {
                return this.IsNull(this.tablementalStateExamination.Auditory_redioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAuditory_redioNull() {
                this[this.tablementalStateExamination.Auditory_redioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIllusionsNull() {
                return this.IsNull(this.tablementalStateExamination.IllusionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIllusionsNull() {
                this[this.tablementalStateExamination.IllusionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIllusionsTextNull() {
                return this.IsNull(this.tablementalStateExamination.IllusionsTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIllusionsTextNull() {
                this[this.tablementalStateExamination.IllusionsTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsciousnessNull() {
                return this.IsNull(this.tablementalStateExamination.ConsciousnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConsciousnessNull() {
                this[this.tablementalStateExamination.ConsciousnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrientationNull() {
                return this.IsNull(this.tablementalStateExamination.OrientationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrientationNull() {
                this[this.tablementalStateExamination.OrientationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSerial_SevenNull() {
                return this.IsNull(this.tablementalStateExamination.Serial_SevenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSerial_SevenNull() {
                this[this.tablementalStateExamination.Serial_SevenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSerial_ThreeNull() {
                return this.IsNull(this.tablementalStateExamination.Serial_ThreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSerial_ThreeNull() {
                this[this.tablementalStateExamination.Serial_ThreeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSerial_Seven_TextNull() {
                return this.IsNull(this.tablementalStateExamination.Serial_Seven_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSerial_Seven_TextNull() {
                this[this.tablementalStateExamination.Serial_Seven_TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSerial_Three_TextNull() {
                return this.IsNull(this.tablementalStateExamination.Serial_Three_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSerial_Three_TextNull() {
                this[this.tablementalStateExamination.Serial_Three_TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIntelligenceNull() {
                return this.IsNull(this.tablementalStateExamination.IntelligenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIntelligenceNull() {
                this[this.tablementalStateExamination.IntelligenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIQNull() {
                return this.IsNull(this.tablementalStateExamination.IQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIQNull() {
                this[this.tablementalStateExamination.IQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMemoryNull() {
                return this.IsNull(this.tablementalStateExamination.MemoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMemoryNull() {
                this[this.tablementalStateExamination.MemoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJudgementNull() {
                return this.IsNull(this.tablementalStateExamination.JudgementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJudgementNull() {
                this[this.tablementalStateExamination.JudgementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGeneral_KnowledgeNull() {
                return this.IsNull(this.tablementalStateExamination.General_KnowledgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGeneral_KnowledgeNull() {
                this[this.tablementalStateExamination.General_KnowledgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConcrete_thinkingNull() {
                return this.IsNull(this.tablementalStateExamination.Concrete_thinkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConcrete_thinkingNull() {
                this[this.tablementalStateExamination.Concrete_thinkingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConcrete_thinking_TextNull() {
                return this.IsNull(this.tablementalStateExamination.Concrete_thinking_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConcrete_thinking_TextNull() {
                this[this.tablementalStateExamination.Concrete_thinking_TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAbstrac_thinkingNull() {
                return this.IsNull(this.tablementalStateExamination.Abstrac_thinkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAbstrac_thinkingNull() {
                this[this.tablementalStateExamination.Abstrac_thinkingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsightNull() {
                return this.IsNull(this.tablementalStateExamination.InsightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsightNull() {
                this[this.tablementalStateExamination.InsightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ispatient_idNull() {
                return this.IsNull(this.tablementalStateExamination.patient_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setpatient_idNull() {
                this[this.tablementalStateExamination.patient_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class generalPhysicalExaminationRow : global::System.Data.DataRow {
            
            private generalPhysicalExaminationDataTable tablegeneralPhysicalExamination;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal generalPhysicalExaminationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegeneralPhysicalExamination = ((generalPhysicalExaminationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablegeneralPhysicalExamination.idColumn]));
                }
                set {
                    this[this.tablegeneralPhysicalExamination.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string height {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.heightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'height\' in table \'generalPhysicalExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.heightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string weight {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'generalPhysicalExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pulse {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.pulseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pulse\' in table \'generalPhysicalExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.pulseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string skinEruption {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.skinEruptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'skinEruption\' in table \'generalPhysicalExamination\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.skinEruptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string lyingSystolic {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.lyingSystolicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lyingSystolic\' in table \'generalPhysicalExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.lyingSystolicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sittingSystolic {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.sittingSystolicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sittingSystolic\' in table \'generalPhysicalExamination\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.sittingSystolicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string standingSystolic {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.standingSystolicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'standingSystolic\' in table \'generalPhysicalExamination\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.standingSystolicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string temperature {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.temperatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'temperature\' in table \'generalPhysicalExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.temperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dehydration {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.dehydrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dehydration\' in table \'generalPhysicalExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.dehydrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int pallorRb {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.pallorRbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pallorRb\' in table \'generalPhysicalExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.pallorRbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pallorTxt {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.pallorTxtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pallorTxt\' in table \'generalPhysicalExamination\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.pallorTxtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int jaundiceRb {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.jaundiceRbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'jaundiceRb\' in table \'generalPhysicalExamination\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.jaundiceRbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string jaundiceTxt {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.jaundiceTxtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'jaundiceTxt\' in table \'generalPhysicalExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.jaundiceTxtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int oedemaRb {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.oedemaRbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oedemaRb\' in table \'generalPhysicalExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.oedemaRbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string oedemaTxt {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.oedemaTxtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oedemaTxt\' in table \'generalPhysicalExamination\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.oedemaTxtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kylonychiaRb {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.kylonychiaRbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kylonychiaRb\' in table \'generalPhysicalExamination\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.kylonychiaRbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string kylonychiaTxt {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.kylonychiaTxtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kylonychiaTxt\' in table \'generalPhysicalExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.kylonychiaTxtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int thyroidGlandRb {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.thyroidGlandRbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'thyroidGlandRb\' in table \'generalPhysicalExamination\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.thyroidGlandRbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string thyroidGlandTxt {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.thyroidGlandTxtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'thyroidGlandTxt\' in table \'generalPhysicalExamination\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.thyroidGlandTxtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int clubbingRb {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.clubbingRbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'clubbingRb\' in table \'generalPhysicalExamination\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.clubbingRbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string clubbingTxt {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.clubbingTxtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'clubbingTxt\' in table \'generalPhysicalExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.clubbingTxtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int respirationRateRb {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.respirationRateRbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'respirationRateRb\' in table \'generalPhysicalExamination\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.respirationRateRbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string respirationRateTxt {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.respirationRateTxtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'respirationRateTxt\' in table \'generalPhysicalExamination\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.respirationRateTxtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int lymphNodeRb {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.lymphNodeRbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lymphNodeRb\' in table \'generalPhysicalExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.lymphNodeRbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string lymphNodeTxt {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.lymphNodeTxtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lymphNodeTxt\' in table \'generalPhysicalExamination\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.lymphNodeTxtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string jvpTxt {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.jvpTxtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'jvpTxt\' in table \'generalPhysicalExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.jvpTxtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string jvpDD {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.jvpDDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'jvpDD\' in table \'generalPhysicalExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.jvpDDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int visit_no {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.visit_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'visit_no\' in table \'generalPhysicalExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.visit_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string lyingDiastolic {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.lyingDiastolicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lyingDiastolic\' in table \'generalPhysicalExamination\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.lyingDiastolicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string standingDiastolic {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.standingDiastolicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'standingDiastolic\' in table \'generalPhysicalExamination\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.standingDiastolicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sittingDiastolic {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.sittingDiastolicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sittingDiastolic\' in table \'generalPhysicalExamination\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.sittingDiastolicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string skinErruptionDd {
                get {
                    try {
                        return ((string)(this[this.tablegeneralPhysicalExamination.skinErruptionDdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'skinErruptionDd\' in table \'generalPhysicalExamination\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.skinErruptionDdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int dehydrationRadio {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.dehydrationRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dehydrationRadio\' in table \'generalPhysicalExamination\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.dehydrationRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int swellingRadio {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.swellingRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'swellingRadio\' in table \'generalPhysicalExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.swellingRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int pigmentationRadio {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.pigmentationRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pigmentationRadio\' in table \'generalPhysicalExamination\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.pigmentationRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int repigmentationRadio {
                get {
                    try {
                        return ((int)(this[this.tablegeneralPhysicalExamination.repigmentationRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repigmentationRadio\' in table \'generalPhysicalExamination\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegeneralPhysicalExamination.repigmentationRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsheightNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.heightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetheightNull() {
                this[this.tablegeneralPhysicalExamination.heightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsweightNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetweightNull() {
                this[this.tablegeneralPhysicalExamination.weightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspulseNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.pulseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpulseNull() {
                this[this.tablegeneralPhysicalExamination.pulseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsskinEruptionNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.skinEruptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetskinEruptionNull() {
                this[this.tablegeneralPhysicalExamination.skinEruptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslyingSystolicNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.lyingSystolicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlyingSystolicNull() {
                this[this.tablegeneralPhysicalExamination.lyingSystolicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssittingSystolicNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.sittingSystolicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsittingSystolicNull() {
                this[this.tablegeneralPhysicalExamination.sittingSystolicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstandingSystolicNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.standingSystolicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstandingSystolicNull() {
                this[this.tablegeneralPhysicalExamination.standingSystolicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstemperatureNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.temperatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettemperatureNull() {
                this[this.tablegeneralPhysicalExamination.temperatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdehydrationNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.dehydrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdehydrationNull() {
                this[this.tablegeneralPhysicalExamination.dehydrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspallorRbNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.pallorRbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpallorRbNull() {
                this[this.tablegeneralPhysicalExamination.pallorRbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspallorTxtNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.pallorTxtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpallorTxtNull() {
                this[this.tablegeneralPhysicalExamination.pallorTxtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsjaundiceRbNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.jaundiceRbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetjaundiceRbNull() {
                this[this.tablegeneralPhysicalExamination.jaundiceRbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsjaundiceTxtNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.jaundiceTxtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetjaundiceTxtNull() {
                this[this.tablegeneralPhysicalExamination.jaundiceTxtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoedemaRbNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.oedemaRbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoedemaRbNull() {
                this[this.tablegeneralPhysicalExamination.oedemaRbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoedemaTxtNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.oedemaTxtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoedemaTxtNull() {
                this[this.tablegeneralPhysicalExamination.oedemaTxtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IskylonychiaRbNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.kylonychiaRbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetkylonychiaRbNull() {
                this[this.tablegeneralPhysicalExamination.kylonychiaRbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IskylonychiaTxtNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.kylonychiaTxtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetkylonychiaTxtNull() {
                this[this.tablegeneralPhysicalExamination.kylonychiaTxtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsthyroidGlandRbNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.thyroidGlandRbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetthyroidGlandRbNull() {
                this[this.tablegeneralPhysicalExamination.thyroidGlandRbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsthyroidGlandTxtNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.thyroidGlandTxtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetthyroidGlandTxtNull() {
                this[this.tablegeneralPhysicalExamination.thyroidGlandTxtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsclubbingRbNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.clubbingRbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetclubbingRbNull() {
                this[this.tablegeneralPhysicalExamination.clubbingRbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsclubbingTxtNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.clubbingTxtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetclubbingTxtNull() {
                this[this.tablegeneralPhysicalExamination.clubbingTxtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrespirationRateRbNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.respirationRateRbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrespirationRateRbNull() {
                this[this.tablegeneralPhysicalExamination.respirationRateRbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrespirationRateTxtNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.respirationRateTxtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrespirationRateTxtNull() {
                this[this.tablegeneralPhysicalExamination.respirationRateTxtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslymphNodeRbNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.lymphNodeRbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlymphNodeRbNull() {
                this[this.tablegeneralPhysicalExamination.lymphNodeRbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslymphNodeTxtNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.lymphNodeTxtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlymphNodeTxtNull() {
                this[this.tablegeneralPhysicalExamination.lymphNodeTxtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsjvpTxtNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.jvpTxtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetjvpTxtNull() {
                this[this.tablegeneralPhysicalExamination.jvpTxtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsjvpDDNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.jvpDDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetjvpDDNull() {
                this[this.tablegeneralPhysicalExamination.jvpDDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isvisit_noNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.visit_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setvisit_noNull() {
                this[this.tablegeneralPhysicalExamination.visit_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslyingDiastolicNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.lyingDiastolicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlyingDiastolicNull() {
                this[this.tablegeneralPhysicalExamination.lyingDiastolicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstandingDiastolicNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.standingDiastolicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstandingDiastolicNull() {
                this[this.tablegeneralPhysicalExamination.standingDiastolicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssittingDiastolicNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.sittingDiastolicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsittingDiastolicNull() {
                this[this.tablegeneralPhysicalExamination.sittingDiastolicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsskinErruptionDdNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.skinErruptionDdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetskinErruptionDdNull() {
                this[this.tablegeneralPhysicalExamination.skinErruptionDdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdehydrationRadioNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.dehydrationRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdehydrationRadioNull() {
                this[this.tablegeneralPhysicalExamination.dehydrationRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsswellingRadioNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.swellingRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetswellingRadioNull() {
                this[this.tablegeneralPhysicalExamination.swellingRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspigmentationRadioNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.pigmentationRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpigmentationRadioNull() {
                this[this.tablegeneralPhysicalExamination.pigmentationRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrepigmentationRadioNull() {
                return this.IsNull(this.tablegeneralPhysicalExamination.repigmentationRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrepigmentationRadioNull() {
                this[this.tablegeneralPhysicalExamination.repigmentationRadioColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class systematicExaminationRow : global::System.Data.DataRow {
            
            private systematicExaminationDataTable tablesystematicExamination;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal systematicExaminationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesystematicExamination = ((systematicExaminationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablesystematicExamination.idColumn]));
                }
                set {
                    this[this.tablesystematicExamination.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string meningialIrritation {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.meningialIrritationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'meningialIrritation\' in table \'systematicExamination\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.meningialIrritationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string carnivalNervers {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.carnivalNerversColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'carnivalNervers\' in table \'systematicExamination\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.carnivalNerversColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sensorySystem {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.sensorySystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sensorySystem\' in table \'systematicExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.sensorySystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string motorSystem {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.motorSystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'motorSystem\' in table \'systematicExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.motorSystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string superficialReflexes {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.superficialReflexesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'superficialReflexes\' in table \'systematicExamination\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.superficialReflexesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string deepReflexes {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.deepReflexesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deepReflexes\' in table \'systematicExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.deepReflexesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cerebellarFunctions {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.cerebellarFunctionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cerebellarFunctions\' in table \'systematicExamination\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.cerebellarFunctionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fundoscopy {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.fundoscopyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fundoscopy\' in table \'systematicExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.fundoscopyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cardioVascularSystem {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.cardioVascularSystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cardioVascularSystem\' in table \'systematicExamination\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.cardioVascularSystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string respiratorySystem {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.respiratorySystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'respiratorySystem\' in table \'systematicExamination\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.respiratorySystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gastroIntestinalSystem {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.gastroIntestinalSystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gastroIntestinalSystem\' in table \'systematicExamination\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.gastroIntestinalSystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nervousSystem {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.nervousSystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nervousSystem\' in table \'systematicExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.nervousSystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string urogenitalSystem {
                get {
                    try {
                        return ((string)(this[this.tablesystematicExamination.urogenitalSystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'urogenitalSystem\' in table \'systematicExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.urogenitalSystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int visit_no {
                get {
                    try {
                        return ((int)(this[this.tablesystematicExamination.visit_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'visit_no\' in table \'systematicExamination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.visit_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cranialNervesRadio {
                get {
                    try {
                        return ((int)(this[this.tablesystematicExamination.cranialNervesRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cranialNervesRadio\' in table \'systematicExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.cranialNervesRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sensorySystemRadio {
                get {
                    try {
                        return ((int)(this[this.tablesystematicExamination.sensorySystemRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sensorySystemRadio\' in table \'systematicExamination\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.sensorySystemRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int motorSystemRadio {
                get {
                    try {
                        return ((int)(this[this.tablesystematicExamination.motorSystemRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'motorSystemRadio\' in table \'systematicExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.motorSystemRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int superficialRadio {
                get {
                    try {
                        return ((int)(this[this.tablesystematicExamination.superficialRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'superficialRadio\' in table \'systematicExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.superficialRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int deepReflexRadio {
                get {
                    try {
                        return ((int)(this[this.tablesystematicExamination.deepReflexRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deepReflexRadio\' in table \'systematicExamination\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.deepReflexRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cerebellarRadio {
                get {
                    try {
                        return ((int)(this[this.tablesystematicExamination.cerebellarRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cerebellarRadio\' in table \'systematicExamination\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.cerebellarRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fundoscopyRadio {
                get {
                    try {
                        return ((int)(this[this.tablesystematicExamination.fundoscopyRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fundoscopyRadio\' in table \'systematicExamination\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.fundoscopyRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cardiovascularRadio {
                get {
                    try {
                        return ((int)(this[this.tablesystematicExamination.cardiovascularRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cardiovascularRadio\' in table \'systematicExamination\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.cardiovascularRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int respiratoryRadio {
                get {
                    try {
                        return ((int)(this[this.tablesystematicExamination.respiratoryRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'respiratoryRadio\' in table \'systematicExamination\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.respiratoryRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int gastrointestinalRadio {
                get {
                    try {
                        return ((int)(this[this.tablesystematicExamination.gastrointestinalRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gastrointestinalRadio\' in table \'systematicExamination\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.gastrointestinalRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int urogenitalRadio {
                get {
                    try {
                        return ((int)(this[this.tablesystematicExamination.urogenitalRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'urogenitalRadio\' in table \'systematicExamination\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesystematicExamination.urogenitalRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmeningialIrritationNull() {
                return this.IsNull(this.tablesystematicExamination.meningialIrritationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmeningialIrritationNull() {
                this[this.tablesystematicExamination.meningialIrritationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscarnivalNerversNull() {
                return this.IsNull(this.tablesystematicExamination.carnivalNerversColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcarnivalNerversNull() {
                this[this.tablesystematicExamination.carnivalNerversColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssensorySystemNull() {
                return this.IsNull(this.tablesystematicExamination.sensorySystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsensorySystemNull() {
                this[this.tablesystematicExamination.sensorySystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmotorSystemNull() {
                return this.IsNull(this.tablesystematicExamination.motorSystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmotorSystemNull() {
                this[this.tablesystematicExamination.motorSystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssuperficialReflexesNull() {
                return this.IsNull(this.tablesystematicExamination.superficialReflexesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsuperficialReflexesNull() {
                this[this.tablesystematicExamination.superficialReflexesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdeepReflexesNull() {
                return this.IsNull(this.tablesystematicExamination.deepReflexesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdeepReflexesNull() {
                this[this.tablesystematicExamination.deepReflexesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscerebellarFunctionsNull() {
                return this.IsNull(this.tablesystematicExamination.cerebellarFunctionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcerebellarFunctionsNull() {
                this[this.tablesystematicExamination.cerebellarFunctionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfundoscopyNull() {
                return this.IsNull(this.tablesystematicExamination.fundoscopyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfundoscopyNull() {
                this[this.tablesystematicExamination.fundoscopyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscardioVascularSystemNull() {
                return this.IsNull(this.tablesystematicExamination.cardioVascularSystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcardioVascularSystemNull() {
                this[this.tablesystematicExamination.cardioVascularSystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrespiratorySystemNull() {
                return this.IsNull(this.tablesystematicExamination.respiratorySystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrespiratorySystemNull() {
                this[this.tablesystematicExamination.respiratorySystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsgastroIntestinalSystemNull() {
                return this.IsNull(this.tablesystematicExamination.gastroIntestinalSystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetgastroIntestinalSystemNull() {
                this[this.tablesystematicExamination.gastroIntestinalSystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnervousSystemNull() {
                return this.IsNull(this.tablesystematicExamination.nervousSystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnervousSystemNull() {
                this[this.tablesystematicExamination.nervousSystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsurogenitalSystemNull() {
                return this.IsNull(this.tablesystematicExamination.urogenitalSystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SeturogenitalSystemNull() {
                this[this.tablesystematicExamination.urogenitalSystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isvisit_noNull() {
                return this.IsNull(this.tablesystematicExamination.visit_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setvisit_noNull() {
                this[this.tablesystematicExamination.visit_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscranialNervesRadioNull() {
                return this.IsNull(this.tablesystematicExamination.cranialNervesRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcranialNervesRadioNull() {
                this[this.tablesystematicExamination.cranialNervesRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssensorySystemRadioNull() {
                return this.IsNull(this.tablesystematicExamination.sensorySystemRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsensorySystemRadioNull() {
                this[this.tablesystematicExamination.sensorySystemRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmotorSystemRadioNull() {
                return this.IsNull(this.tablesystematicExamination.motorSystemRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmotorSystemRadioNull() {
                this[this.tablesystematicExamination.motorSystemRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssuperficialRadioNull() {
                return this.IsNull(this.tablesystematicExamination.superficialRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsuperficialRadioNull() {
                this[this.tablesystematicExamination.superficialRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdeepReflexRadioNull() {
                return this.IsNull(this.tablesystematicExamination.deepReflexRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdeepReflexRadioNull() {
                this[this.tablesystematicExamination.deepReflexRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscerebellarRadioNull() {
                return this.IsNull(this.tablesystematicExamination.cerebellarRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcerebellarRadioNull() {
                this[this.tablesystematicExamination.cerebellarRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfundoscopyRadioNull() {
                return this.IsNull(this.tablesystematicExamination.fundoscopyRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfundoscopyRadioNull() {
                this[this.tablesystematicExamination.fundoscopyRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscardiovascularRadioNull() {
                return this.IsNull(this.tablesystematicExamination.cardiovascularRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcardiovascularRadioNull() {
                this[this.tablesystematicExamination.cardiovascularRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrespiratoryRadioNull() {
                return this.IsNull(this.tablesystematicExamination.respiratoryRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrespiratoryRadioNull() {
                this[this.tablesystematicExamination.respiratoryRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsgastrointestinalRadioNull() {
                return this.IsNull(this.tablesystematicExamination.gastrointestinalRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetgastrointestinalRadioNull() {
                this[this.tablesystematicExamination.gastrointestinalRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsurogenitalRadioNull() {
                return this.IsNull(this.tablesystematicExamination.urogenitalRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SeturogenitalRadioNull() {
                this[this.tablesystematicExamination.urogenitalRadioColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class investigationRow : global::System.Data.DataRow {
            
            private investigationDataTable tableinvestigation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal investigationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinvestigation = ((investigationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableinvestigation.idColumn]));
                }
                set {
                    this[this.tableinvestigation.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int visit_no {
                get {
                    return ((int)(this[this.tableinvestigation.visit_noColumn]));
                }
                set {
                    this[this.tableinvestigation.visit_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string completeBloodExamination {
                get {
                    try {
                        return ((string)(this[this.tableinvestigation.completeBloodExaminationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'completeBloodExamination\' in table \'investigation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableinvestigation.completeBloodExaminationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string completeUrineExamination {
                get {
                    try {
                        return ((string)(this[this.tableinvestigation.completeUrineExaminationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'completeUrineExamination\' in table \'investigation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableinvestigation.completeUrineExaminationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string liverFunctionTest {
                get {
                    try {
                        return ((string)(this[this.tableinvestigation.liverFunctionTestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'liverFunctionTest\' in table \'investigation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestigation.liverFunctionTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ecg {
                get {
                    try {
                        return ((string)(this[this.tableinvestigation.ecgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ecg\' in table \'investigation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestigation.ecgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int bloodSugarRb {
                get {
                    return ((int)(this[this.tableinvestigation.bloodSugarRbColumn]));
                }
                set {
                    this[this.tableinvestigation.bloodSugarRbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bloodSugarArea {
                get {
                    try {
                        return ((string)(this[this.tableinvestigation.bloodSugarAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bloodSugarArea\' in table \'investigation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestigation.bloodSugarAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string thyroidFuctionTest {
                get {
                    try {
                        return ((string)(this[this.tableinvestigation.thyroidFuctionTestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'thyroidFuctionTest\' in table \'investigation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestigation.thyroidFuctionTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string radiography {
                get {
                    try {
                        return ((string)(this[this.tableinvestigation.radiographyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'radiography\' in table \'investigation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestigation.radiographyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ulgranSonography {
                get {
                    try {
                        return ((string)(this[this.tableinvestigation.ulgranSonographyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ulgranSonography\' in table \'investigation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestigation.ulgranSonographyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ctScan {
                get {
                    try {
                        return ((string)(this[this.tableinvestigation.ctScanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ctScan\' in table \'investigation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestigation.ctScanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string otherComments {
                get {
                    try {
                        return ((string)(this[this.tableinvestigation.otherCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherComments\' in table \'investigation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestigation.otherCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscompleteBloodExaminationNull() {
                return this.IsNull(this.tableinvestigation.completeBloodExaminationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcompleteBloodExaminationNull() {
                this[this.tableinvestigation.completeBloodExaminationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscompleteUrineExaminationNull() {
                return this.IsNull(this.tableinvestigation.completeUrineExaminationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcompleteUrineExaminationNull() {
                this[this.tableinvestigation.completeUrineExaminationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsliverFunctionTestNull() {
                return this.IsNull(this.tableinvestigation.liverFunctionTestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetliverFunctionTestNull() {
                this[this.tableinvestigation.liverFunctionTestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsecgNull() {
                return this.IsNull(this.tableinvestigation.ecgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetecgNull() {
                this[this.tableinvestigation.ecgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbloodSugarAreaNull() {
                return this.IsNull(this.tableinvestigation.bloodSugarAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbloodSugarAreaNull() {
                this[this.tableinvestigation.bloodSugarAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsthyroidFuctionTestNull() {
                return this.IsNull(this.tableinvestigation.thyroidFuctionTestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetthyroidFuctionTestNull() {
                this[this.tableinvestigation.thyroidFuctionTestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsradiographyNull() {
                return this.IsNull(this.tableinvestigation.radiographyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetradiographyNull() {
                this[this.tableinvestigation.radiographyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsulgranSonographyNull() {
                return this.IsNull(this.tableinvestigation.ulgranSonographyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetulgranSonographyNull() {
                this[this.tableinvestigation.ulgranSonographyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsctScanNull() {
                return this.IsNull(this.tableinvestigation.ctScanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetctScanNull() {
                this[this.tableinvestigation.ctScanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsotherCommentsNull() {
                return this.IsNull(this.tableinvestigation.otherCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetotherCommentsNull() {
                this[this.tableinvestigation.otherCommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class sysMedicationRow : global::System.Data.DataRow {
            
            private sysMedicationDataTable tablesysMedication;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal sysMedicationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesysMedication = ((sysMedicationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string med_name {
                get {
                    try {
                        return ((string)(this[this.tablesysMedication.med_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'med_name\' in table \'sysMedication\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysMedication.med_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int patient_reg {
                get {
                    try {
                        return ((int)(this[this.tablesysMedication.patient_regColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patient_reg\' in table \'sysMedication\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysMedication.patient_regColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int visit_no {
                get {
                    try {
                        return ((int)(this[this.tablesysMedication.visit_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'visit_no\' in table \'sysMedication\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysMedication.visit_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int quantity {
                get {
                    try {
                        return ((int)(this[this.tablesysMedication.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'sysMedication\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysMedication.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte morning {
                get {
                    try {
                        return ((byte)(this[this.tablesysMedication.morningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'morning\' in table \'sysMedication\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysMedication.morningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte afternoon {
                get {
                    try {
                        return ((byte)(this[this.tablesysMedication.afternoonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'afternoon\' in table \'sysMedication\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysMedication.afternoonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte night {
                get {
                    try {
                        return ((byte)(this[this.tablesysMedication.nightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'night\' in table \'sysMedication\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysMedication.nightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string directions {
                get {
                    try {
                        return ((string)(this[this.tablesysMedication.directionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'directions\' in table \'sysMedication\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysMedication.directionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string durations {
                get {
                    try {
                        return ((string)(this[this.tablesysMedication.durationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'durations\' in table \'sysMedication\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysMedication.durationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string direction_summary {
                get {
                    try {
                        return ((string)(this[this.tablesysMedication.direction_summaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direction_summary\' in table \'sysMedication\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysMedication.direction_summaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismed_nameNull() {
                return this.IsNull(this.tablesysMedication.med_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmed_nameNull() {
                this[this.tablesysMedication.med_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ispatient_regNull() {
                return this.IsNull(this.tablesysMedication.patient_regColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setpatient_regNull() {
                this[this.tablesysMedication.patient_regColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isvisit_noNull() {
                return this.IsNull(this.tablesysMedication.visit_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setvisit_noNull() {
                this[this.tablesysMedication.visit_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsquantityNull() {
                return this.IsNull(this.tablesysMedication.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetquantityNull() {
                this[this.tablesysMedication.quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmorningNull() {
                return this.IsNull(this.tablesysMedication.morningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmorningNull() {
                this[this.tablesysMedication.morningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsafternoonNull() {
                return this.IsNull(this.tablesysMedication.afternoonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetafternoonNull() {
                this[this.tablesysMedication.afternoonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnightNull() {
                return this.IsNull(this.tablesysMedication.nightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnightNull() {
                this[this.tablesysMedication.nightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdirectionsNull() {
                return this.IsNull(this.tablesysMedication.directionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdirectionsNull() {
                this[this.tablesysMedication.directionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdurationsNull() {
                return this.IsNull(this.tablesysMedication.durationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdurationsNull() {
                this[this.tablesysMedication.durationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdirection_summaryNull() {
                return this.IsNull(this.tablesysMedication.direction_summaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdirection_summaryNull() {
                this[this.tablesysMedication.direction_summaryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class counsellingRow : global::System.Data.DataRow {
            
            private counsellingDataTable tablecounselling;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal counsellingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecounselling = ((counsellingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string suggestion {
                get {
                    try {
                        return ((string)(this[this.tablecounselling.suggestionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'suggestion\' in table \'counselling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecounselling.suggestionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string therapy_advise {
                get {
                    try {
                        return ((string)(this[this.tablecounselling.therapy_adviseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'therapy_advise\' in table \'counselling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecounselling.therapy_adviseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string outcome {
                get {
                    try {
                        return ((string)(this[this.tablecounselling.outcomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'outcome\' in table \'counselling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecounselling.outcomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int patient_reg {
                get {
                    try {
                        return ((int)(this[this.tablecounselling.patient_regColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patient_reg\' in table \'counselling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecounselling.patient_regColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int visit_no {
                get {
                    try {
                        return ((int)(this[this.tablecounselling.visit_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'visit_no\' in table \'counselling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecounselling.visit_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssuggestionNull() {
                return this.IsNull(this.tablecounselling.suggestionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsuggestionNull() {
                this[this.tablecounselling.suggestionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istherapy_adviseNull() {
                return this.IsNull(this.tablecounselling.therapy_adviseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settherapy_adviseNull() {
                this[this.tablecounselling.therapy_adviseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoutcomeNull() {
                return this.IsNull(this.tablecounselling.outcomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoutcomeNull() {
                this[this.tablecounselling.outcomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ispatient_regNull() {
                return this.IsNull(this.tablecounselling.patient_regColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setpatient_regNull() {
                this[this.tablecounselling.patient_regColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isvisit_noNull() {
                return this.IsNull(this.tablecounselling.visit_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setvisit_noNull() {
                this[this.tablecounselling.visit_noColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class illnessHistoryRowChangeEvent : global::System.EventArgs {
            
            private illnessHistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public illnessHistoryRowChangeEvent(illnessHistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public illnessHistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class drugHistoryRowChangeEvent : global::System.EventArgs {
            
            private drugHistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public drugHistoryRowChangeEvent(drugHistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public drugHistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class personalDetailsRowChangeEvent : global::System.EventArgs {
            
            private personalDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public personalDetailsRowChangeEvent(personalDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public personalDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class familyHistoryRowChangeEvent : global::System.EventArgs {
            
            private familyHistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familyHistoryRowChangeEvent(familyHistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familyHistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ComplaintRowChangeEvent : global::System.EventArgs {
            
            private ComplaintRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ComplaintRowChangeEvent(ComplaintRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ComplaintRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class mentalStateExaminationRowChangeEvent : global::System.EventArgs {
            
            private mentalStateExaminationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mentalStateExaminationRowChangeEvent(mentalStateExaminationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mentalStateExaminationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class generalPhysicalExaminationRowChangeEvent : global::System.EventArgs {
            
            private generalPhysicalExaminationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public generalPhysicalExaminationRowChangeEvent(generalPhysicalExaminationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public generalPhysicalExaminationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class systematicExaminationRowChangeEvent : global::System.EventArgs {
            
            private systematicExaminationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systematicExaminationRowChangeEvent(systematicExaminationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systematicExaminationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class investigationRowChangeEvent : global::System.EventArgs {
            
            private investigationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public investigationRowChangeEvent(investigationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public investigationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class sysMedicationRowChangeEvent : global::System.EventArgs {
            
            private sysMedicationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sysMedicationRowChangeEvent(sysMedicationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sysMedicationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class counsellingRowChangeEvent : global::System.EventArgs {
            
            private counsellingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public counsellingRowChangeEvent(counsellingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public counsellingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PCMS_Web.AppData.formulationDatasetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class illnessHistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public illnessHistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "illnessHistory";
            tableMapping.ColumnMappings.Add("patient_reg", "patient_reg");
            tableMapping.ColumnMappings.Add("illHistoryText", "illHistoryText");
            tableMapping.ColumnMappings.Add("currentTreatmentText", "currentTreatmentText");
            tableMapping.ColumnMappings.Add("pastMedHistoryText", "pastMedHistoryText");
            tableMapping.ColumnMappings.Add("pastPsychHistoryText", "pastPsychHistoryText");
            tableMapping.ColumnMappings.Add("cureRb", "cureRb");
            tableMapping.ColumnMappings.Add("cureText", "cureText");
            tableMapping.ColumnMappings.Add("previousText", "previousText");
            tableMapping.ColumnMappings.Add("previousAdmissions", "previousAdmissions");
            tableMapping.ColumnMappings.Add("treatmentHistoryDd", "treatmentHistoryDd");
            tableMapping.ColumnMappings.Add("pastMedicalHistoryDd", "pastMedicalHistoryDd");
            tableMapping.ColumnMappings.Add("pastPsychiatricHistoryDd", "pastPsychiatricHistoryDd");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [illnessHistory] ([patient_reg], [illHistoryText], [currentTreatmentText], [pastMedHistoryText], [pastPsychHistoryText], [cureRb], [cureText], [previousText], [previousAdmissions], [treatmentHistoryDd], [pastMedicalHistoryDd], [pastPsychiatricHistoryDd]) VALUES (@patient_reg, @illHistoryText, @currentTreatmentText, @pastMedHistoryText, @pastPsychHistoryText, @cureRb, @cureText, @previousText, @previousAdmissions, @treatmentHistoryDd, @pastMedicalHistoryDd, @pastPsychiatricHistoryDd)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@patient_reg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patient_reg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@illHistoryText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "illHistoryText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@currentTreatmentText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "currentTreatmentText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pastMedHistoryText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pastMedHistoryText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pastPsychHistoryText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pastPsychHistoryText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cureRb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cureRb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cureText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cureText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@previousText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "previousText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@previousAdmissions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "previousAdmissions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@treatmentHistoryDd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "treatmentHistoryDd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pastMedicalHistoryDd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pastMedicalHistoryDd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pastPsychiatricHistoryDd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pastPsychiatricHistoryDd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PCMS_ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        patient_reg, illHistoryText, currentTreatmentText, pastMedHistoryText, pastPsychHistoryText, cureRb, cureText, previousText, previousAdmissions, treatmentHistoryDd, pastMedicalHistoryDd, 
                         pastPsychiatricHistoryDd
FROM            illnessHistory
WHERE        (patient_reg = @Param1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "patient_reg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(formulationDataset.illnessHistoryDataTable dataTable, int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual formulationDataset.illnessHistoryDataTable GetData(int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            formulationDataset.illnessHistoryDataTable dataTable = new formulationDataset.illnessHistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset.illnessHistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset dataSet) {
            return this.Adapter.Update(dataSet, "illnessHistory");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int patient_reg, string illHistoryText, string currentTreatmentText, string pastMedHistoryText, string pastPsychHistoryText, int cureRb, string cureText, string previousText, global::System.Nullable<int> previousAdmissions, string treatmentHistoryDd, string pastMedicalHistoryDd, string pastPsychiatricHistoryDd) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(patient_reg));
            if ((illHistoryText == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(illHistoryText));
            }
            if ((currentTreatmentText == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(currentTreatmentText));
            }
            if ((pastMedHistoryText == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(pastMedHistoryText));
            }
            if ((pastPsychHistoryText == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(pastPsychHistoryText));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(cureRb));
            if ((cureText == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(cureText));
            }
            if ((previousText == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(previousText));
            }
            if ((previousAdmissions.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(previousAdmissions.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((treatmentHistoryDd == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(treatmentHistoryDd));
            }
            if ((pastMedicalHistoryDd == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(pastMedicalHistoryDd));
            }
            if ((pastPsychiatricHistoryDd == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(pastPsychiatricHistoryDd));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class drugHistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public drugHistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "drugHistory";
            tableMapping.ColumnMappings.Add("patient_reg", "patient_reg");
            tableMapping.ColumnMappings.Add("drugsText", "drugsText");
            tableMapping.ColumnMappings.Add("dosageText", "dosageText");
            tableMapping.ColumnMappings.Add("durationText", "durationText");
            tableMapping.ColumnMappings.Add("reponseText", "reponseText");
            tableMapping.ColumnMappings.Add("reactionText", "reactionText");
            tableMapping.ColumnMappings.Add("faithTreatmentText", "faithTreatmentText");
            tableMapping.ColumnMappings.Add("forensicHistoryText", "forensicHistoryText");
            tableMapping.ColumnMappings.Add("faithTreatmentRadio", "faithTreatmentRadio");
            tableMapping.ColumnMappings.Add("forensicHistoryRadio", "forensicHistoryRadio");
            tableMapping.ColumnMappings.Add("policeCaseRadio", "policeCaseRadio");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [drugHistory] ([patient_reg], [drugsText], [dosageText], [durationText], [reponseText], [reactionText], [faithTreatmentText], [forensicHistoryText], [faithTreatmentRadio], [forensicHistoryRadio], [policeCaseRadio]) VALUES (@patient_reg, @drugsText, @dosageText, @durationText, @reponseText, @reactionText, @faithTreatmentText, @forensicHistoryText, @faithTreatmentRadio, @forensicHistoryRadio, @policeCaseRadio)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@patient_reg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patient_reg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drugsText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drugsText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dosageText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dosageText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@durationText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "durationText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reponseText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reponseText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reactionText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reactionText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@faithTreatmentText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "faithTreatmentText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@forensicHistoryText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "forensicHistoryText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@faithTreatmentRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "faithTreatmentRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@forensicHistoryRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "forensicHistoryRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@policeCaseRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "policeCaseRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PCMS_ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        patient_reg, drugsText, dosageText, durationText, reponseText, reactionText, faithTreatmentText, forensicHistoryText, faithTreatmentRadio, forensicHistoryRadio, policeCaseRadio
FROM            drugHistory
WHERE        (patient_reg = @Param1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "patient_reg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(formulationDataset.drugHistoryDataTable dataTable, int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual formulationDataset.drugHistoryDataTable GetData(int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            formulationDataset.drugHistoryDataTable dataTable = new formulationDataset.drugHistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset.drugHistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset dataSet) {
            return this.Adapter.Update(dataSet, "drugHistory");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int patient_reg, string drugsText, string dosageText, string durationText, string reponseText, string reactionText, string faithTreatmentText, string forensicHistoryText, global::System.Nullable<int> faithTreatmentRadio, global::System.Nullable<int> forensicHistoryRadio, global::System.Nullable<int> policeCaseRadio) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(patient_reg));
            if ((drugsText == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(drugsText));
            }
            if ((dosageText == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(dosageText));
            }
            if ((durationText == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(durationText));
            }
            if ((reponseText == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(reponseText));
            }
            if ((reactionText == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(reactionText));
            }
            if ((faithTreatmentText == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(faithTreatmentText));
            }
            if ((forensicHistoryText == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(forensicHistoryText));
            }
            if ((faithTreatmentRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(faithTreatmentRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((forensicHistoryRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(forensicHistoryRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((policeCaseRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(policeCaseRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class personalDetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public personalDetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "personalDetails";
            tableMapping.ColumnMappings.Add("prenatalText", "prenatalText");
            tableMapping.ColumnMappings.Add("perinatalText", "perinatalText");
            tableMapping.ColumnMappings.Add("postnatalText", "postnatalText");
            tableMapping.ColumnMappings.Add("milestoneRb", "milestoneRb");
            tableMapping.ColumnMappings.Add("childhoodText", "childhoodText");
            tableMapping.ColumnMappings.Add("schoolingText", "schoolingText");
            tableMapping.ColumnMappings.Add("educationRb", "educationRb");
            tableMapping.ColumnMappings.Add("occupationText", "occupationText");
            tableMapping.ColumnMappings.Add("incomeText", "incomeText");
            tableMapping.ColumnMappings.Add("psychoSexualhistoryText", "psychoSexualhistoryText");
            tableMapping.ColumnMappings.Add("menstrualHistoryText", "menstrualHistoryText");
            tableMapping.ColumnMappings.Add("maritalStatusDD", "maritalStatusDD");
            tableMapping.ColumnMappings.Add("genderDD", "genderDD");
            tableMapping.ColumnMappings.Add("childrenText", "childrenText");
            tableMapping.ColumnMappings.Add("spouseRelationshipText", "spouseRelationshipText");
            tableMapping.ColumnMappings.Add("hobbiesText", "hobbiesText");
            tableMapping.ColumnMappings.Add("characteristicText", "characteristicText");
            tableMapping.ColumnMappings.Add("behaviorText", "behaviorText");
            tableMapping.ColumnMappings.Add("attitudeText", "attitudeText");
            tableMapping.ColumnMappings.Add("relationText", "relationText");
            tableMapping.ColumnMappings.Add("achievementsText", "achievementsText");
            tableMapping.ColumnMappings.Add("religiousText", "religiousText");
            tableMapping.ColumnMappings.Add("aptitudesText", "aptitudesText");
            tableMapping.ColumnMappings.Add("otherText", "otherText");
            tableMapping.ColumnMappings.Add("patient_reg", "patient_reg");
            tableMapping.ColumnMappings.Add("startOfSchooling", "startOfSchooling");
            tableMapping.ColumnMappings.Add("occupation", "occupation");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [personalDetails] ([prenatalText], [perinatalText], [postnatalText], [milestoneRb], [childhoodText], [schoolingText], [educationRb], [occupationText], [incomeText], [psychoSexualhistoryText], [menstrualHistoryText], [maritalStatusDD], [genderDD], [childrenText], [spouseRelationshipText], [hobbiesText], [characteristicText], [behaviorText], [attitudeText], [relationText], [achievementsText], [religiousText], [aptitudesText], [otherText], [patient_reg], [startOfSchooling], [occupation]) VALUES (@prenatalText, @perinatalText, @postnatalText, @milestoneRb, @childhoodText, @schoolingText, @educationRb, @occupationText, @incomeText, @psychoSexualhistoryText, @menstrualHistoryText, @maritalStatusDD, @genderDD, @childrenText, @spouseRelationshipText, @hobbiesText, @characteristicText, @behaviorText, @attitudeText, @relationText, @achievementsText, @religiousText, @aptitudesText, @otherText, @patient_reg, @startOfSchooling, @occupation)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@prenatalText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "prenatalText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@perinatalText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "perinatalText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@postnatalText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "postnatalText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@milestoneRb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "milestoneRb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@childhoodText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "childhoodText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@schoolingText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "schoolingText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@educationRb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "educationRb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@occupationText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "occupationText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@incomeText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "incomeText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@psychoSexualhistoryText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "psychoSexualhistoryText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@menstrualHistoryText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "menstrualHistoryText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@maritalStatusDD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "maritalStatusDD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@genderDD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "genderDD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@childrenText", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "childrenText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@spouseRelationshipText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "spouseRelationshipText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hobbiesText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hobbiesText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@characteristicText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "characteristicText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@behaviorText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "behaviorText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@attitudeText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attitudeText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@relationText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "relationText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@achievementsText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "achievementsText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@religiousText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "religiousText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aptitudesText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aptitudesText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@patient_reg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patient_reg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startOfSchooling", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startOfSchooling", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@occupation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "occupation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PCMS_ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        prenatalText, perinatalText, postnatalText, milestoneRb, childhoodText, schoolingText, educationRb, occupationText, incomeText, psychoSexualhistoryText, menstrualHistoryText, maritalStatusDD, genderDD, 
                         childrenText, spouseRelationshipText, hobbiesText, characteristicText, behaviorText, attitudeText, relationText, achievementsText, religiousText, aptitudesText, otherText, patient_reg, startOfSchooling, 
                         occupation
FROM            personalDetails
WHERE        (patient_reg = @Param1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "patient_reg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(formulationDataset.personalDetailsDataTable dataTable, int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual formulationDataset.personalDetailsDataTable GetData(int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            formulationDataset.personalDetailsDataTable dataTable = new formulationDataset.personalDetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset.personalDetailsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset dataSet) {
            return this.Adapter.Update(dataSet, "personalDetails");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string prenatalText, 
                    string perinatalText, 
                    string postnatalText, 
                    global::System.Nullable<int> milestoneRb, 
                    string childhoodText, 
                    string schoolingText, 
                    global::System.Nullable<int> educationRb, 
                    string occupationText, 
                    string incomeText, 
                    string psychoSexualhistoryText, 
                    string menstrualHistoryText, 
                    string maritalStatusDD, 
                    string genderDD, 
                    global::System.Nullable<int> childrenText, 
                    string spouseRelationshipText, 
                    string hobbiesText, 
                    string characteristicText, 
                    string behaviorText, 
                    string attitudeText, 
                    string relationText, 
                    string achievementsText, 
                    string religiousText, 
                    string aptitudesText, 
                    string otherText, 
                    int patient_reg, 
                    string startOfSchooling, 
                    string occupation) {
            if ((prenatalText == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(prenatalText));
            }
            if ((perinatalText == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(perinatalText));
            }
            if ((postnatalText == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(postnatalText));
            }
            if ((milestoneRb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(milestoneRb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((childhoodText == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(childhoodText));
            }
            if ((schoolingText == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(schoolingText));
            }
            if ((educationRb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(educationRb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((occupationText == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(occupationText));
            }
            if ((incomeText == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(incomeText));
            }
            if ((psychoSexualhistoryText == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(psychoSexualhistoryText));
            }
            if ((menstrualHistoryText == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(menstrualHistoryText));
            }
            if ((maritalStatusDD == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(maritalStatusDD));
            }
            if ((genderDD == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(genderDD));
            }
            if ((childrenText.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(childrenText.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((spouseRelationshipText == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(spouseRelationshipText));
            }
            if ((hobbiesText == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(hobbiesText));
            }
            if ((characteristicText == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(characteristicText));
            }
            if ((behaviorText == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(behaviorText));
            }
            if ((attitudeText == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(attitudeText));
            }
            if ((relationText == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(relationText));
            }
            if ((achievementsText == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(achievementsText));
            }
            if ((religiousText == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(religiousText));
            }
            if ((aptitudesText == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(aptitudesText));
            }
            if ((otherText == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(otherText));
            }
            this.Adapter.InsertCommand.Parameters[24].Value = ((int)(patient_reg));
            if ((startOfSchooling == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(startOfSchooling));
            }
            if ((occupation == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(occupation));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class familyHistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public familyHistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "familyHistory";
            tableMapping.ColumnMappings.Add("temperamentDD", "temperamentDD");
            tableMapping.ColumnMappings.Add("familyPsychIllDD", "familyPsychIllDD");
            tableMapping.ColumnMappings.Add("fatherText", "fatherText");
            tableMapping.ColumnMappings.Add("motherText", "motherText");
            tableMapping.ColumnMappings.Add("siblingsText", "siblingsText");
            tableMapping.ColumnMappings.Add("illnessTypeDD", "illnessTypeDD");
            tableMapping.ColumnMappings.Add("abuseHistoryDD", "abuseHistoryDD");
            tableMapping.ColumnMappings.Add("typeText", "typeText");
            tableMapping.ColumnMappings.Add("durationText", "durationText");
            tableMapping.ColumnMappings.Add("amountText", "amountText");
            tableMapping.ColumnMappings.Add("abuseModeText", "abuseModeText");
            tableMapping.ColumnMappings.Add("detoxificationText", "detoxificationText");
            tableMapping.ColumnMappings.Add("patient_reg", "patient_reg");
            tableMapping.ColumnMappings.Add("admissionToxificationRadio", "admissionToxificationRadio");
            tableMapping.ColumnMappings.Add("noOfDetoxAdmissionsDd", "noOfDetoxAdmissionsDd");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [familyHistory] ([temperamentDD], [familyPsychIllDD], [fatherText], [motherText], [siblingsText], [illnessTypeDD], [abuseHistoryDD], [typeText], [durationText], [amountText], [abuseModeText], [detoxificationText], [patient_reg], [admissionToxificationRadio], [noOfDetoxAdmissionsDd]) VALUES (@temperamentDD, @familyPsychIllDD, @fatherText, @motherText, @siblingsText, @illnessTypeDD, @abuseHistoryDD, @typeText, @durationText, @amountText, @abuseModeText, @detoxificationText, @patient_reg, @admissionToxificationRadio, @noOfDetoxAdmissionsDd)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@temperamentDD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "temperamentDD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@familyPsychIllDD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "familyPsychIllDD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fatherText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fatherText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@motherText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "motherText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@siblingsText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "siblingsText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@illnessTypeDD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "illnessTypeDD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@abuseHistoryDD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "abuseHistoryDD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typeText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@durationText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "durationText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@amountText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "amountText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@abuseModeText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "abuseModeText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@detoxificationText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "detoxificationText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@patient_reg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patient_reg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@admissionToxificationRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "admissionToxificationRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noOfDetoxAdmissionsDd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noOfDetoxAdmissionsDd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PCMS_ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        familyHistory.*\r\nFROM            familyHistory\r\nWHERE        (patie" +
                "nt_reg = @Param1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "patient_reg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(formulationDataset.familyHistoryDataTable dataTable, int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual formulationDataset.familyHistoryDataTable GetData(int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            formulationDataset.familyHistoryDataTable dataTable = new formulationDataset.familyHistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset.familyHistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset dataSet) {
            return this.Adapter.Update(dataSet, "familyHistory");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string temperamentDD, string familyPsychIllDD, string fatherText, string motherText, string siblingsText, string illnessTypeDD, string abuseHistoryDD, string typeText, string durationText, string amountText, string abuseModeText, string detoxificationText, int patient_reg, global::System.Nullable<int> admissionToxificationRadio, global::System.Nullable<int> noOfDetoxAdmissionsDd) {
            if ((temperamentDD == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(temperamentDD));
            }
            if ((familyPsychIllDD == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(familyPsychIllDD));
            }
            if ((fatherText == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(fatherText));
            }
            if ((motherText == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(motherText));
            }
            if ((siblingsText == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(siblingsText));
            }
            if ((illnessTypeDD == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(illnessTypeDD));
            }
            if ((abuseHistoryDD == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(abuseHistoryDD));
            }
            if ((typeText == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(typeText));
            }
            if ((durationText == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(durationText));
            }
            if ((amountText == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(amountText));
            }
            if ((abuseModeText == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(abuseModeText));
            }
            if ((detoxificationText == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(detoxificationText));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(patient_reg));
            if ((admissionToxificationRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(admissionToxificationRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((noOfDetoxAdmissionsDd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(noOfDetoxAdmissionsDd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ComplaintTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ComplaintTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Complaint";
            tableMapping.ColumnMappings.Add("diagnose_date", "diagnose_date");
            tableMapping.ColumnMappings.Add("disease_name", "disease_name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PCMS_ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        problem_list_and_diagnoses.diagnose_date, diseases.disease_name
FROM            problem_list_and_diagnoses INNER JOIN
                         diseases ON problem_list_and_diagnoses.diseases_id = diseases.disease_id
WHERE        (problem_list_and_diagnoses.patient_reg = @Param1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "patient_reg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(formulationDataset.ComplaintDataTable dataTable, global::System.Nullable<int> Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Param1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual formulationDataset.ComplaintDataTable GetData(global::System.Nullable<int> Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Param1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            formulationDataset.ComplaintDataTable dataTable = new formulationDataset.ComplaintDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class mentalStateExaminationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public mentalStateExaminationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "mentalStateExamination";
            tableMapping.ColumnMappings.Add("Physical_Appearance", "Physical_Appearance");
            tableMapping.ColumnMappings.Add("Dress", "Dress");
            tableMapping.ColumnMappings.Add("Posture", "Posture");
            tableMapping.ColumnMappings.Add("Rapport", "Rapport");
            tableMapping.ColumnMappings.Add("Eye_Contact", "Eye_Contact");
            tableMapping.ColumnMappings.Add("Cooperative", "Cooperative");
            tableMapping.ColumnMappings.Add("Communicative", "Communicative");
            tableMapping.ColumnMappings.Add("Psychomotor_activity", "Psychomotor_activity");
            tableMapping.ColumnMappings.Add("Movements", "Movements");
            tableMapping.ColumnMappings.Add("Involuntary", "Involuntary");
            tableMapping.ColumnMappings.Add("Voluntary", "Voluntary");
            tableMapping.ColumnMappings.Add("Speech", "Speech");
            tableMapping.ColumnMappings.Add("Tone", "Tone");
            tableMapping.ColumnMappings.Add("Relevance", "Relevance");
            tableMapping.ColumnMappings.Add("Coherence", "Coherence");
            tableMapping.ColumnMappings.Add("Volume", "Volume");
            tableMapping.ColumnMappings.Add("volume2", "volume2");
            tableMapping.ColumnMappings.Add("Sample_of_talk", "Sample_of_talk");
            tableMapping.ColumnMappings.Add("mood_Subjective", "mood_Subjective");
            tableMapping.ColumnMappings.Add("mood_Objective", "mood_Objective");
            tableMapping.ColumnMappings.Add("Stream_of_thoughts_Poverty", "Stream_of_thoughts_Poverty");
            tableMapping.ColumnMappings.Add("Stream_of_thoughts_Pressure", "Stream_of_thoughts_Pressure");
            tableMapping.ColumnMappings.Add("Stream_of_thoughts_Thought", "Stream_of_thoughts_Thought");
            tableMapping.ColumnMappings.Add("Flight_of_Ideas", "Flight_of_Ideas");
            tableMapping.ColumnMappings.Add("Clang_association", "Clang_association");
            tableMapping.ColumnMappings.Add("Loosening_of_association", "Loosening_of_association");
            tableMapping.ColumnMappings.Add("Knights_move", "Knights_move");
            tableMapping.ColumnMappings.Add("Derailment", "Derailment");
            tableMapping.ColumnMappings.Add("Word_salad", "Word_salad");
            tableMapping.ColumnMappings.Add("Taking_past_the_point", "Taking_past_the_point");
            tableMapping.ColumnMappings.Add("Tangentiality", "Tangentiality");
            tableMapping.ColumnMappings.Add("Circumstanciality", "Circumstanciality");
            tableMapping.ColumnMappings.Add("Preservation", "Preservation");
            tableMapping.ColumnMappings.Add("Neologism", "Neologism");
            tableMapping.ColumnMappings.Add("Suicidal_Ideatio", "Suicidal_Ideatio");
            tableMapping.ColumnMappings.Add("Homicidal_Ideation", "Homicidal_Ideation");
            tableMapping.ColumnMappings.Add("Hopelessness", "Hopelessness");
            tableMapping.ColumnMappings.Add("Helplessness", "Helplessness");
            tableMapping.ColumnMappings.Add("Worthlessness", "Worthlessness");
            tableMapping.ColumnMappings.Add("DelusionsType", "DelusionsType");
            tableMapping.ColumnMappings.Add("DelusionsContent", "DelusionsContent");
            tableMapping.ColumnMappings.Add("Delusions_of_reference", "Delusions_of_reference");
            tableMapping.ColumnMappings.Add("Grandiose_guilt", "Grandiose_guilt");
            tableMapping.ColumnMappings.Add("Nihilistic", "Nihilistic");
            tableMapping.ColumnMappings.Add("Hypochondriacal", "Hypochondriacal");
            tableMapping.ColumnMappings.Add("Religious", "Religious");
            tableMapping.ColumnMappings.Add("Sexual", "Sexual");
            tableMapping.ColumnMappings.Add("Delusion_of_control", "Delusion_of_control");
            tableMapping.ColumnMappings.Add("Thought_insertion", "Thought_insertion");
            tableMapping.ColumnMappings.Add("Withdrawal", "Withdrawal");
            tableMapping.ColumnMappings.Add("Thought_broadcasting", "Thought_broadcasting");
            tableMapping.ColumnMappings.Add("Obsessive_Compulsive_Phenomena", "Obsessive_Compulsive_Phenomena");
            tableMapping.ColumnMappings.Add("PHOBIAS", "PHOBIAS");
            tableMapping.ColumnMappings.Add("Disorders_Of_Perception", "Disorders_Of_Perception");
            tableMapping.ColumnMappings.Add("Depersonalization", "Depersonalization");
            tableMapping.ColumnMappings.Add("hallucinations", "hallucinations");
            tableMapping.ColumnMappings.Add("Auditory_redio", "Auditory_redio");
            tableMapping.ColumnMappings.Add("Illusions", "Illusions");
            tableMapping.ColumnMappings.Add("IllusionsText", "IllusionsText");
            tableMapping.ColumnMappings.Add("Consciousness", "Consciousness");
            tableMapping.ColumnMappings.Add("Orientation", "Orientation");
            tableMapping.ColumnMappings.Add("Serial_Seven", "Serial_Seven");
            tableMapping.ColumnMappings.Add("Serial_Three", "Serial_Three");
            tableMapping.ColumnMappings.Add("Serial_Seven_Text", "Serial_Seven_Text");
            tableMapping.ColumnMappings.Add("Serial_Three_Text", "Serial_Three_Text");
            tableMapping.ColumnMappings.Add("Intelligence", "Intelligence");
            tableMapping.ColumnMappings.Add("IQ", "IQ");
            tableMapping.ColumnMappings.Add("Memory", "Memory");
            tableMapping.ColumnMappings.Add("Judgement", "Judgement");
            tableMapping.ColumnMappings.Add("General_Knowledge", "General_Knowledge");
            tableMapping.ColumnMappings.Add("Concrete_thinking", "Concrete_thinking");
            tableMapping.ColumnMappings.Add("Concrete_thinking_Text", "Concrete_thinking_Text");
            tableMapping.ColumnMappings.Add("Abstrac_thinking", "Abstrac_thinking");
            tableMapping.ColumnMappings.Add("Insight", "Insight");
            tableMapping.ColumnMappings.Add("patient_id", "patient_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [mentalStateExamination] ([Physical_Appearance], [Dress], [Posture], " +
                "[Rapport], [Eye_Contact], [Cooperative], [Communicative], [Psychomotor_activity]" +
                ", [Movements], [Involuntary], [Voluntary], [Speech], [Tone], [Relevance], [Coher" +
                "ence], [Volume], [volume2], [Sample_of_talk], [mood_Subjective], [mood_Objective" +
                "], [Stream_of_thoughts_Poverty], [Stream_of_thoughts_Pressure], [Stream_of_thoug" +
                "hts_Thought], [Flight_of_Ideas], [Clang_association], [Loosening_of_association]" +
                ", [Knights_move], [Derailment], [Word_salad], [Taking_past_the_point], [Tangenti" +
                "ality], [Circumstanciality], [Preservation], [Neologism], [Suicidal_Ideatio], [H" +
                "omicidal_Ideation], [Hopelessness], [Helplessness], [Worthlessness], [DelusionsT" +
                "ype], [DelusionsContent], [Delusions_of_reference], [Grandiose_guilt], [Nihilist" +
                "ic], [Hypochondriacal], [Religious], [Sexual], [Delusion_of_control], [Thought_i" +
                "nsertion], [Withdrawal], [Thought_broadcasting], [Obsessive_Compulsive_Phenomena" +
                "], [PHOBIAS], [Disorders_Of_Perception], [Depersonalization], [hallucinations], " +
                "[Auditory_redio], [Illusions], [IllusionsText], [Consciousness], [Orientation], " +
                "[Serial_Seven], [Serial_Three], [Serial_Seven_Text], [Serial_Three_Text], [Intel" +
                "ligence], [IQ], [Memory], [Judgement], [General_Knowledge], [Concrete_thinking]," +
                " [Concrete_thinking_Text], [Abstrac_thinking], [Insight], [patient_id]) VALUES (" +
                "@Physical_Appearance, @Dress, @Posture, @Rapport, @Eye_Contact, @Cooperative, @C" +
                "ommunicative, @Psychomotor_activity, @Movements, @Involuntary, @Voluntary, @Spee" +
                "ch, @Tone, @Relevance, @Coherence, @Volume, @volume2, @Sample_of_talk, @mood_Sub" +
                "jective, @mood_Objective, @Stream_of_thoughts_Poverty, @Stream_of_thoughts_Press" +
                "ure, @Stream_of_thoughts_Thought, @Flight_of_Ideas, @Clang_association, @Looseni" +
                "ng_of_association, @Knights_move, @Derailment, @Word_salad, @Taking_past_the_poi" +
                "nt, @Tangentiality, @Circumstanciality, @Preservation, @Neologism, @Suicidal_Ide" +
                "atio, @Homicidal_Ideation, @Hopelessness, @Helplessness, @Worthlessness, @Delusi" +
                "onsType, @DelusionsContent, @Delusions_of_reference, @Grandiose_guilt, @Nihilist" +
                "ic, @Hypochondriacal, @Religious, @Sexual, @Delusion_of_control, @Thought_insert" +
                "ion, @Withdrawal, @Thought_broadcasting, @Obsessive_Compulsive_Phenomena, @PHOBI" +
                "AS, @Disorders_Of_Perception, @Depersonalization, @hallucinations, @Auditory_red" +
                "io, @Illusions, @IllusionsText, @Consciousness, @Orientation, @Serial_Seven, @Se" +
                "rial_Three, @Serial_Seven_Text, @Serial_Three_Text, @Intelligence, @IQ, @Memory," +
                " @Judgement, @General_Knowledge, @Concrete_thinking, @Concrete_thinking_Text, @A" +
                "bstrac_thinking, @Insight, @patient_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Physical_Appearance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Physical_Appearance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Posture", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Posture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rapport", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rapport", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Eye_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eye_Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cooperative", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cooperative", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communicative", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communicative", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Psychomotor_activity", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Psychomotor_activity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Movements", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Movements", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Involuntary", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Involuntary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Voluntary", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voluntary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speech", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speech", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Relevance", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Relevance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Coherence", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coherence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Volume", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Volume", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@volume2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "volume2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sample_of_talk", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sample_of_talk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mood_Subjective", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mood_Subjective", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mood_Objective", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mood_Objective", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stream_of_thoughts_Poverty", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stream_of_thoughts_Poverty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stream_of_thoughts_Pressure", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stream_of_thoughts_Pressure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stream_of_thoughts_Thought", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stream_of_thoughts_Thought", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flight_of_Ideas", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flight_of_Ideas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clang_association", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clang_association", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Loosening_of_association", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Loosening_of_association", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Knights_move", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Knights_move", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Derailment", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Derailment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Word_salad", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Word_salad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Taking_past_the_point", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Taking_past_the_point", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tangentiality", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tangentiality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Circumstanciality", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Circumstanciality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Preservation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Preservation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Neologism", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Neologism", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Suicidal_Ideatio", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Suicidal_Ideatio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Homicidal_Ideation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Homicidal_Ideation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hopelessness", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hopelessness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Helplessness", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helplessness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Worthlessness", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Worthlessness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelusionsType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelusionsType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelusionsContent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelusionsContent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Delusions_of_reference", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Delusions_of_reference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Grandiose_guilt", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grandiose_guilt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nihilistic", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nihilistic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hypochondriacal", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hypochondriacal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Religious", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Religious", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sexual", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sexual", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Delusion_of_control", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Delusion_of_control", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thought_insertion", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thought_insertion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Withdrawal", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Withdrawal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thought_broadcasting", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thought_broadcasting", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Obsessive_Compulsive_Phenomena", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Obsessive_Compulsive_Phenomena", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PHOBIAS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHOBIAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Disorders_Of_Perception", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Disorders_Of_Perception", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Depersonalization", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depersonalization", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hallucinations", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hallucinations", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Auditory_redio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Auditory_redio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Illusions", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Illusions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IllusionsText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IllusionsText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consciousness", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Consciousness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orientation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Orientation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Serial_Seven", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serial_Seven", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Serial_Three", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serial_Three", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Serial_Seven_Text", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serial_Seven_Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Serial_Three_Text", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Serial_Three_Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Intelligence", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Intelligence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IQ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Memory", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Judgement", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Judgement", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@General_Knowledge", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "General_Knowledge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Concrete_thinking", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Concrete_thinking", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Concrete_thinking_Text", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Concrete_thinking_Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Abstrac_thinking", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Abstrac_thinking", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Insight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Insight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@patient_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "patient_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PCMS_ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Physical_Appearance, Dress, Posture, Rapport, Eye_Contact, Cooperative, Communicative, Psychomotor_activity, Movements, Involuntary, Voluntary, Speech, Tone, [Relevance], Coherence, Volume, volume2, 
                         Sample_of_talk, mood_Subjective, mood_Objective, Stream_of_thoughts_Poverty, Stream_of_thoughts_Pressure, Stream_of_thoughts_Thought, Flight_of_Ideas, Clang_association, Loosening_of_association, 
                         Knights_move, Derailment, Word_salad, Taking_past_the_point, Tangentiality, Circumstanciality, Preservation, Neologism, Suicidal_Ideatio, Homicidal_Ideation, Hopelessness, Helplessness, Worthlessness, 
                         DelusionsType, DelusionsContent, Delusions_of_reference, Grandiose_guilt, Nihilistic, Hypochondriacal, Religious, Sexual, Delusion_of_control, Thought_insertion, Withdrawal, Thought_broadcasting, 
                         Obsessive_Compulsive_Phenomena, PHOBIAS, Disorders_Of_Perception, Depersonalization, hallucinations, Auditory_redio, Illusions, IllusionsText, Consciousness, Orientation, Serial_Seven, Serial_Three, 
                         Serial_Seven_Text, Serial_Three_Text, Intelligence, IQ, Memory, Judgement, General_Knowledge, Concrete_thinking, Concrete_thinking_Text, Abstrac_thinking, Insight, patient_id
FROM            mentalStateExamination
WHERE        (patient_id = @Param1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "patient_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(formulationDataset.mentalStateExaminationDataTable dataTable, global::System.Nullable<int> Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Param1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual formulationDataset.mentalStateExaminationDataTable GetData(global::System.Nullable<int> Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Param1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            formulationDataset.mentalStateExaminationDataTable dataTable = new formulationDataset.mentalStateExaminationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset.mentalStateExaminationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset dataSet) {
            return this.Adapter.Update(dataSet, "mentalStateExamination");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Physical_Appearance, 
                    string Dress, 
                    string Posture, 
                    string Rapport, 
                    string Eye_Contact, 
                    global::System.Nullable<byte> Cooperative, 
                    string Communicative, 
                    string Psychomotor_activity, 
                    string Movements, 
                    string Involuntary, 
                    string Voluntary, 
                    string Speech, 
                    string Tone, 
                    string Relevance, 
                    string Coherence, 
                    string Volume, 
                    string volume2, 
                    string Sample_of_talk, 
                    string mood_Subjective, 
                    string mood_Objective, 
                    global::System.Nullable<byte> Stream_of_thoughts_Poverty, 
                    global::System.Nullable<byte> Stream_of_thoughts_Pressure, 
                    global::System.Nullable<byte> Stream_of_thoughts_Thought, 
                    global::System.Nullable<byte> Flight_of_Ideas, 
                    global::System.Nullable<byte> Clang_association, 
                    global::System.Nullable<byte> Loosening_of_association, 
                    global::System.Nullable<byte> Knights_move, 
                    global::System.Nullable<byte> Derailment, 
                    global::System.Nullable<byte> Word_salad, 
                    global::System.Nullable<byte> Taking_past_the_point, 
                    global::System.Nullable<byte> Tangentiality, 
                    global::System.Nullable<byte> Circumstanciality, 
                    global::System.Nullable<byte> Preservation, 
                    global::System.Nullable<byte> Neologism, 
                    global::System.Nullable<byte> Suicidal_Ideatio, 
                    global::System.Nullable<byte> Homicidal_Ideation, 
                    global::System.Nullable<byte> Hopelessness, 
                    global::System.Nullable<byte> Helplessness, 
                    global::System.Nullable<byte> Worthlessness, 
                    string DelusionsType, 
                    string DelusionsContent, 
                    global::System.Nullable<byte> Delusions_of_reference, 
                    global::System.Nullable<byte> Grandiose_guilt, 
                    global::System.Nullable<byte> Nihilistic, 
                    global::System.Nullable<byte> Hypochondriacal, 
                    global::System.Nullable<byte> Religious, 
                    global::System.Nullable<byte> Sexual, 
                    global::System.Nullable<byte> Delusion_of_control, 
                    global::System.Nullable<byte> Thought_insertion, 
                    global::System.Nullable<byte> Withdrawal, 
                    global::System.Nullable<byte> Thought_broadcasting, 
                    string Obsessive_Compulsive_Phenomena, 
                    string PHOBIAS, 
                    string Disorders_Of_Perception, 
                    global::System.Nullable<byte> Depersonalization, 
                    string hallucinations, 
                    string Auditory_redio, 
                    global::System.Nullable<byte> Illusions, 
                    string IllusionsText, 
                    string Consciousness, 
                    string Orientation, 
                    global::System.Nullable<byte> Serial_Seven, 
                    global::System.Nullable<byte> Serial_Three, 
                    string Serial_Seven_Text, 
                    string Serial_Three_Text, 
                    string Intelligence, 
                    string IQ, 
                    string Memory, 
                    string Judgement, 
                    string General_Knowledge, 
                    global::System.Nullable<byte> Concrete_thinking, 
                    string Concrete_thinking_Text, 
                    string Abstrac_thinking, 
                    string Insight, 
                    global::System.Nullable<int> patient_id) {
            if ((Physical_Appearance == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Physical_Appearance));
            }
            if ((Dress == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Dress));
            }
            if ((Posture == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Posture));
            }
            if ((Rapport == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Rapport));
            }
            if ((Eye_Contact == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Eye_Contact));
            }
            if ((Cooperative.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((byte)(Cooperative.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Communicative == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Communicative));
            }
            if ((Psychomotor_activity == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Psychomotor_activity));
            }
            if ((Movements == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Movements));
            }
            if ((Involuntary == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Involuntary));
            }
            if ((Voluntary == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Voluntary));
            }
            if ((Speech == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Speech));
            }
            if ((Tone == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Tone));
            }
            if ((Relevance == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Relevance));
            }
            if ((Coherence == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Coherence));
            }
            if ((Volume == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Volume));
            }
            if ((volume2 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(volume2));
            }
            if ((Sample_of_talk == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Sample_of_talk));
            }
            if ((mood_Subjective == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(mood_Subjective));
            }
            if ((mood_Objective == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(mood_Objective));
            }
            if ((Stream_of_thoughts_Poverty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((byte)(Stream_of_thoughts_Poverty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Stream_of_thoughts_Pressure.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((byte)(Stream_of_thoughts_Pressure.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Stream_of_thoughts_Thought.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((byte)(Stream_of_thoughts_Thought.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Flight_of_Ideas.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((byte)(Flight_of_Ideas.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Clang_association.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((byte)(Clang_association.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Loosening_of_association.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((byte)(Loosening_of_association.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Knights_move.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((byte)(Knights_move.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Derailment.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((byte)(Derailment.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Word_salad.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((byte)(Word_salad.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Taking_past_the_point.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((byte)(Taking_past_the_point.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Tangentiality.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((byte)(Tangentiality.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Circumstanciality.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((byte)(Circumstanciality.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Preservation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((byte)(Preservation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Neologism.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((byte)(Neologism.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Suicidal_Ideatio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((byte)(Suicidal_Ideatio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Homicidal_Ideation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((byte)(Homicidal_Ideation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Hopelessness.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((byte)(Hopelessness.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Helplessness.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((byte)(Helplessness.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Worthlessness.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((byte)(Worthlessness.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((DelusionsType == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(DelusionsType));
            }
            if ((DelusionsContent == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(DelusionsContent));
            }
            if ((Delusions_of_reference.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((byte)(Delusions_of_reference.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Grandiose_guilt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((byte)(Grandiose_guilt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Nihilistic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((byte)(Nihilistic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Hypochondriacal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((byte)(Hypochondriacal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Religious.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((byte)(Religious.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Sexual.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((byte)(Sexual.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Delusion_of_control.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((byte)(Delusion_of_control.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Thought_insertion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((byte)(Thought_insertion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Withdrawal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((byte)(Withdrawal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Thought_broadcasting.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((byte)(Thought_broadcasting.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Obsessive_Compulsive_Phenomena == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(Obsessive_Compulsive_Phenomena));
            }
            if ((PHOBIAS == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(PHOBIAS));
            }
            if ((Disorders_Of_Perception == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(Disorders_Of_Perception));
            }
            if ((Depersonalization.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((byte)(Depersonalization.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((hallucinations == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(hallucinations));
            }
            if ((Auditory_redio == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(Auditory_redio));
            }
            if ((Illusions.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((byte)(Illusions.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((IllusionsText == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(IllusionsText));
            }
            if ((Consciousness == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(Consciousness));
            }
            if ((Orientation == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(Orientation));
            }
            if ((Serial_Seven.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((byte)(Serial_Seven.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Serial_Three.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((byte)(Serial_Three.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Serial_Seven_Text == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(Serial_Seven_Text));
            }
            if ((Serial_Three_Text == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(Serial_Three_Text));
            }
            if ((Intelligence == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(Intelligence));
            }
            if ((IQ == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(IQ));
            }
            if ((Memory == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(Memory));
            }
            if ((Judgement == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(Judgement));
            }
            if ((General_Knowledge == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(General_Knowledge));
            }
            if ((Concrete_thinking.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((byte)(Concrete_thinking.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Concrete_thinking_Text == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(Concrete_thinking_Text));
            }
            if ((Abstrac_thinking == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(Abstrac_thinking));
            }
            if ((Insight == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(Insight));
            }
            if ((patient_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((int)(patient_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class generalPhysicalExaminationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public generalPhysicalExaminationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "generalPhysicalExamination";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("height", "height");
            tableMapping.ColumnMappings.Add("weight", "weight");
            tableMapping.ColumnMappings.Add("pulse", "pulse");
            tableMapping.ColumnMappings.Add("skinEruption", "skinEruption");
            tableMapping.ColumnMappings.Add("lyingSystolic", "lyingSystolic");
            tableMapping.ColumnMappings.Add("sittingSystolic", "sittingSystolic");
            tableMapping.ColumnMappings.Add("standingSystolic", "standingSystolic");
            tableMapping.ColumnMappings.Add("temperature", "temperature");
            tableMapping.ColumnMappings.Add("dehydration", "dehydration");
            tableMapping.ColumnMappings.Add("pallorRb", "pallorRb");
            tableMapping.ColumnMappings.Add("pallorTxt", "pallorTxt");
            tableMapping.ColumnMappings.Add("jaundiceRb", "jaundiceRb");
            tableMapping.ColumnMappings.Add("jaundiceTxt", "jaundiceTxt");
            tableMapping.ColumnMappings.Add("oedemaRb", "oedemaRb");
            tableMapping.ColumnMappings.Add("oedemaTxt", "oedemaTxt");
            tableMapping.ColumnMappings.Add("kylonychiaRb", "kylonychiaRb");
            tableMapping.ColumnMappings.Add("kylonychiaTxt", "kylonychiaTxt");
            tableMapping.ColumnMappings.Add("thyroidGlandRb", "thyroidGlandRb");
            tableMapping.ColumnMappings.Add("thyroidGlandTxt", "thyroidGlandTxt");
            tableMapping.ColumnMappings.Add("clubbingRb", "clubbingRb");
            tableMapping.ColumnMappings.Add("clubbingTxt", "clubbingTxt");
            tableMapping.ColumnMappings.Add("respirationRateRb", "respirationRateRb");
            tableMapping.ColumnMappings.Add("respirationRateTxt", "respirationRateTxt");
            tableMapping.ColumnMappings.Add("lymphNodeRb", "lymphNodeRb");
            tableMapping.ColumnMappings.Add("lymphNodeTxt", "lymphNodeTxt");
            tableMapping.ColumnMappings.Add("jvpTxt", "jvpTxt");
            tableMapping.ColumnMappings.Add("jvpDD", "jvpDD");
            tableMapping.ColumnMappings.Add("visit_no", "visit_no");
            tableMapping.ColumnMappings.Add("lyingDiastolic", "lyingDiastolic");
            tableMapping.ColumnMappings.Add("standingDiastolic", "standingDiastolic");
            tableMapping.ColumnMappings.Add("sittingDiastolic", "sittingDiastolic");
            tableMapping.ColumnMappings.Add("skinErruptionDd", "skinErruptionDd");
            tableMapping.ColumnMappings.Add("dehydrationRadio", "dehydrationRadio");
            tableMapping.ColumnMappings.Add("swellingRadio", "swellingRadio");
            tableMapping.ColumnMappings.Add("pigmentationRadio", "pigmentationRadio");
            tableMapping.ColumnMappings.Add("repigmentationRadio", "repigmentationRadio");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [generalPhysicalExamination] ([id], [height], [weight], [pulse], [skinEruption], [lyingSystolic], [sittingSystolic], [standingSystolic], [temperature], [dehydration], [pallorRb], [pallorTxt], [jaundiceRb], [jaundiceTxt], [oedemaRb], [oedemaTxt], [kylonychiaRb], [kylonychiaTxt], [thyroidGlandRb], [thyroidGlandTxt], [clubbingRb], [clubbingTxt], [respirationRateRb], [respirationRateTxt], [lymphNodeRb], [lymphNodeTxt], [jvpTxt], [jvpDD], [visit_no], [lyingDiastolic], [standingDiastolic], [sittingDiastolic], [skinErruptionDd], [dehydrationRadio], [swellingRadio], [pigmentationRadio], [repigmentationRadio]) VALUES (@id, @height, @weight, @pulse, @skinEruption, @lyingSystolic, @sittingSystolic, @standingSystolic, @temperature, @dehydration, @pallorRb, @pallorTxt, @jaundiceRb, @jaundiceTxt, @oedemaRb, @oedemaTxt, @kylonychiaRb, @kylonychiaTxt, @thyroidGlandRb, @thyroidGlandTxt, @clubbingRb, @clubbingTxt, @respirationRateRb, @respirationRateTxt, @lymphNodeRb, @lymphNodeTxt, @jvpTxt, @jvpDD, @visit_no, @lyingDiastolic, @standingDiastolic, @sittingDiastolic, @skinErruptionDd, @dehydrationRadio, @swellingRadio, @pigmentationRadio, @repigmentationRadio)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@height", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "height", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@weight", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pulse", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pulse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@skinEruption", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "skinEruption", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lyingSystolic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lyingSystolic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sittingSystolic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sittingSystolic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@standingSystolic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "standingSystolic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@temperature", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "temperature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dehydration", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dehydration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pallorRb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pallorRb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pallorTxt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pallorTxt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@jaundiceRb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "jaundiceRb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@jaundiceTxt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "jaundiceTxt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@oedemaRb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "oedemaRb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@oedemaTxt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "oedemaTxt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kylonychiaRb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kylonychiaRb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kylonychiaTxt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kylonychiaTxt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@thyroidGlandRb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "thyroidGlandRb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@thyroidGlandTxt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "thyroidGlandTxt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clubbingRb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clubbingRb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clubbingTxt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clubbingTxt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@respirationRateRb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "respirationRateRb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@respirationRateTxt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "respirationRateTxt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lymphNodeRb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lymphNodeRb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lymphNodeTxt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lymphNodeTxt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@jvpTxt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "jvpTxt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@jvpDD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "jvpDD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@visit_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "visit_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lyingDiastolic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lyingDiastolic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@standingDiastolic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "standingDiastolic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sittingDiastolic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sittingDiastolic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@skinErruptionDd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "skinErruptionDd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dehydrationRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dehydrationRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@swellingRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "swellingRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pigmentationRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pigmentationRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@repigmentationRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "repigmentationRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PCMS_ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        id, height, weight, pulse, skinEruption, lyingSystolic, sittingSystolic, standingSystolic, temperature, dehydration, pallorRb, pallorTxt, jaundiceRb, jaundiceTxt, oedemaRb, oedemaTxt, kylonychiaRb, kylonychiaTxt, 
                         thyroidGlandRb, thyroidGlandTxt, clubbingRb, clubbingTxt, respirationRateRb, respirationRateTxt, lymphNodeRb, lymphNodeTxt, jvpTxt, jvpDD, visit_no, lyingDiastolic, standingDiastolic, sittingDiastolic, 
                         skinErruptionDd, dehydrationRadio, swellingRadio, pigmentationRadio, repigmentationRadio
FROM            generalPhysicalExamination
WHERE        (id = @Param1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(formulationDataset.generalPhysicalExaminationDataTable dataTable, int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual formulationDataset.generalPhysicalExaminationDataTable GetData(int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            formulationDataset.generalPhysicalExaminationDataTable dataTable = new formulationDataset.generalPhysicalExaminationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset.generalPhysicalExaminationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset dataSet) {
            return this.Adapter.Update(dataSet, "generalPhysicalExamination");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int id, 
                    string height, 
                    string weight, 
                    string pulse, 
                    string skinEruption, 
                    string lyingSystolic, 
                    string sittingSystolic, 
                    string standingSystolic, 
                    string temperature, 
                    string dehydration, 
                    global::System.Nullable<int> pallorRb, 
                    string pallorTxt, 
                    global::System.Nullable<int> jaundiceRb, 
                    string jaundiceTxt, 
                    global::System.Nullable<int> oedemaRb, 
                    string oedemaTxt, 
                    global::System.Nullable<int> kylonychiaRb, 
                    string kylonychiaTxt, 
                    global::System.Nullable<int> thyroidGlandRb, 
                    string thyroidGlandTxt, 
                    global::System.Nullable<int> clubbingRb, 
                    string clubbingTxt, 
                    global::System.Nullable<int> respirationRateRb, 
                    string respirationRateTxt, 
                    global::System.Nullable<int> lymphNodeRb, 
                    string lymphNodeTxt, 
                    string jvpTxt, 
                    string jvpDD, 
                    global::System.Nullable<int> visit_no, 
                    string lyingDiastolic, 
                    string standingDiastolic, 
                    string sittingDiastolic, 
                    string skinErruptionDd, 
                    global::System.Nullable<int> dehydrationRadio, 
                    global::System.Nullable<int> swellingRadio, 
                    global::System.Nullable<int> pigmentationRadio, 
                    global::System.Nullable<int> repigmentationRadio) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            if ((height == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(height));
            }
            if ((weight == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(weight));
            }
            if ((pulse == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(pulse));
            }
            if ((skinEruption == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(skinEruption));
            }
            if ((lyingSystolic == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(lyingSystolic));
            }
            if ((sittingSystolic == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(sittingSystolic));
            }
            if ((standingSystolic == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(standingSystolic));
            }
            if ((temperature == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(temperature));
            }
            if ((dehydration == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(dehydration));
            }
            if ((pallorRb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(pallorRb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((pallorTxt == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(pallorTxt));
            }
            if ((jaundiceRb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(jaundiceRb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((jaundiceTxt == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(jaundiceTxt));
            }
            if ((oedemaRb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(oedemaRb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((oedemaTxt == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(oedemaTxt));
            }
            if ((kylonychiaRb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(kylonychiaRb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((kylonychiaTxt == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(kylonychiaTxt));
            }
            if ((thyroidGlandRb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(thyroidGlandRb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((thyroidGlandTxt == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(thyroidGlandTxt));
            }
            if ((clubbingRb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(clubbingRb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((clubbingTxt == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(clubbingTxt));
            }
            if ((respirationRateRb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(respirationRateRb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((respirationRateTxt == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(respirationRateTxt));
            }
            if ((lymphNodeRb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(lymphNodeRb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((lymphNodeTxt == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(lymphNodeTxt));
            }
            if ((jvpTxt == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(jvpTxt));
            }
            if ((jvpDD == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(jvpDD));
            }
            if ((visit_no.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(visit_no.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((lyingDiastolic == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(lyingDiastolic));
            }
            if ((standingDiastolic == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(standingDiastolic));
            }
            if ((sittingDiastolic == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(sittingDiastolic));
            }
            if ((skinErruptionDd == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(skinErruptionDd));
            }
            if ((dehydrationRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(dehydrationRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((swellingRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(swellingRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((pigmentationRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(pigmentationRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((repigmentationRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(repigmentationRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class systematicExaminationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public systematicExaminationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "systematicExamination";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("meningialIrritation", "meningialIrritation");
            tableMapping.ColumnMappings.Add("carnivalNervers", "carnivalNervers");
            tableMapping.ColumnMappings.Add("sensorySystem", "sensorySystem");
            tableMapping.ColumnMappings.Add("motorSystem", "motorSystem");
            tableMapping.ColumnMappings.Add("superficialReflexes", "superficialReflexes");
            tableMapping.ColumnMappings.Add("deepReflexes", "deepReflexes");
            tableMapping.ColumnMappings.Add("cerebellarFunctions", "cerebellarFunctions");
            tableMapping.ColumnMappings.Add("fundoscopy", "fundoscopy");
            tableMapping.ColumnMappings.Add("cardioVascularSystem", "cardioVascularSystem");
            tableMapping.ColumnMappings.Add("respiratorySystem", "respiratorySystem");
            tableMapping.ColumnMappings.Add("gastroIntestinalSystem", "gastroIntestinalSystem");
            tableMapping.ColumnMappings.Add("nervousSystem", "nervousSystem");
            tableMapping.ColumnMappings.Add("urogenitalSystem", "urogenitalSystem");
            tableMapping.ColumnMappings.Add("visit_no", "visit_no");
            tableMapping.ColumnMappings.Add("cranialNervesRadio", "cranialNervesRadio");
            tableMapping.ColumnMappings.Add("sensorySystemRadio", "sensorySystemRadio");
            tableMapping.ColumnMappings.Add("motorSystemRadio", "motorSystemRadio");
            tableMapping.ColumnMappings.Add("superficialRadio", "superficialRadio");
            tableMapping.ColumnMappings.Add("deepReflexRadio", "deepReflexRadio");
            tableMapping.ColumnMappings.Add("cerebellarRadio", "cerebellarRadio");
            tableMapping.ColumnMappings.Add("fundoscopyRadio", "fundoscopyRadio");
            tableMapping.ColumnMappings.Add("cardiovascularRadio", "cardiovascularRadio");
            tableMapping.ColumnMappings.Add("respiratoryRadio", "respiratoryRadio");
            tableMapping.ColumnMappings.Add("gastrointestinalRadio", "gastrointestinalRadio");
            tableMapping.ColumnMappings.Add("urogenitalRadio", "urogenitalRadio");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [systematicExamination] ([id], [meningialIrritation], [carnivalNervers], [sensorySystem], [motorSystem], [superficialReflexes], [deepReflexes], [cerebellarFunctions], [fundoscopy], [cardioVascularSystem], [respiratorySystem], [gastroIntestinalSystem], [nervousSystem], [urogenitalSystem], [visit_no], [cranialNervesRadio], [sensorySystemRadio], [motorSystemRadio], [superficialRadio], [deepReflexRadio], [cerebellarRadio], [fundoscopyRadio], [cardiovascularRadio], [respiratoryRadio], [gastrointestinalRadio], [urogenitalRadio]) VALUES (@id, @meningialIrritation, @carnivalNervers, @sensorySystem, @motorSystem, @superficialReflexes, @deepReflexes, @cerebellarFunctions, @fundoscopy, @cardioVascularSystem, @respiratorySystem, @gastroIntestinalSystem, @nervousSystem, @urogenitalSystem, @visit_no, @cranialNervesRadio, @sensorySystemRadio, @motorSystemRadio, @superficialRadio, @deepReflexRadio, @cerebellarRadio, @fundoscopyRadio, @cardiovascularRadio, @respiratoryRadio, @gastrointestinalRadio, @urogenitalRadio)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@meningialIrritation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "meningialIrritation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@carnivalNervers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "carnivalNervers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sensorySystem", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sensorySystem", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@motorSystem", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "motorSystem", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@superficialReflexes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "superficialReflexes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@deepReflexes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "deepReflexes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cerebellarFunctions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cerebellarFunctions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fundoscopy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fundoscopy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cardioVascularSystem", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cardioVascularSystem", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@respiratorySystem", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "respiratorySystem", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gastroIntestinalSystem", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gastroIntestinalSystem", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nervousSystem", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nervousSystem", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@urogenitalSystem", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "urogenitalSystem", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@visit_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "visit_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cranialNervesRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cranialNervesRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sensorySystemRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sensorySystemRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@motorSystemRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "motorSystemRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@superficialRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "superficialRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@deepReflexRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "deepReflexRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cerebellarRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cerebellarRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fundoscopyRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fundoscopyRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cardiovascularRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cardiovascularRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@respiratoryRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "respiratoryRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gastrointestinalRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gastrointestinalRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@urogenitalRadio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "urogenitalRadio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PCMS_ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        id, meningialIrritation, carnivalNervers, sensorySystem, motorSystem, superficialReflexes, deepReflexes, cerebellarFunctions, fundoscopy, cardioVascularSystem, respiratorySystem, gastroIntestinalSystem, 
                         nervousSystem, urogenitalSystem, visit_no, cranialNervesRadio, sensorySystemRadio, motorSystemRadio, superficialRadio, deepReflexRadio, cerebellarRadio, fundoscopyRadio, cardiovascularRadio, 
                         respiratoryRadio, gastrointestinalRadio, urogenitalRadio
FROM            systematicExamination
WHERE        (id = @Param1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(formulationDataset.systematicExaminationDataTable dataTable, int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual formulationDataset.systematicExaminationDataTable GetData(int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            formulationDataset.systematicExaminationDataTable dataTable = new formulationDataset.systematicExaminationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset.systematicExaminationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset dataSet) {
            return this.Adapter.Update(dataSet, "systematicExamination");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int id, 
                    string meningialIrritation, 
                    string carnivalNervers, 
                    string sensorySystem, 
                    string motorSystem, 
                    string superficialReflexes, 
                    string deepReflexes, 
                    string cerebellarFunctions, 
                    string fundoscopy, 
                    string cardioVascularSystem, 
                    string respiratorySystem, 
                    string gastroIntestinalSystem, 
                    string nervousSystem, 
                    string urogenitalSystem, 
                    global::System.Nullable<int> visit_no, 
                    global::System.Nullable<int> cranialNervesRadio, 
                    global::System.Nullable<int> sensorySystemRadio, 
                    global::System.Nullable<int> motorSystemRadio, 
                    global::System.Nullable<int> superficialRadio, 
                    global::System.Nullable<int> deepReflexRadio, 
                    global::System.Nullable<int> cerebellarRadio, 
                    global::System.Nullable<int> fundoscopyRadio, 
                    global::System.Nullable<int> cardiovascularRadio, 
                    global::System.Nullable<int> respiratoryRadio, 
                    global::System.Nullable<int> gastrointestinalRadio, 
                    global::System.Nullable<int> urogenitalRadio) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            if ((meningialIrritation == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(meningialIrritation));
            }
            if ((carnivalNervers == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(carnivalNervers));
            }
            if ((sensorySystem == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(sensorySystem));
            }
            if ((motorSystem == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(motorSystem));
            }
            if ((superficialReflexes == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(superficialReflexes));
            }
            if ((deepReflexes == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(deepReflexes));
            }
            if ((cerebellarFunctions == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(cerebellarFunctions));
            }
            if ((fundoscopy == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(fundoscopy));
            }
            if ((cardioVascularSystem == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(cardioVascularSystem));
            }
            if ((respiratorySystem == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(respiratorySystem));
            }
            if ((gastroIntestinalSystem == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(gastroIntestinalSystem));
            }
            if ((nervousSystem == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(nervousSystem));
            }
            if ((urogenitalSystem == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(urogenitalSystem));
            }
            if ((visit_no.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(visit_no.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((cranialNervesRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(cranialNervesRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((sensorySystemRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(sensorySystemRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((motorSystemRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(motorSystemRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((superficialRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(superficialRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((deepReflexRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(deepReflexRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((cerebellarRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(cerebellarRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((fundoscopyRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(fundoscopyRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((cardiovascularRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(cardiovascularRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((respiratoryRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(respiratoryRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((gastrointestinalRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(gastrointestinalRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((urogenitalRadio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(urogenitalRadio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class investigationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public investigationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "investigation";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("visit_no", "visit_no");
            tableMapping.ColumnMappings.Add("completeBloodExamination", "completeBloodExamination");
            tableMapping.ColumnMappings.Add("completeUrineExamination", "completeUrineExamination");
            tableMapping.ColumnMappings.Add("liverFunctionTest", "liverFunctionTest");
            tableMapping.ColumnMappings.Add("ecg", "ecg");
            tableMapping.ColumnMappings.Add("bloodSugarRb", "bloodSugarRb");
            tableMapping.ColumnMappings.Add("bloodSugarArea", "bloodSugarArea");
            tableMapping.ColumnMappings.Add("thyroidFuctionTest", "thyroidFuctionTest");
            tableMapping.ColumnMappings.Add("radiography", "radiography");
            tableMapping.ColumnMappings.Add("ulgranSonography", "ulgranSonography");
            tableMapping.ColumnMappings.Add("ctScan", "ctScan");
            tableMapping.ColumnMappings.Add("otherComments", "otherComments");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [investigation] ([id], [visit_no], [completeBloodExamination], [completeUrineExamination], [liverFunctionTest], [ecg], [bloodSugarRb], [bloodSugarArea], [thyroidFuctionTest], [radiography], [ulgranSonography], [ctScan], [otherComments]) VALUES (@id, @visit_no, @completeBloodExamination, @completeUrineExamination, @liverFunctionTest, @ecg, @bloodSugarRb, @bloodSugarArea, @thyroidFuctionTest, @radiography, @ulgranSonography, @ctScan, @otherComments)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@visit_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "visit_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@completeBloodExamination", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "completeBloodExamination", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@completeUrineExamination", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "completeUrineExamination", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@liverFunctionTest", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "liverFunctionTest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ecg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ecg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bloodSugarRb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bloodSugarRb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bloodSugarArea", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bloodSugarArea", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@thyroidFuctionTest", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "thyroidFuctionTest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@radiography", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "radiography", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ulgranSonography", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ulgranSonography", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ctScan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ctScan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherComments", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherComments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PCMS_ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        id, visit_no, completeBloodExamination, completeUrineExamination, liverFunctionTest, ecg, bloodSugarRb, bloodSugarArea, thyroidFuctionTest, radiography, ulgranSonography, ctScan, otherComments
FROM            investigation
WHERE        (id = @Param1) AND (visit_no = @Param2)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "visit_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(formulationDataset.investigationDataTable dataTable, int Param1, int Param2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Param2));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual formulationDataset.investigationDataTable GetData(int Param1, int Param2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Param2));
            formulationDataset.investigationDataTable dataTable = new formulationDataset.investigationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset.investigationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(formulationDataset dataSet) {
            return this.Adapter.Update(dataSet, "investigation");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int id, int visit_no, string completeBloodExamination, string completeUrineExamination, string liverFunctionTest, string ecg, int bloodSugarRb, string bloodSugarArea, string thyroidFuctionTest, string radiography, string ulgranSonography, string ctScan, string otherComments) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(visit_no));
            if ((completeBloodExamination == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(completeBloodExamination));
            }
            if ((completeUrineExamination == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(completeUrineExamination));
            }
            if ((liverFunctionTest == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(liverFunctionTest));
            }
            if ((ecg == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ecg));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(bloodSugarRb));
            if ((bloodSugarArea == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(bloodSugarArea));
            }
            if ((thyroidFuctionTest == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(thyroidFuctionTest));
            }
            if ((radiography == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(radiography));
            }
            if ((ulgranSonography == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ulgranSonography));
            }
            if ((ctScan == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ctScan));
            }
            if ((otherComments == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(otherComments));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sysMedicationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public sysMedicationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sysMedication";
            tableMapping.ColumnMappings.Add("med_name", "med_name");
            tableMapping.ColumnMappings.Add("patient_reg", "patient_reg");
            tableMapping.ColumnMappings.Add("visit_no", "visit_no");
            tableMapping.ColumnMappings.Add("quantity", "quantity");
            tableMapping.ColumnMappings.Add("morning", "morning");
            tableMapping.ColumnMappings.Add("afternoon", "afternoon");
            tableMapping.ColumnMappings.Add("night", "night");
            tableMapping.ColumnMappings.Add("directions", "directions");
            tableMapping.ColumnMappings.Add("durations", "durations");
            tableMapping.ColumnMappings.Add("direction_summary", "direction_summary");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PCMS_ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        medicine.med_name, systematicMedication.patient_reg, systematicMedication.visit_no, systematicMedication.quantity, systematicMedication.morning, systematicMedication.afternoon, 
                         systematicMedication.night, systematicMedication.directions, systematicMedication.durations, systematicMedication.direction_summary
FROM            medicine INNER JOIN
                         systematicMedication ON medicine.med_id = systematicMedication.med_id
WHERE        (systematicMedication.patient_reg = @Param1) AND (systematicMedication.visit_no = @Param2)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "patient_reg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "visit_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(formulationDataset.sysMedicationDataTable dataTable, global::System.Nullable<int> Param1, global::System.Nullable<int> Param2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Param1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Param2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Param2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual formulationDataset.sysMedicationDataTable GetData(global::System.Nullable<int> Param1, global::System.Nullable<int> Param2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Param1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Param2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Param2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            formulationDataset.sysMedicationDataTable dataTable = new formulationDataset.sysMedicationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class counsellingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public counsellingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "counselling";
            tableMapping.ColumnMappings.Add("suggestion", "suggestion");
            tableMapping.ColumnMappings.Add("therapy_advise", "therapy_advise");
            tableMapping.ColumnMappings.Add("outcome", "outcome");
            tableMapping.ColumnMappings.Add("patient_reg", "patient_reg");
            tableMapping.ColumnMappings.Add("visit_no", "visit_no");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PCMS_ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        counselling.suggestion, counselling_advise.therapy_advise, counselling.outcome, counselling.patient_reg, counselling.visit_no
FROM            counselling INNER JOIN
                         counselling_advise ON counselling.therapy_advise = counselling_advise.advise_id
WHERE        (counselling.visit_no = @Param2) AND (counselling.patient_reg = @Param1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "visit_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "patient_reg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(formulationDataset.counsellingDataTable dataTable, global::System.Nullable<int> Param2, global::System.Nullable<int> Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Param2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Param1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Param1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual formulationDataset.counsellingDataTable GetData(global::System.Nullable<int> Param2, global::System.Nullable<int> Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Param2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Param1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Param1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            formulationDataset.counsellingDataTable dataTable = new formulationDataset.counsellingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private illnessHistoryTableAdapter _illnessHistoryTableAdapter;
        
        private drugHistoryTableAdapter _drugHistoryTableAdapter;
        
        private personalDetailsTableAdapter _personalDetailsTableAdapter;
        
        private familyHistoryTableAdapter _familyHistoryTableAdapter;
        
        private mentalStateExaminationTableAdapter _mentalStateExaminationTableAdapter;
        
        private generalPhysicalExaminationTableAdapter _generalPhysicalExaminationTableAdapter;
        
        private systematicExaminationTableAdapter _systematicExaminationTableAdapter;
        
        private investigationTableAdapter _investigationTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public illnessHistoryTableAdapter illnessHistoryTableAdapter {
            get {
                return this._illnessHistoryTableAdapter;
            }
            set {
                this._illnessHistoryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public drugHistoryTableAdapter drugHistoryTableAdapter {
            get {
                return this._drugHistoryTableAdapter;
            }
            set {
                this._drugHistoryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public personalDetailsTableAdapter personalDetailsTableAdapter {
            get {
                return this._personalDetailsTableAdapter;
            }
            set {
                this._personalDetailsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public familyHistoryTableAdapter familyHistoryTableAdapter {
            get {
                return this._familyHistoryTableAdapter;
            }
            set {
                this._familyHistoryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public mentalStateExaminationTableAdapter mentalStateExaminationTableAdapter {
            get {
                return this._mentalStateExaminationTableAdapter;
            }
            set {
                this._mentalStateExaminationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public generalPhysicalExaminationTableAdapter generalPhysicalExaminationTableAdapter {
            get {
                return this._generalPhysicalExaminationTableAdapter;
            }
            set {
                this._generalPhysicalExaminationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public systematicExaminationTableAdapter systematicExaminationTableAdapter {
            get {
                return this._systematicExaminationTableAdapter;
            }
            set {
                this._systematicExaminationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public investigationTableAdapter investigationTableAdapter {
            get {
                return this._investigationTableAdapter;
            }
            set {
                this._investigationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._illnessHistoryTableAdapter != null) 
                            && (this._illnessHistoryTableAdapter.Connection != null))) {
                    return this._illnessHistoryTableAdapter.Connection;
                }
                if (((this._drugHistoryTableAdapter != null) 
                            && (this._drugHistoryTableAdapter.Connection != null))) {
                    return this._drugHistoryTableAdapter.Connection;
                }
                if (((this._personalDetailsTableAdapter != null) 
                            && (this._personalDetailsTableAdapter.Connection != null))) {
                    return this._personalDetailsTableAdapter.Connection;
                }
                if (((this._familyHistoryTableAdapter != null) 
                            && (this._familyHistoryTableAdapter.Connection != null))) {
                    return this._familyHistoryTableAdapter.Connection;
                }
                if (((this._mentalStateExaminationTableAdapter != null) 
                            && (this._mentalStateExaminationTableAdapter.Connection != null))) {
                    return this._mentalStateExaminationTableAdapter.Connection;
                }
                if (((this._generalPhysicalExaminationTableAdapter != null) 
                            && (this._generalPhysicalExaminationTableAdapter.Connection != null))) {
                    return this._generalPhysicalExaminationTableAdapter.Connection;
                }
                if (((this._systematicExaminationTableAdapter != null) 
                            && (this._systematicExaminationTableAdapter.Connection != null))) {
                    return this._systematicExaminationTableAdapter.Connection;
                }
                if (((this._investigationTableAdapter != null) 
                            && (this._investigationTableAdapter.Connection != null))) {
                    return this._investigationTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._illnessHistoryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._drugHistoryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._personalDetailsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._familyHistoryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mentalStateExaminationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._generalPhysicalExaminationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._systematicExaminationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._investigationTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(formulationDataset dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._illnessHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.illnessHistory.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._illnessHistoryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._drugHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.drugHistory.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._drugHistoryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._personalDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.personalDetails.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._personalDetailsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._familyHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.familyHistory.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._familyHistoryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mentalStateExaminationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.mentalStateExamination.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mentalStateExaminationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._generalPhysicalExaminationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.generalPhysicalExamination.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._generalPhysicalExaminationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._systematicExaminationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.systematicExamination.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._systematicExaminationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._investigationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.investigation.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._investigationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(formulationDataset dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._illnessHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.illnessHistory.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._illnessHistoryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._drugHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.drugHistory.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._drugHistoryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._personalDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.personalDetails.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._personalDetailsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._familyHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.familyHistory.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._familyHistoryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mentalStateExaminationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.mentalStateExamination.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mentalStateExaminationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._generalPhysicalExaminationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.generalPhysicalExamination.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._generalPhysicalExaminationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._systematicExaminationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.systematicExamination.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._systematicExaminationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._investigationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.investigation.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._investigationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(formulationDataset dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._investigationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.investigation.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._investigationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._systematicExaminationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.systematicExamination.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._systematicExaminationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._generalPhysicalExaminationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.generalPhysicalExamination.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._generalPhysicalExaminationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mentalStateExaminationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.mentalStateExamination.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mentalStateExaminationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._familyHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.familyHistory.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._familyHistoryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._personalDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.personalDetails.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._personalDetailsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._drugHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.drugHistory.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._drugHistoryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._illnessHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.illnessHistory.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._illnessHistoryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(formulationDataset dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._illnessHistoryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._illnessHistoryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._drugHistoryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._drugHistoryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._personalDetailsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._personalDetailsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._familyHistoryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._familyHistoryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mentalStateExaminationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mentalStateExaminationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._generalPhysicalExaminationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._generalPhysicalExaminationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._systematicExaminationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._systematicExaminationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._investigationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._investigationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._illnessHistoryTableAdapter != null)) {
                    revertConnections.Add(this._illnessHistoryTableAdapter, this._illnessHistoryTableAdapter.Connection);
                    this._illnessHistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._illnessHistoryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._illnessHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._illnessHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._illnessHistoryTableAdapter.Adapter);
                    }
                }
                if ((this._drugHistoryTableAdapter != null)) {
                    revertConnections.Add(this._drugHistoryTableAdapter, this._drugHistoryTableAdapter.Connection);
                    this._drugHistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._drugHistoryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._drugHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._drugHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._drugHistoryTableAdapter.Adapter);
                    }
                }
                if ((this._personalDetailsTableAdapter != null)) {
                    revertConnections.Add(this._personalDetailsTableAdapter, this._personalDetailsTableAdapter.Connection);
                    this._personalDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._personalDetailsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._personalDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._personalDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._personalDetailsTableAdapter.Adapter);
                    }
                }
                if ((this._familyHistoryTableAdapter != null)) {
                    revertConnections.Add(this._familyHistoryTableAdapter, this._familyHistoryTableAdapter.Connection);
                    this._familyHistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._familyHistoryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._familyHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._familyHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._familyHistoryTableAdapter.Adapter);
                    }
                }
                if ((this._mentalStateExaminationTableAdapter != null)) {
                    revertConnections.Add(this._mentalStateExaminationTableAdapter, this._mentalStateExaminationTableAdapter.Connection);
                    this._mentalStateExaminationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mentalStateExaminationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mentalStateExaminationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mentalStateExaminationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mentalStateExaminationTableAdapter.Adapter);
                    }
                }
                if ((this._generalPhysicalExaminationTableAdapter != null)) {
                    revertConnections.Add(this._generalPhysicalExaminationTableAdapter, this._generalPhysicalExaminationTableAdapter.Connection);
                    this._generalPhysicalExaminationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._generalPhysicalExaminationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._generalPhysicalExaminationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._generalPhysicalExaminationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._generalPhysicalExaminationTableAdapter.Adapter);
                    }
                }
                if ((this._systematicExaminationTableAdapter != null)) {
                    revertConnections.Add(this._systematicExaminationTableAdapter, this._systematicExaminationTableAdapter.Connection);
                    this._systematicExaminationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._systematicExaminationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._systematicExaminationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._systematicExaminationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._systematicExaminationTableAdapter.Adapter);
                    }
                }
                if ((this._investigationTableAdapter != null)) {
                    revertConnections.Add(this._investigationTableAdapter, this._investigationTableAdapter.Connection);
                    this._investigationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._investigationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._investigationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._investigationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._investigationTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._illnessHistoryTableAdapter != null)) {
                    this._illnessHistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._illnessHistoryTableAdapter]));
                    this._illnessHistoryTableAdapter.Transaction = null;
                }
                if ((this._drugHistoryTableAdapter != null)) {
                    this._drugHistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._drugHistoryTableAdapter]));
                    this._drugHistoryTableAdapter.Transaction = null;
                }
                if ((this._personalDetailsTableAdapter != null)) {
                    this._personalDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._personalDetailsTableAdapter]));
                    this._personalDetailsTableAdapter.Transaction = null;
                }
                if ((this._familyHistoryTableAdapter != null)) {
                    this._familyHistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._familyHistoryTableAdapter]));
                    this._familyHistoryTableAdapter.Transaction = null;
                }
                if ((this._mentalStateExaminationTableAdapter != null)) {
                    this._mentalStateExaminationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mentalStateExaminationTableAdapter]));
                    this._mentalStateExaminationTableAdapter.Transaction = null;
                }
                if ((this._generalPhysicalExaminationTableAdapter != null)) {
                    this._generalPhysicalExaminationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._generalPhysicalExaminationTableAdapter]));
                    this._generalPhysicalExaminationTableAdapter.Transaction = null;
                }
                if ((this._systematicExaminationTableAdapter != null)) {
                    this._systematicExaminationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._systematicExaminationTableAdapter]));
                    this._systematicExaminationTableAdapter.Transaction = null;
                }
                if ((this._investigationTableAdapter != null)) {
                    this._investigationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._investigationTableAdapter]));
                    this._investigationTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591