string query= "INSERT INTO mentalStateExamination(patient_id,Physical_Appearance,Dress,Posture,Rapport,Eye_Contact,Injury,Cooperative,Communicative" +
           ",Psychomotor_activity,Movements,Speech,Tone,Rate,Rhythm,Volume,Sample_of_talk,mood_Subjective,mood_Objective,Stream_of_thoughts_Poverty,Stream_of_thoughts_Pressure" +
           ",Stream_of_thoughts_Thought,Flight_of_Ideas,Clang_association,Loosening_of_association,Knights_move,Derailment,Word_salad,Taking_past_the_point,Tangentiality,Circumstanciality,Preservation,Neologism" +
           ",Suicidal_Ideatio,Homicidal_Ideation,Hopelessness,Helplessness,Worthlessness,Delusions1,Delusions2,Delusions_of_reference" +
           ",Grandiose_guilt,Nihilistic,Hypochondriacal,Religious,Sexual,Delusion_of_control,Thought_insertion,Withdrawal,Thought_broadcasting,Obsessive_Compulsive_Phenomena" +
           ",PHOBIAS,Disorders_Of_Perception,Depersonalization,Auditory_redio,Auditory,Illusions,Consciousness,Orientation_time,Orientation_duraton" +
           ",Orientation_person,Serial_Seven_Test,Serial_Three_Test,Intelligence,IQ,Memory,Judgement,General_Knowledge,Concrete_thinking" +
           ",Abstrac_thinking,Insight)" +
           "VALUES('561604', @Physical_Appearance,@Dress,@Posture,@Rapport,@Eye_Contact,@Injury,@Cooperative,@Communicative" +
           ",@Psychomotor_activity,@Movements,@Speech,@Tone,@Rate,@Rhythm,@Volume,@Sample_of_talk,@mood_Subjective,@mood_Objective,@Stream_of_thoughts_Poverty,@Stream_of_thoughts_Pressure" +
           ",@Stream_of_thoughts_Thought,@Flight_of_Ideas,@Clang_association,@Loosening_of_association,@Knights_move,@Derailment,@Word_salad,@Taking_past_the_point,@Tangentiality,@Circumstanciality,@Preservation,@Neologism" +
           ",@Suicidal_Ideatio,@Homicidal_Ideation,@Hopelessness,@Helplessness,@Worthlessness,@Delusions1,@Delusions2,@Delusions_of_reference" +
           ",@Grandiose_guilt,@Nihilistic,@Hypochondriacal,@Religious,@Sexual,@Delusion_of_control,@Thought_insertion,@Withdrawal,@Thought_broadcasting,@Obsessive_Compulsive_Phenomena" +
           ",@PHOBIAS,@Disorders_Of_Perception,@Depersonalization,@Auditory_redio,@Auditory,@Illusions,@Consciousness,@Orientation_time,@Orientation_duraton" +
           ",@Orientation_person,@Serial_Seven_Test,@Serial_Three_Test,@Intelligence,@IQ,@Memory,@Judgement,@General_Knowledge,@Concrete_thinking" +
           ",@Abstrac_thinking,@Insight)";




            try
            {
                SqlConnection con = new SqlConnection(constring);
                SqlCommand cmd = new SqlCommand(query, con);
                cmd.Parameters.AddWithValue("@Physical_Appearance", physicalAppearance_txt.Text);
                cmd.Parameters.AddWithValue("@Dress", dress_txt.Text);
                cmd.Parameters.AddWithValue("@Posture", posture_txt.Text);
                cmd.Parameters.AddWithValue("@Rapport", rapport_txt.Text);
                cmd.Parameters.AddWithValue("@Eye_Contact", eyeContact_txt.Text);
                cmd.Parameters.AddWithValue("@Injury", injury_txt.Text);
                if (cooperative_radio.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Cooperative", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Cooperative", 0);
                }

                if (communicative_radio.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Communicative", 1);
                }
                else if (nonCommunicative_radio.Checked == true)

                {
                    cmd.Parameters.AddWithValue("@Communicative", 2);
                }
                else if (mute_radio.Checked == true)

                {
                    cmd.Parameters.AddWithValue("@Communicative", 3);
                }


                cmd.Parameters.AddWithValue("@Psychomotor_activity", psychomotorActivity_dd.SelectedItem.Text);
                cmd.Parameters.AddWithValue("@Movements", movements_dd.SelectedItem.Text);
                cmd.Parameters.AddWithValue("@Speech", speech_dd.SelectedItem.Text);
                cmd.Parameters.AddWithValue("@Tone", tone_txt.Text);
                cmd.Parameters.AddWithValue("@Rate", rate_txt.Text);
                cmd.Parameters.AddWithValue("@Rhythm", rhythm_txt.Text);
                cmd.Parameters.AddWithValue("@Volume", volume_dd.Text);
                cmd.Parameters.AddWithValue("@Sample_of_talk", sampleTalk_area.Value);
                cmd.Parameters.AddWithValue("@mood_Subjective", subjective_txt.Text);
                cmd.Parameters.AddWithValue("@mood_Objective", objective_dd.SelectedItem.Text);

                if (povertyOfThought_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Stream_of_thoughts_Poverty", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Stream_of_thoughts_Poverty", 0);
                }


                if (pressureOfThought_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Stream_of_thoughts_Pressure", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Stream_of_thoughts_Pressure", 0);
                }

                if (thoughtBlock_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Stream_of_thoughts_Thought", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Stream_of_thoughts_Thought", 0);
                }

                if (flightOfIdeas_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Flight_of_Ideas", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Flight_of_Ideas", 0);
                }

                if (clangAssociation_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Clang_association", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Clang_association", 0);
                }

                if (looseningOfAssociation_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Loosening_of_association", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Loosening_of_association", 0);
                }

                if (knightsMove_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Knights_move", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Knights_move", 0);
                }


                if (derailment_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Derailment", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Derailment", 0);
                }
                if (wordSalad_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Word_salad", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Word_salad", 0);
                }
                if (takingPastThePoint_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Taking_past_the_point", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Taking_past_the_point", 0);
                }
                if (tangentiality.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Tangentiality", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Tangentiality", 0);
                }
                if (circumstanciality_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Circumstanciality", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Circumstanciality", 0);
                }
                if (preservation_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Preservation", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Preservation", 0);
                }

                if (neologism_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Neologism", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Neologism", 0);
                }

                if (suicidalIdeation_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Suicidal_Ideatio", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Suicidal_Ideatio", 0);
                }

                if (homicidalIdeation_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Homicidal_Ideation", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Homicidal_Ideation", 0);
                }

                if (hopelessness_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Hopelessness", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Hopelessness", 0);
                }

                if (helplessness_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Helplessness", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Helplessness", 0);
                }

                if (worthlessness_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Worthlessness", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Worthlessness", 0);
                }

                cmd.Parameters.AddWithValue("@Delusions1", delusions_dd.SelectedItem.Text);
                cmd.Parameters.AddWithValue("@Delusions2", delusions2_dd.SelectedItem.Text);

                if (delusionsOfReference_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Delusions_of_reference", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Delusions_of_reference", 0);
                }
                if (grandioseGuilt_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Grandiose_guilt", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Grandiose_guilt", 0);
                }
                if (nihilistic_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Nihilistic", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Nihilistic", 0);
                }
                if (hypochondriacal_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Hypochondriacal", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Hypochondriacal", 0);
                }
                if (Religious_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Religious", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Religious", 0);
                }
                if (sexual_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Sexual", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Sexual", 0);
                }
                if (delusionOfControl_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Delusion_of_control", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Delusion_of_control", 0);
                }
                if (thoughtInsertion_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Thought_insertion", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Thought_insertion", 0);
                }


                if (withdrawal_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Withdrawal", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Withdrawal", 0);
                }

                if (thoughtBroadcasting_cb.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Thought_broadcasting", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Thought_broadcasting", 0);
                }

                cmd.Parameters.AddWithValue("@Obsessive_Compulsive_Phenomena", 0);


                cmd.Parameters.AddWithValue("@PHOBIAS", phobias_area.Value);
                cmd.Parameters.AddWithValue("@Disorders_Of_Perception", disordersOfPerception_area.Value);
                if (depersonalization_radio.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Depersonalization", 1);
                }
                else
                {
                    cmd.Parameters.AddWithValue("@Depersonalization", 0);
                }

                if (depersonalization_radio.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Auditory_redio", 1);
                }
                else if (depersonalization_radio.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Auditory_redio", 2);
                }
                else if (derealozation_radio.Checked == true)
                {
                    cmd.Parameters.AddWithValue("@Auditory_redio", 3);
                }

                cmd.Parameters.AddWithValue("@Auditory", hallucinations_dd.SelectedItem.Text);
                cmd.Parameters.AddWithValue("@Illusions", illusions_area.Value);
                cmd.Parameters.AddWithValue("@Consciousness", consciouness_dd.SelectedItem.Text);
                cmd.Parameters.AddWithValue("@Orientation_time", time_txt.Text);
                cmd.Parameters.AddWithValue("@Orientation_duraton", place_txt.Text);
                cmd.Parameters.AddWithValue("@Orientation_person", person_txt.Text);

                cmd.Parameters.AddWithValue("@Serial_Seven_Test", serialSevenTest_txt.Text);
                cmd.Parameters.AddWithValue("@Serial_Three_Test", serialThreeTest_txt.Text);
                cmd.Parameters.AddWithValue("@Intelligence", intelligence_dd.SelectedItem.Text);

                cmd.Parameters.AddWithValue("@IQ", iq_txt.Text);
                cmd.Parameters.AddWithValue("@Memory", memory_dd.SelectedItem.Text);
                cmd.Parameters.AddWithValue("@Judgement", judgement_dd.SelectedItem.Text);
                cmd.Parameters.AddWithValue("@General_Knowledge", generalKnowledge_area.Value);

                cmd.Parameters.AddWithValue("@Concrete_thinking", concreteThinking_area.Value);
                cmd.Parameters.AddWithValue("@Abstrac_thinking", abstractThinking_area.Value);
                cmd.Parameters.AddWithValue("@Insight", insight_area.Value);


                cmd.Connection = con;
                con.Open();
                cmd.ExecuteNonQuery();
                con.Close();
                alert_success.Visible = true;
                ClientScript.RegisterStartupScript(this.GetType(), "alert", "HideLabel();", true);
            }
            catch (Exception ex)
            {
                alert_fail.Visible = true;
                error.Text = "Error! " + ex.ToString();
                ClientScript.RegisterStartupScript(this.GetType(), "alert", "HideLabel();", true);
            }